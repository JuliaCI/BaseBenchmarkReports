cset: moving following pidspec: 4165
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.409438758 seconds)
loading group "string"... done (took 0.505382887 seconds)
loading group "linalg"... done (took 8.5190895 seconds)
loading group "parallel"... done (took 0.171708437 seconds)
loading group "find"... done (took 1.217647591 seconds)
loading group "tuple"... done (took 1.951744906 seconds)
loading group "dates"... done (took 1.486432243 seconds)
loading group "micro"... done (took 0.197515196 seconds)
loading group "io"... done (took 0.538612517 seconds)
loading group "scalar"... done (took 51.217480723 seconds)
loading group "sparse"... done (took 14.345098561 seconds)
loading group "broadcast"... done (took 1.306695095 seconds)
loading group "union"... done (took 9.800774668 seconds)
loading group "simd"... done (took 3.272943202 seconds)
loading group "random"... done (took 12.084966959 seconds)
loading group "problem"... done (took 2.178061356 seconds)
loading group "array"... done (took 24.653900336 seconds)
loading group "misc"... done (took 1.097124381 seconds)
loading group "sort"... done (took 3.67869565 seconds)
loading group "collection"... done (took 19.099409563 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.602071808 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128954627 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.262708747 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.27963746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.227912308 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165452009 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142664916 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.238370283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.516001502 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201786072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136881652 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528779793 seconds)
done (took 6.157662171 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.245969036 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240053376 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162663209 seconds)
  done (took 1.070980302 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074896694 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157203208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107318919 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092341894 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09153134 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106488899 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090481444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108262185 seconds)
  done (took 1.426096902 seconds)
done (took 3.491159586 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.48988875 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.853707779 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490862317 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.139293093 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.30766322 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.289047665 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267434442 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.19821377 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092143734 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089073463 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171555828 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.409558811 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.379870881 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962067693 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088422948 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093038224 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.126713198 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782719382 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079011802 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109661586 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.492547827 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.196636711 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098185097 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120573894 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183552964 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131539764 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158611849 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099015892 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.659674479 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.128435626 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175613124 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095497686 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156114133 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.18435071 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19245466 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108250433 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674598754 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19879287 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107631411 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098302372 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66522214 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116649118 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.177961152 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102623571 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085639124 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177600062 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.092834356 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076569352 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108284514 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084537376 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161056657 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449310661 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103248997 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.165707247 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091309939 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.712656236 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094121354 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274824613 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124114194 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093328358 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089424806 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085819261 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159846889 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.090852041 seconds)
  done (took 19.767520322 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144097022 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161418883 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077068338 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154830842 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120900937 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079465728 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09906676 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077391272 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106886727 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1941247 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136141267 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149942123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090555282 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089157875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128379882 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248089022 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109915407 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120976949 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087837087 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088438778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137837342 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096208793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088536477 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10639071 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168954988 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200018457 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109656454 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12100376 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088766624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094470681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140289472 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144062991 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0919746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087124603 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168859096 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12051974 seconds)
  done (took 5.119626079 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193344726 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119744184 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19983809 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.154833138 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141430504 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160071104 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129092652 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265819076 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197547982 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177708986 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112186893 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120007146 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078460194 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079211448 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076674291 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.462672614 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145502281 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168798164 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132511668 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108602591 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079956821 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.728555974 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083716672 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092064047 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080312241 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063205041 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199950515 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095220107 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.101004271 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08070456 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104713523 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129401956 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191243879 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124467151 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136457875 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080280654 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.131811143 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080336916 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219434778 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133022595 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101566438 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080275226 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076847872 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13472525 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114471436 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128587046 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084538155 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.101082081 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224997458 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082361542 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108859328 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.047677577 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197103176 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121553524 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075463662 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29364478 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100711675 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084493787 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076211507 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.800846838 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115858631 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082258688 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096053476 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080635512 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077325199 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430120123 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098490297 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.372533045 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084057715 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157697678 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082001348 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097534616 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087086235 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083616732 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101068732 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082508399 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077533367 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082310507 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098255081 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084031272 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.126354399 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085383261 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078046256 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158779059 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099642822 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.080840289 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125790845 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080103668 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095781014 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111657144 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093671768 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084690687 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.140371031 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098706201 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110992032 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099684077 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081707736 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142290073 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082564083 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.237301445 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082204174 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122170486 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099443092 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123726572 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104860179 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079355367 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099310899 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078098014 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078324786 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159204741 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084022587 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078399087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078727377 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112443452 seconds)
  done (took 28.082231931 seconds)
done (took 53.637950295 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.435987964 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080124102 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079063548 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09790234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080726769 seconds)
  done (took 1.519947481 seconds)
done (took 2.242623365 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314906505 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1841379 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101751424 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182592414 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084781702 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190215106 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177558265 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093484619 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201498916 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08226847 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182361565 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083177175 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102678586 seconds)
  done (took 2.728127228 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102345832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109233436 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100169968 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117913222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08346864 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100465922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118567717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112536219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101006082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111797168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08671233 seconds)
  done (took 1.868345486 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098631249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104539532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099471025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117591986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086788039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098472381 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116812207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10952808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100701881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112689019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086152993 seconds)
  done (took 1.857800774 seconds)
done (took 7.175458628 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.067263357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.204628219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163946936 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204392715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34563839 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232922482 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.559834239 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150797295 seconds)
  done (took 13.79906268 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.118578347 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.151817024 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09276383 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089037471 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090757069 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1079781 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091561749 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090378297 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.1101982 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089198541 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092275892 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.108252976 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08962711 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089666481 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09171137 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112079993 seconds)
  done (took 2.40436102 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140552839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139099147 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095152686 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098075353 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108449592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096889504 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09900381 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113410379 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092601106 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093896502 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100170105 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11210365 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096070833 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090357164 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112183783 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11570402 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093420229 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112114147 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113825654 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11186646 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09805512 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094138757 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111457991 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097064484 seconds)
  done (took 3.342032814 seconds)
done (took 20.275912984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144734682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098555832 seconds)
  done (took 0.975324381 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.137609773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152625887 seconds)
  done (took 1.023734618 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11061642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08772234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134831095 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102086595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089727455 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103447038 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116404111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104928157 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089767953 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090806834 seconds)
  done (took 1.766883409 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092207186 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093936752 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118821996 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.133062309 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.09682276 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108131051 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093715129 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09121625 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110543053 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088247526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093975106 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125152484 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096509228 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126551609 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094604697 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095751059 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114506937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09618445 seconds)
  done (took 2.609519743 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088943658 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090175347 seconds)
  done (took 0.92013945 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093367 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088365131 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091719657 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109582999 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092234443 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090758288 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107759384 seconds)
  done (took 1.415117081 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.4879358 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260109661 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358544361 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107911418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14601916 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.469949529 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143042925 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103583973 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101084469 seconds)
  done (took 2.954847609 seconds)
done (took 12.406071716 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088993503 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218962549 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.610224965 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112254155 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088733946 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156023286 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.282353243 seconds)
done (took 2.307279873 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337648814 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140695143 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082846727 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090387717 seconds)
  done (took 1.389691159 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080479653 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09671982 seconds)
  done (took 0.925365131 seconds)
done (took 3.063376519 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120450673 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088330132 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10379814 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087098019 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086942907 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087488577 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103445465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088845795 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087031673 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087473531 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107055574 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.086904173 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086356855 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101856048 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086266921 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088583648 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087577537 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106233958 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089515712 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088323353 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104731362 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090073136 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089332268 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090014595 seconds)
  done (took 3.024114615 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10738317 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088393945 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107000528 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090728675 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092851708 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109670704 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09698281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092030837 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110919133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092682334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095532047 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109813793 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092880487 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095305093 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091027065 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111674399 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095589513 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091863615 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108636857 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096443166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093223974 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109457299 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096959036 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094632376 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111987521 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094363565 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091928642 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108658795 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095154281 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093961608 seconds)
  done (took 3.719090664 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096571628 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083986944 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086508951 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11177653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085078598 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088919396 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104125276 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08886257 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092344956 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089843369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110584393 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090815358 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08834953 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108599164 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093118257 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094523192 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099262538 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106288932 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08822775 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092367987 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112272135 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08975057 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091921647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090920873 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109076224 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089719246 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090247022 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107370127 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092394173 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09035448 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092905688 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112229325 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09253975 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100893079 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112222603 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091104704 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097117892 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10468373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091986381 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088177785 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086587169 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108424783 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089084079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097334993 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107900104 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093397652 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089032553 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091268781 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108149999 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094579683 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087681951 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104396442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095381708 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092486641 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09317019 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10515222 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092984104 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08814029 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108865399 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091391722 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088340591 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088035988 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113683993 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092843807 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104962053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11475835 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088620844 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092147321 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10883251 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097128529 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092829864 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116812663 seconds)
  done (took 7.727584467 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100814697 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09665924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089453675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106632757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089358387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087430131 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108468267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090052734 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090882868 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112242017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090066411 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091700431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092960268 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11086591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092266697 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092770049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115076499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092664121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092114731 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11059573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094595693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0984646 seconds)
  done (took 2.901436836 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234811081 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096098908 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136728719 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118027361 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108061719 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11781232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093045406 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093496955 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109652675 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097650908 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098538264 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110014548 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106522313 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096084927 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114484569 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099419176 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108766278 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099503739 seconds)
  done (took 2.7962069 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102047006 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089962265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129533063 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090631691 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092006179 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091761135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115790888 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112146615 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112261942 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09568831 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101821435 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095748111 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110896953 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091702886 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090167824 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107492951 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092448999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090671308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112915638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096685422 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095552243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113947175 seconds)
  done (took 2.991398433 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104540961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090467853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125192484 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093274034 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09027949 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088413649 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112189397 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090577631 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096702035 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108368744 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091223433 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089720025 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122752579 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091858389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094765338 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107151182 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090089544 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09112959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108238483 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089988781 seconds)
  done (took 2.736116312 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169080632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121596355 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107860286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113050832 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121835069 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107333225 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114567761 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122771428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106025132 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133178931 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107504508 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106044468 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131064546 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112427654 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105220103 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130502443 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114567274 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131407837 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107432013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104845728 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133980311 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105347491 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130110231 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106773363 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105500624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12349423 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106238917 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110535164 seconds)
  done (took 4.052698783 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089373352 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088822158 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088078648 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106042542 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089347911 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089400402 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090303684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108233435 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089558419 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088228659 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108088177 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09348794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090989749 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087966532 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106459751 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089745035 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088899204 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104900108 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089398448 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089885503 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08868529 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10593724 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091243487 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089103839 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088053835 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107449333 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089143157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089316091 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107857303 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089447912 seconds)
  done (took 3.588446256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101025629 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099065727 seconds)
  done (took 0.965909862 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097717444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103363608 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088423758 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106689225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095611463 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090191414 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115224307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096482306 seconds)
  done (took 1.560429941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.137511813 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156698509 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095806691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102043631 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158597907 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149463901 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131332052 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094013623 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105474767 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083823324 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133108915 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101705234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091261314 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087188678 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108216099 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096397704 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091253209 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118721511 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097187021 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090957175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113510928 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097590352 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091838307 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11757503 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085961157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092504469 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111201177 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102099013 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087220696 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110325048 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089335665 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090615 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11030082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096130977 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090877648 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.157773067 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098384154 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086946412 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109186172 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095135426 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121263142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.109148834 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092086626 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087520247 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111748043 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094524775 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0949232 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108597518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083584155 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085342453 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107258415 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086391031 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092570732 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109217568 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091531798 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097440715 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10823293 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087417886 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086889587 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102736679 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089439733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086935004 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109546385 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094633799 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092592024 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091002128 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108450037 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091987565 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09212498 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109523241 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089999506 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105430796 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109432962 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097027634 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095316467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109300368 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088514605 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095936701 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107075678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092097256 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095049042 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.137183584 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093451827 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087224257 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103306933 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098152198 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094228966 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.112350122 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084158953 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099675884 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093056566 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.1103505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084807937 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088599903 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.10508153 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09568172 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084520064 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10937095 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091601909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096394847 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114484241 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09151708 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092373084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112859578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098014653 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092124156 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152316938 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087503142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086419815 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111364096 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095980062 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084304774 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10841923 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09127841 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088000645 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0867052 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113005261 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090398344 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092409202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112224317 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093242552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092597629 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110495577 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091440121 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088621449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113316795 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099493589 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093171291 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.111614372 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092618295 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092353883 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107917543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095372196 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088974975 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096312858 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106946904 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09123132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093343313 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114012773 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092677061 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087099894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.1080858 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093712039 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091127476 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11152465 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094353058 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087601602 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101385631 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092796023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087395076 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.109748704 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099711819 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088045917 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093334465 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10703397 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100207187 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087528525 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114669818 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094688543 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096996625 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114802593 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084759431 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089636265 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111477542 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094103016 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088186618 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.110191555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092170604 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10021787 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085354022 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113426638 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086406764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090276646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114817238 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095189414 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094608965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106243327 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130671233 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103179966 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114795083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092466363 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090989202 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11208831 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094716019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095354129 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096395702 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115173692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090531859 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088960047 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116645615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088172228 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093819054 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108556119 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094513619 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085818103 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.11025649 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085673681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096707237 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111046626 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097325301 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096920389 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093462607 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109751164 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100757653 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088152125 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11376059 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08522639 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096399928 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.120922087 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09892509 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09735993 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110174369 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091020823 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093649283 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116958505 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095035382 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093161125 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092550991 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104444294 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086209314 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097033982 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.11325642 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088374876 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091972978 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111112843 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095484443 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089273603 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102083775 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097212772 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095575001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105192552 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094122617 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089583015 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089082692 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118794995 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084901375 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087435675 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112938868 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096903857 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091722452 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109084719 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095960557 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097640873 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113379639 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096118545 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090180901 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117715688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092196709 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092636259 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088040489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112017701 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086484812 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09427794 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110703063 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090831368 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088589079 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113441571 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098104438 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09662196 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109333164 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097496839 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099046382 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097420437 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110374293 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097930453 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088719691 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103087832 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090897069 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084013402 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.112270011 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089139519 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097516632 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108047785 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092501734 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096035873 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112093336 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091391968 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097990307 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120124508 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087143698 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085738105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11706811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093175762 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089024652 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107255267 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093957932 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094108411 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094948532 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113928926 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089108459 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091542883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115766001 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090431824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098494137 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115752858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099101928 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087752887 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113065429 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090365936 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096058224 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085612095 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111629 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091197587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091559697 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108899128 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090543331 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088163968 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105348561 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090336052 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098291456 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.118375576 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098132127 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091198122 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109280376 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090749903 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088929375 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116994202 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091497378 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098747025 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092106744 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104972107 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085974551 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098143283 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110647694 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097862419 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088476183 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114331074 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099483609 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096616469 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092283426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120966097 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102213367 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098262733 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117775618 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085832768 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089212021 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116369863 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093508888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094984617 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.113736692 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088858198 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0946434 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.116287738 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0946616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090199155 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103967836 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094049754 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099011073 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094787018 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.115115495 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096193488 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093549382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105892755 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098206796 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097945459 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110312702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10008635 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092742253 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114006262 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09063653 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098527896 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09442849 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105387825 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086306991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089133082 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116345953 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088280065 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097315665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115163098 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091012405 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091512028 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097352988 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108887618 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096697472 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096150076 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110035291 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103197458 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092620773 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110838979 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09805612 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.096916901 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10540444 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091959543 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092051953 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116608773 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092296275 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097376925 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092143728 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116447517 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09707655 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097687014 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116244354 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098414304 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086400882 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120825301 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09661566 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095132416 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109474046 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09331751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088200702 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091574976 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117927541 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090693373 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102129941 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118235188 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092670521 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089671374 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11666445 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092450216 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098235855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108908051 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096218306 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087146905 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114188959 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094168039 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099240815 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109240091 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089460854 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098211137 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096460076 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117323828 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097388269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097997337 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106668826 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087951469 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096291054 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108668114 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102164785 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095709359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108961278 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091891376 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096279082 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09310455 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118032746 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088134418 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089756041 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112309757 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096111693 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090414231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107368101 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09745365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091439304 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113211219 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09347908 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0880002 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110457651 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100806918 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09229899 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089682157 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11027541 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10033219 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091221076 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109890214 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08767609 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098854126 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114774935 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099917347 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089180435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112350186 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092101982 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094550941 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118741691 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092685378 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093198569 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109668704 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09943091 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098120721 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10729393 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091143887 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102788547 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097118406 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114259097 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095955832 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091974908 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118652666 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100698391 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095723212 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105807341 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088737082 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092054933 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105975798 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097938233 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098891332 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111883798 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092221385 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097520133 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096143311 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115198941 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09604459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088283081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118594131 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09223801 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096666412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106536221 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087807761 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097300483 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098313488 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11141631 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093931661 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09459983 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11532768 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089225667 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091276284 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116824006 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097744044 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099649025 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11120383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092680986 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095752 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101289441 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114651841 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09251357 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100013284 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119357664 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094331352 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092768276 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11618089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100492714 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094998897 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118272103 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092554498 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092939019 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11923451 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101903813 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103641129 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112644146 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089150698 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09778957 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111016656 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089074538 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098492494 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119175546 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100429733 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094208478 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090630305 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122590291 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09984817 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093822438 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111900079 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092296782 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096568057 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111308394 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098922533 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090908268 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119064573 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10125063 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09901795 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12134451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088663798 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099289208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113858619 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103380705 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095082612 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087508197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108051917 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098304699 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099936197 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.118694462 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09792905 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097985212 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097197765 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114332481 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094979066 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09093884 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.120076785 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099749933 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095589182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116097077 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094264959 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094161202 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114027683 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101548316 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099425368 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112855425 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104889244 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100381508 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092203398 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113482537 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095281612 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095309447 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114222443 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099063481 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090731088 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10835873 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101187609 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100040226 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112365724 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103076035 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101548223 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112016788 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098117703 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101605612 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098894801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.11508389 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097420536 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097190226 seconds)
  done (took 60.501660273 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142725501 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10219575 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116416117 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096578978 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112887653 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117160405 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09835204 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097667906 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117441076 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105939334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096804237 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11418088 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112327091 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116107065 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134309246 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105932335 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116689235 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099684651 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09699139 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097051684 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130612485 seconds)
  done (took 3.146510037 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114038104 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109613004 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128559509 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112022103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102642015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128354817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108606495 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127987252 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113378926 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104624337 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131532545 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108135738 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124531933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106015058 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105607353 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12467185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11135368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103008093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128812872 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107694068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125784292 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109682941 seconds)
  done (took 3.354006293 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127592704 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099926288 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093749674 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115929264 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.1003412 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095484554 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119116274 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098033644 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10330171 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09155251 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108006398 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09271451 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094144955 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11494537 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092903435 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096810053 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121863298 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102337004 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101319656 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095718418 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108430449 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097929678 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098466753 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10644985 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102752435 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101982942 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095732551 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119767421 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088710806 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099112911 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116561342 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092299421 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088311726 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086687445 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108480675 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101137731 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09930345 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116687786 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098580603 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087701811 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096713535 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121091443 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088785603 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097306836 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.116076765 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091321099 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099707495 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095582179 seconds)
  done (took 5.709978186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126048799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161353856 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10144099 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13543509 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133481322 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106471213 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0997155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134335158 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097949628 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12151365 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113464722 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110667336 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124879091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104480266 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.123902817 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103043254 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103916894 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099800896 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125883732 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101008314 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125970792 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10390688 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.349261646 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130127771 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104716348 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100552235 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119945144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106708068 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109840605 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126724168 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10503232 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106018614 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131715707 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09953543 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119250305 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102448629 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111534703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121274168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102620931 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099598331 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119394908 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10483274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101036198 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132605461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103753784 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102218532 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121938804 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099315837 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109247304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121847989 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107776431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110931363 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125329758 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102737166 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102172824 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13070265 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100747964 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119670894 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103231158 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108763854 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117607253 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106000589 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11041317 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12145046 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106867367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111816795 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122792172 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103238975 seconds)
  done (took 8.892093084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130216691 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103088259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132644094 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112509604 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103414361 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124819289 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105186218 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102993114 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126286339 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109837264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122563193 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19588259 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123939771 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109408272 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104176992 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124594644 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10523012 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103836996 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124979029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105643924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103635026 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134336431 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105197314 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132202919 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114128118 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10047936 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123982517 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105714707 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113065032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124800195 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115982281 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124603017 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107007775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113228899 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135730424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104064289 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098604202 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125152408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10441703 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103905174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123344347 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112621782 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124017833 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104260919 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104799621 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124972991 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114251586 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.113337631 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128386967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109643912 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123558116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113471543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103780471 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12521529 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112445401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.119864607 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133848691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112493914 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124692605 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113574282 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131929933 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120722032 seconds)
  done (took 8.088201829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098863778 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09770057 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09682535 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118638446 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098192186 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098135767 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09713142 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117832386 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098217271 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098253976 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117804007 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098793562 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098369147 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097231084 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11823721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098281591 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098116871 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117843681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099951955 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09811502 seconds)
  done (took 2.897309737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108716948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115720521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120556582 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107855789 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09942522 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12587712 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101951096 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101108789 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099540062 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122247263 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109256176 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129211515 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101369504 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105980428 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129547599 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10730504 seconds)
  done (took 2.620894947 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119263578 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115647755 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185104736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102136378 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12118398 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108285252 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099776601 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102607728 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121509724 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107023325 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104055747 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125436576 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101782146 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10057528 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122084929 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104093203 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099596842 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124257706 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102478094 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185042534 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106096089 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102161717 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.101813171 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125230136 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102976035 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10354991 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128934102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101377598 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102117984 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124176416 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10301547 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106594894 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12191563 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105995556 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101372803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12142675 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101643939 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100392544 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12390009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101780611 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10280936 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102885195 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.122643064 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103431159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098709008 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122733958 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099597042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105311378 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122433883 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10325322 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099762348 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127038369 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106027037 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107617103 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127924524 seconds)
  done (took 7.02890909 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111642738 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101940351 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132567176 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100260332 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101727209 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101706398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123598997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103725513 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101779748 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119312703 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102435357 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102175249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122449581 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102325889 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102119515 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121817458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101026862 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103529784 seconds)
  done (took 2.793796882 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106283725 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100588888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103921815 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122256824 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101351485 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100475285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121780342 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099961195 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099596488 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100764748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123545389 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101010558 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099283543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121893179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100658378 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100233008 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120699801 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099946996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100344595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098637941 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121991566 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100898401 seconds)
  done (took 3.188821292 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112798351 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180532424 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106495732 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188824116 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098542662 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094868 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127595 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096167841 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111207636 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117188795 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096221132 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095990427 seconds)
  done (took 2.271025498 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126807546 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135661624 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121677513 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10097536 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108334428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126303128 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105215414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105080927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133340802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11640436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126605848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113565701 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112000084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133539198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109754687 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128692325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106113654 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104539281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122579548 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121746594 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105447374 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133121125 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104784781 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104473945 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126497765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112805576 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132688146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119137253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105792425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134594516 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11017269 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125993282 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114961877 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115616808 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122577655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113283866 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10495227 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14149044 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109631195 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134065587 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102347769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108759232 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134330144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11145253 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134358505 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107284634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111445155 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128357706 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108234142 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125479009 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133178191 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114331137 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130815432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114696491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11243895 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147383986 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116669098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136042223 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11089474 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138426076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114629922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108581641 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136002969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117160378 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132715015 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113392725 seconds)
  done (took 8.72917131 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141154342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101626304 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125958133 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118165377 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134400282 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107361535 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108077266 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1275821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108009291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102560877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169451474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106775578 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134458965 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114871335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105690979 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126303191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107470078 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114471356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124382073 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12687776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126718589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115027455 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113243125 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135592961 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118440472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130371247 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107345878 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106058631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128200354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10850798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110790981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127656831 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115767093 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101829276 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136123676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105700843 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127121172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113633771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106329124 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13095479 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115116819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120949126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128698302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105825933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13987358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108071376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106519842 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124171108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106909648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102976984 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139804253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117904637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139393793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115464887 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106526798 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128565029 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107114786 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1074986 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129115644 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111574031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134179084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109183925 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127616166 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129307616 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108317653 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113125016 seconds)
  done (took 8.709328008 seconds)
done (took 164.744538891 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.145560853 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184169101 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144813557 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175522865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093123632 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127065033 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145720522 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145053102 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091558775 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115131267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093950529 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094028773 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181128863 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093312431 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091828793 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09341459 seconds)
  done (took 2.861793706 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190888912 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306151905 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109938947 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117636878 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098170655 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096302587 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11726855 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09976649 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097532966 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124872212 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097790304 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094107095 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123737257 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094118947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096765868 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097146726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12557384 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097179656 seconds)
  done (took 3.047341499 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116766159 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142479092 seconds)
  done (took 1.120306322 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127410713 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210934351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278751889 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166358709 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118306803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137056956 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145204791 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131225848 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185232722 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130254725 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110076182 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095793125 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145218649 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102146106 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.133515941 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09793665 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124060387 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134184348 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112169033 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099851614 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140011019 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101537996 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102319339 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132546107 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176599687 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131856333 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102609266 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101037456 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121782206 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112265746 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104540831 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136464735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110382949 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176786585 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100669594 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1727407 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103519733 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120034928 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112873209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097340494 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123678001 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101628882 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132777672 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097015462 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101687865 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125186798 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10273706 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.1010481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126159502 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104707463 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104643833 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126558887 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170288504 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105592085 seconds)
  done (took 7.726850297 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858395049 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141981479 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097511857 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.00090509 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147931554 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113044641 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849929608 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145283284 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257421774 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87698029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119207391 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109060189 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257523882 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25560667 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280205985 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358238366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.6959247 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137349439 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127137108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162043823 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107388809 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145652113 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119000135 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519607738 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100508551 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097731684 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130365074 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11162072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173921968 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098889876 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123975167 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172720998 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289872096 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204386508 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119825723 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098344135 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098785112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183400337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270856466 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213146781 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192258701 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096513325 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097120554 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130589316 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119994497 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095027789 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176858189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189531222 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190291384 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104380606 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132334464 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111203747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10582794 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174993149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09688591 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.38025305 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367611299 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098387017 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128002665 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115469804 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269176791 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099241883 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229779113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1487085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210299839 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097818963 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.888070713 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182683846 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097133106 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127299068 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106894846 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103266001 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129395004 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164554371 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.502140485 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131657221 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105560488 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09868741 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229673014 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098878109 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120598898 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156055723 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121835406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106665417 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134251738 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111550574 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187279249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265871909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112848463 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107053595 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12676605 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112326207 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120408564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215847429 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223602438 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173237116 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233653776 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108472949 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178615071 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182618031 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105304313 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187562707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105762738 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1395797 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107611149 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217329892 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155720241 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100484363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125214527 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109458369 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156100726 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104767351 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108209036 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188679785 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553617294 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182500003 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09732093 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103370886 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12995771 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156808475 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128952422 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264878134 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108511932 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181512324 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10625622 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.116848039 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109369062 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17894259 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110286636 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129710303 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108695947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107619409 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277701324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21699753 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132306365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248075719 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175508122 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127230914 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170021437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130063868 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162783823 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133339223 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108337545 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121280214 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877254076 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113768741 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106396197 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127198767 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183766082 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121650787 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101861696 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09832021 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117808678 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862140127 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104162781 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097085334 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100688769 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129464793 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107269284 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127732574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10624471 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176304776 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242083762 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112181778 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128264342 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100056687 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177194617 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100785435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098433062 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123354347 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101593967 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107909821 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12711669 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102800895 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191080249 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173270871 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228199356 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.631780009 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098886815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098685734 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26001264 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10084518 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320173878 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10602963 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.25185152 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160289416 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119314975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361763502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184112352 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184947154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.124505757 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166199129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11904537 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109578182 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176752139 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100738195 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105453033 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174313225 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135178794 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113871335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274619458 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121320179 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232315506 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118823967 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165193491 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124186535 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10827635 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320985645 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098720052 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141061064 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175770956 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104381755 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099073148 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.672200553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121621569 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111794916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106590947 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.250645747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161280479 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129715775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110335794 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133777938 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154442494 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233177078 seconds)
  done (took 47.510090309 seconds)
done (took 63.123526319 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300287138 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256985562 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.385319965 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213442171 seconds)
  done (took 2.112269782 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.245700551 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156054116 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.21292209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095653066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.241623255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095043368 seconds)
  done (took 1.933403886 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.501978021 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.382310157 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302411072 seconds)
  done (took 2.079347458 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259925462 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245273504 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327972298 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414399274 seconds)
  done (took 2.252096351 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.279401952 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133197617 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12124729 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202716619 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.251865297 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.382363706 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.163713731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178343507 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.15167382 seconds)
  done (took 2.80373619 seconds)
done (took 12.069669427 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.212124898 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.235436354 seconds)
    (3/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.143125248 seconds)
    (4/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.313747671 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.16252256 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132836096 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.208165027 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.221027234 seconds)
    (9/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.299613198 seconds)
    (10/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233633738 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.220181595 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194357525 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.196906392 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.31376027 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184363081 seconds)
    (16/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.244462885 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.23092526 seconds)
    (18/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21561433 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151886251 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.309915294 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.161321024 seconds)
    (22/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.137642562 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.226720301 seconds)
    (24/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178396588 seconds)
    (25/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.171946873 seconds)
    (26/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193561537 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160251198 seconds)
    (28/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196795875 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076427237 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.234918621 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101001648 seconds)
    (32/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084463811 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143007244 seconds)
    (34/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.155741284 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.154812383 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133205734 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175183043 seconds)
    (38/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.251396775 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.191236758 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099456536 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.183429968 seconds)
    (42/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107318419 seconds)
    (43/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.202795152 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.176049907 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.261406496 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176677873 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133223928 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109134586 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.077236035 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.160540501 seconds)
    (51/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.100968298 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079123003 seconds)
    (53/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.105936718 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123954494 seconds)
    (55/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178156959 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107363228 seconds)
    (57/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075016619 seconds)
    (58/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.099458009 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136582401 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103210789 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127849031 seconds)
    (62/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100517303 seconds)
    (63/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105407361 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077636728 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099997247 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123652238 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078731167 seconds)
    (68/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110160235 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12411118 seconds)
    (70/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.1644602 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.157043749 seconds)
    (72/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.147086589 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101157293 seconds)
    (74/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.080855678 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125846582 seconds)
    (76/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076492201 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119508561 seconds)
    (78/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.076097764 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.13947054 seconds)
    (80/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162760579 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128016884 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.143557601 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120340753 seconds)
    (84/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.158085519 seconds)
    (85/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.146926881 seconds)
    (86/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139533421 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077890815 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.206524967 seconds)
    (89/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07684917 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096913801 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13445839 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080136643 seconds)
    (93/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.079327298 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09968846 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.20259875 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125685995 seconds)
    (97/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07628616 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12234808 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.079677362 seconds)
    (100/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076522776 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106983533 seconds)
    (102/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.1010406 seconds)
    (103/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162090695 seconds)
    (104/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076725723 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18256728 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07750241 seconds)
    (107/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076463342 seconds)
    (108/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076677741 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10666162 seconds)
    (110/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149317866 seconds)
    (111/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137011164 seconds)
    (112/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075932717 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075252006 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100193314 seconds)
    (115/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.138462655 seconds)
    (116/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109958606 seconds)
    (117/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106605814 seconds)
    (118/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.105999852 seconds)
    (119/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.144955844 seconds)
    (120/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.13451676 seconds)
    (121/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127163424 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10887274 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121202547 seconds)
    (124/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.143437772 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106133332 seconds)
    (126/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084589831 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10385405 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.131505427 seconds)
    (129/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107931139 seconds)
    (130/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109294879 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082601664 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102988374 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102324175 seconds)
    (134/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159458692 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106606849 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10997281 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101581217 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100055735 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126982918 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.175706441 seconds)
    (141/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.154455134 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080618386 seconds)
    (143/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.076909203 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077639172 seconds)
    (145/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.086466512 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126473505 seconds)
    (147/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.154197199 seconds)
    (148/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.1313926 seconds)
    (149/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101232613 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078298338 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077129488 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09918452 seconds)
    (153/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.123637303 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101996328 seconds)
    (155/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078025689 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076006575 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131362731 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099496659 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098492952 seconds)
    (160/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106158103 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147111066 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10167618 seconds)
    (163/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134706403 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.104028127 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080283001 seconds)
    (166/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077033259 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10725868 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082364828 seconds)
    (169/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.106254643 seconds)
    (170/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110007056 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109122821 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079110609 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108172203 seconds)
    (174/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077845901 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077591263 seconds)
    (176/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078090267 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123442444 seconds)
    (178/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084506635 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101745658 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119347675 seconds)
    (181/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.099150521 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10049618 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07753816 seconds)
    (184/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077530746 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079354609 seconds)
    (186/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122366422 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101703 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079126776 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076641066 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100169852 seconds)
    (191/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079580244 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080345347 seconds)
  done (took 25.852672373 seconds)
done (took 26.758531799 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174783561 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102203298 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.13163917 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107386216 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196550059 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115796371 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122324216 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135438434 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116833231 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10857476 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.121780678 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121004673 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106892192 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199534501 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110252468 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.123681274 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100361093 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118912882 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146211452 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124478042 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.171273499 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126169466 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117704663 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098703948 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.197790055 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100688183 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132509071 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109650132 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120599246 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.132806746 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109457216 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098992198 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.148870428 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124213675 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099392251 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132366383 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100729011 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085159157 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108384416 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134416058 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121784416 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109407538 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.132461851 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101792874 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.109796233 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134566879 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102732447 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111356215 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.121599595 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111506554 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103663522 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147631529 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110118864 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09893364 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.097940492 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126185466 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120094949 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100609657 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.146408798 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100734666 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10003067 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123748207 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113924619 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100923774 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131809817 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102105488 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109203804 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111109858 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133423082 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103599405 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099801875 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132229772 seconds)
done (took 9.647629976 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106401133 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145076033 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197351425 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.206056357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127486776 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113604758 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.138826461 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123391262 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111932862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144912364 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136228693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155916007 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179231404 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139812482 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114427484 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111734203 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137494148 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109822791 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.202402158 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125326728 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12389744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140905502 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126420387 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14047962 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105209269 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13538654 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13136503 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113199008 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103291772 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136726015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126031559 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103264966 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.130448274 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123752544 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121254811 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138299288 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116228992 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112769589 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129573406 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106075408 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111523623 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145125609 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104762648 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114143027 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138423686 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119527143 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112287517 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141706063 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105715237 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111093614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13009554 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131676198 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114818087 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1467166 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116870937 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11559933 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142944608 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116773204 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107347387 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142180004 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104979195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103583189 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130870251 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126489792 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107049779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143918223 seconds)
  done (took 9.411281366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123690176 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13414297 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140072369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115307718 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108623503 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124175543 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098571195 seconds)
  done (took 1.792379896 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101728663 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181501783 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205264542 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204738053 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176023943 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.21642862 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146273887 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100634267 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135035176 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135146069 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181331023 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234894716 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110543305 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140750659 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183272076 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125393386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186286972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126063945 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113966031 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208528659 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116956712 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130086768 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138609425 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101076248 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203011817 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101321361 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258841924 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117816254 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133853007 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113819247 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113842789 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205105948 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.202003109 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115281229 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107762728 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20795994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.176124684 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140824017 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.21686083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105648212 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.175797415 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140128334 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115857341 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113657223 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141836814 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166217754 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144626963 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114591066 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11256243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214572149 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109693266 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206778084 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110568148 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.140197024 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111463487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11566907 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148849806 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114851502 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212466908 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117420788 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206269489 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180163312 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.206375464 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20701693 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125418705 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207151075 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.172494133 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139763034 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109102671 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11433336 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.210575379 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112536382 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140391948 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170135719 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144559274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182380664 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209623055 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111453058 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139940253 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104882368 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111494973 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.126842357 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173162267 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138458938 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113643459 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117958674 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138570096 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115129858 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104723543 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150050544 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114381479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112307642 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144432555 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114729493 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116088064 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211886485 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.136631545 seconds)
  done (took 15.436164105 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104335787 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10235559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106455506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128519399 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103679004 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102138805 seconds)
  done (took 1.60942402 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139492623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115433973 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149214462 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118504739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158668553 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.212955693 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.214242981 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109384454 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156677132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125238656 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.211673531 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.189574798 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21219225 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117519738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.216219918 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116188997 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.21679167 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113476665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149305452 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113113796 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114501082 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143938385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114539701 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.204911173 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117406639 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116810938 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135583289 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126832801 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122674437 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13796324 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119666551 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115421781 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135001688 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109270428 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217192242 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10861626 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136814287 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119070472 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118466804 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140423694 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192395073 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138948544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122171598 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117272587 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136424341 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108962508 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11834205 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136352542 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.190994777 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144496383 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118752278 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116751446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142226356 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118764381 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.133516489 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112656349 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118773547 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220745519 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118746761 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134807951 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116365029 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116199556 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138033334 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120657707 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116818886 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144538286 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108443538 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140668681 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116131433 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117155935 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.142925024 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119362309 seconds)
  done (took 11.020588836 seconds)
done (took 40.20932539 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.630913629 seconds)
  done (took 2.593078433 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.866550004 seconds)
  done (took 1.832350164 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.00265453 seconds)
  done (took 18.998881974 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505792736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583229198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.126098609 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.145142768 seconds)
  done (took 3.326613854 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.039033686 seconds)
  done (took 4.029908256 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302565464 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260672293 seconds)
  done (took 1.535466271 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.70792888 seconds)
  done (took 1.689865672 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494841186 seconds)
  done (took 2.469377172 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.372909915 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164587753 seconds)
  done (took 1.522716733 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.602233262 seconds)
  done (took 1.5889263 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.544643883 seconds)
  done (took 20.532098068 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252141954 seconds)
  done (took 1.242044057 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282492302 seconds)
  done (took 1.274372526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.566413953 seconds)
  done (took 4.561011641 seconds)
done (took 68.173944841 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113304922 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133986753 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114175145 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138243656 seconds)
  done (took 1.481450055 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119770853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115574156 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118673361 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141736462 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12160703 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114104882 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141305058 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117943103 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11363292 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143514925 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115801472 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.113858769 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143088454 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115560642 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112638216 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144528499 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119488558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115394233 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.140291631 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117471042 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115388725 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141317863 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.118806851 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117190334 seconds)
  done (took 3.97167417 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111991901 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106663523 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108963166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131019334 seconds)
  done (took 1.455921834 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.123056478 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126065365 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150715646 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122610401 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12644025 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152207306 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115495867 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111231731 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140225928 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124578903 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129298829 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154150458 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125889216 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116015639 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152181022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110324036 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115141109 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153302936 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122836472 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122298658 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142336232 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121655524 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12028247 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150329975 seconds)
  done (took 4.121430629 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189431628 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126126478 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171760586 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157548809 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173421929 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113648962 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141577249 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14670226 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121257159 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.11484649 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14434331 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157944689 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146180118 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117968811 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115107913 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146681777 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127961065 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119421669 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188309908 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119490177 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146883965 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129554585 seconds)
  done (took 4.11251204 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119274472 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106587759 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102600101 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133987506 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118555331 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108937176 seconds)
  done (took 1.693540021 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104982706 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099894896 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101297743 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125377496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104741502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100444044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098801062 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127017699 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101052034 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101156562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125655965 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101234809 seconds)
  done (took 2.295313629 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326094812 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106974592 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.131870117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108163038 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114666824 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103153107 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144351837 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105617025 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265141514 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100835406 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.129383826 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192880205 seconds)
  done (took 2.833493503 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198020181 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144864142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249230796 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364241692 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182845513 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15897228 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290492564 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187447618 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174586009 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160423169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18013086 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18306248 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149331716 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209934419 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136471279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183393912 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158523287 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230352173 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166646476 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206265207 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181459022 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195288643 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185554986 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172400827 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135658933 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181221591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117853723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124450282 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188660458 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159144355 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193761861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173057734 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139068539 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212708625 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225166082 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199275171 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269247217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155645072 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167412499 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212245817 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253699358 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138383158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209246723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147012702 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153999471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178762612 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176143886 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.204158344 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131324963 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140197498 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201299604 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199000364 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171617888 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158976855 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301367993 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132756775 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.13870472 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19056682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209467231 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195024655 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201078535 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119948521 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201580794 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212820208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206089809 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165512298 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15773274 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149604753 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160258166 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226869889 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203056189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156288684 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224957928 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157901418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168803549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192586079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148796224 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226792511 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190409278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119467643 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146240926 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156964837 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123745748 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18407467 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148093421 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238323719 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128745504 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.334993688 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205146606 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152886065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183885185 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155096569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186753108 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144489767 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098819414 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167390225 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157483773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181056017 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123976052 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178573177 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137342563 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121958524 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174238798 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119496103 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192088276 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130959496 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185745702 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163896354 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155777033 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174000584 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171727582 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15964109 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188622232 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212452412 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127921463 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128513322 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237685329 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19048351 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132862829 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19629204 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190455222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175002712 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130184599 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186607462 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188795138 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167905107 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219751786 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134634299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129465949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162744996 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16572979 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182116996 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151421875 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151493648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160380105 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211503002 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122361275 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163729968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176102851 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158309978 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120557439 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158277285 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134404828 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137757175 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.171992158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136524342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176097743 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161000254 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188597936 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151327458 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159848085 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166165571 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155749707 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165705051 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171786284 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116505843 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198413776 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192122249 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15398184 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178346791 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185873242 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207247039 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169930171 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152684157 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17952652 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151604168 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117957791 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153634241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193578652 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183509996 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184721387 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205373021 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18852755 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158695413 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170791287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162674603 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.207585031 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151065569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169314063 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166773536 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192049102 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.116977715 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148320764 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125301545 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132048491 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153956107 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134012393 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199056525 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157966822 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204418706 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190051033 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133957927 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214396351 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123067792 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183883025 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170817443 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16251339 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182300545 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213262301 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198044653 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139515584 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182920367 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119336793 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122161321 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155645335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158358441 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132863234 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161282923 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136904408 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214756365 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195402028 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146353247 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215570437 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186759659 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19666648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144798677 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15923211 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190054289 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164765321 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181721812 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153818278 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155291089 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214823371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136893344 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216333804 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190101896 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176053892 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218406425 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159517767 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155597754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143425101 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185827699 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133683945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187443916 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141543444 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126198531 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175757891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132824966 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163596256 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20410142 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139230788 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199985121 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153980268 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196154891 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122198543 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164108375 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170246057 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168645467 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103874823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16261069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215400561 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171198241 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151427863 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195667987 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127102173 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340669541 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180421979 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19909708 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132071555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161339532 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169229292 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183972361 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156297816 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207774461 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137808184 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228530122 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193130048 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140178344 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126273186 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1738898 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146922644 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16319645 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149234147 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186659538 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139114059 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208036124 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133861742 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195289114 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16985154 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171971192 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147405538 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16246161 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217838392 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193754033 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196233175 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160039071 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188841321 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180404462 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148399945 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125628808 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128671083 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211551423 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126473075 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20124056 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192860339 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182598999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197008342 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185562066 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138030711 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123263075 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192676144 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144181505 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211850944 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129588509 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163331926 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209671846 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125446412 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126904528 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185315285 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292034201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145294412 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165820114 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.13509231 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268373839 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151861298 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128302922 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185909903 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164492115 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158102619 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178592434 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17122062 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16562812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159018479 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159648395 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205064732 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183785996 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18867657 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167963102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172462144 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155460142 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184063024 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19639963 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142945207 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142179642 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183092624 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215033136 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175752042 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15504059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166802033 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191952505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169999952 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196367685 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137439373 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208837909 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125503366 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186517455 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134932727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120882331 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182685682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1938041 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128414363 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199399512 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166556385 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155377547 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126348333 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141117402 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190598259 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136779202 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1555093 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177731587 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153856752 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176030477 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230888922 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126607593 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191473496 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143007704 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153815013 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136931902 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139588514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158543251 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171559488 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203824438 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130101999 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199571808 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159820608 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188215687 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152229037 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169147539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.331341607 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123995144 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213759276 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17419011 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192644085 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174568201 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170722809 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195010197 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146515879 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187110174 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144378412 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245857933 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158392261 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1907371 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128099734 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169524193 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135402113 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128918352 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177206893 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163374212 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166610546 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132688767 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.191454393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141872575 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.170504378 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137731437 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222748715 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146903493 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208891105 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182298695 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164246557 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170276502 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19887739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125035225 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18899644 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195165183 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14198583 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143917788 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160093075 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.1358074 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235820311 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122396616 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184842058 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169423816 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193181896 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168252923 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160744392 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171522119 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165332035 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170355672 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154686669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150658722 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192012321 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131612743 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123739211 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197127946 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152780126 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.191991511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138835542 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.198214211 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193178876 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.149088681 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131570041 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293126426 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156752755 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220876623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134481571 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161084448 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142037929 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152660029 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.188905768 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193213714 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128737728 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126943652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170717711 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15615289 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165482252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166101346 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194892742 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157465863 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210248014 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131377974 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277272473 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138610345 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195767888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115420705 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12577457 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16448745 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131573579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136775118 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208552235 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235413066 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159110523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172316204 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130948385 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153012782 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127654506 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159593705 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175746004 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162708164 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171691054 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101360285 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164072815 seconds)
  done (took 84.247000549 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159248017 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150455647 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16482414 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218774003 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191642218 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28623041 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.224778062 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240612844 seconds)
  done (took 2.719934716 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117871887 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154922765 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139931668 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141086043 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107496235 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.438325214 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.131042469 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.14382762 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157618365 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148796876 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132663459 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.501306044 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.144849173 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.115330109 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.143545108 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.106443254 seconds)
  done (took 3.907279904 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.764623819 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547469024 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.051175754 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287833005 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.753810061 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.195589317 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74694159 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191293759 seconds)
  done (took 12.630885391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151700423 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.140770745 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.408529305 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.243535367 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.200473737 seconds)
  done (took 2.240201337 seconds)
done (took 128.696161765 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.1206328 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119973631 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117764776 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149096736 seconds)
  done (took 1.590650195 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172344984 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.088837727 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090795857 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116024569 seconds)
  done (took 1.560918827 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.419690437 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088159014 seconds)
  done (took 1.628065876 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14348719 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13207188 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166592351 seconds)
  done (took 1.549227408 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135252536 seconds)
  done (took 1.233422745 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120029386 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112939996 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231384385 seconds)
  done (took 1.566242259 seconds)
done (took 10.229501575 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116087959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923307089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428611831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129226951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.705457948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422656234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.417551915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170752527 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170708141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133183499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128532409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.684798294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.432596631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871371166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387464171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899048539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.689910656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108842098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142003148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108924743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.395875998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134504845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10996289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107884378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713412796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41636069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106808208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.911392775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107314624 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.109847645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.421426047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107157162 seconds)
  done (took 20.803309859 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114351815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163832949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142868178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109385914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110412572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135890377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119594863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119242127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199901263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106853282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157164476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10695575 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111649807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13474023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132237923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106105267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.135999353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110381384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115300271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135660377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130175446 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105858342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135792786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111099876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107232946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155302272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109733048 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120090774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133578736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112068614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111639092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107085943 seconds)
  done (took 5.113011545 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154916302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172373447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145407631 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143911125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183428645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109621401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220243483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14641896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199967843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108699378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128259756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133865344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147734501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108612018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16123041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108751722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109476259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138098157 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116399822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109155603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157828061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107245617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108661443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137797384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10917033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129863395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136439318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120563797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107407388 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139962163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113989074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107832009 seconds)
  done (took 5.429884417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123466993 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.122512474 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130168713 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159756636 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118253209 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12441237 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150158197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118044147 seconds)
  done (took 2.158043206 seconds)
done (took 34.60770671 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133469468 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127327375 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12821792 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150932864 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.1841762 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144890071 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125067962 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114159046 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148623883 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13036612 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.1073291 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114540962 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155831731 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11834386 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.21576825 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122938346 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.217477032 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185040407 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145253559 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124177441 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116349106 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.219935101 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119304349 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114775294 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.217081127 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110019838 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.20982865 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118115873 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146960312 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11049537 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185995233 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149372856 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116681772 seconds)
  done (took 5.926421296 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201750673 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117171508 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146255448 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.115659215 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117293274 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144017963 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204123164 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144515064 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116871177 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115579276 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.114972616 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217224439 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123276723 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142991633 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119884468 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107174464 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.234953164 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11833811 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107360772 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119156938 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113462544 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116734002 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.245844739 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112304906 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115369741 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144054252 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119888121 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121741751 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.116572799 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.14893914 seconds)
  done (took 5.301100717 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123275788 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129995147 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132858596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212748614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145533791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157753978 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137551151 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129532202 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167183525 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110674873 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125508227 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17449553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127204385 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.11910508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143167909 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128832671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131171139 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139679667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.11811881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126525278 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160456063 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128027874 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132897769 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146816748 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109742996 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117345701 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148635381 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124948543 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11805804 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123759845 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141724771 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115147122 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112114989 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17435579 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111585048 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15188538 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136475041 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123012506 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122482504 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171387237 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114919658 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110510483 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.166433736 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163876677 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140519464 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125069831 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122796984 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12414565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.139502984 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130290104 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151569846 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141565791 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131024178 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109092293 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138880733 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119726683 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111265755 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14323727 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126776747 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113367202 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162730941 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118803137 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121797239 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141363606 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122786816 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110439376 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109091809 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145206654 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136680189 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117304812 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.176117679 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111342487 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122780827 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152467407 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124457015 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12154428 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139220901 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124114074 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120908806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115573352 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153617369 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114381566 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112589674 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.156912233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131321803 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123462989 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151566814 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123290436 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113143783 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143389725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128408172 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111625137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144881378 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124011015 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111549387 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.142819439 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125773237 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121878145 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109092858 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166321677 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115571133 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110468838 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.164855401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114914075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115946724 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.149242133 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154316563 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.110674526 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151181759 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124787877 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110277292 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.146998992 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11588571 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110350674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.157226576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127464198 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117833434 seconds)
  done (took 16.601572725 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.310905695 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.267808142 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209116777 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302906123 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124106085 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.232813877 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.297421189 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.298435335 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110390208 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178673399 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162656943 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.267837855 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142831126 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140260293 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.300659421 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.354601 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.168966032 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150694466 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176983069 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124813538 seconds)
  done (took 5.456067334 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13356996 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145583948 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162964438 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14050587 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121667844 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157667079 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111155467 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133265148 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153431375 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121040829 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11306115 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15633501 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124543017 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127435407 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156079362 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143913445 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117518291 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145898863 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134325656 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114635213 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130225677 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137470893 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119668234 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161887166 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130343319 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122171585 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139226388 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.116688948 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117811401 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148376881 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116861789 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129485646 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147352152 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103710469 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.121825286 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125760667 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146554929 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114094249 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116005423 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.142979446 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127853231 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124824159 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.147422926 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096856506 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130274751 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107317221 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.154185693 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124485908 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105802599 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12995576 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154051006 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126051465 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118935397 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163630328 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118758606 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127432823 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151564057 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12634829 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115949079 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138981799 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111229377 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114761263 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.147799932 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127302349 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12368889 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159738691 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128750496 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111006004 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.144734617 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116316845 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115827807 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124355745 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163154575 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121732118 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117703191 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152776167 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123535466 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092274062 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.148279837 seconds)
  done (took 11.482626364 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136520376 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121823386 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.128870507 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175549851 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124250533 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116886664 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15149183 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131041225 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125140455 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160105806 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127189811 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125359216 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164000199 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123216768 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121532228 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15720634 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126364179 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149034254 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160204865 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138948441 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125844544 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146210012 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124119044 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123143998 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170042609 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12347453 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137451821 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15503536 seconds)
  done (took 5.007588684 seconds)
done (took 50.886829587 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.257246965 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.48599289 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.238376637 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.236480369 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.274588632 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.270674273 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.236322382 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.247735969 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.712146951 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.211415955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.234973095 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.234751957 seconds)
done (took 28.775547158 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.293650672 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.784129901 seconds)
    (2/2) benchmarking "String"...
    done (took 1.528180422 seconds)
  done (took 4.439080853 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.230673958 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.228228626 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.474914953 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.227411301 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.228281454 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.22872257 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.228834499 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243905706 seconds)
  done (took 15.989961221 seconds)
done (took 26.080769484 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.281361727 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.412229856 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.46777241 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.231245159 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.259605766 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.229338557 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.232116941 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.252981682 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.242257927 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.231858496 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.658908942 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.492603502 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.233824177 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.604750081 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.230405139 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.264025974 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228645847 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.465209447 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.236501854 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.257482613 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.20844449 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.212974462 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.260955424 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.230751916 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.237418526 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.24390483 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.293628348 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.241822181 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.41667096 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.262023019 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.260804349 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.234493226 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.28622094 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.234857629 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.229939681 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.236626355 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.420893341 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.242004408 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.215758853 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253575603 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.424336336 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.245638245 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.230532215 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.236676528 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.237470998 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.294341738 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.215620709 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.363761954 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.257253161 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.235070687 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.259893099 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.604460343 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.235789885 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.234193691 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.242471714 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.458999591 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.243122658 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.28504613 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.257945004 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.235347747 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.234535567 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.244830881 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.247853364 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.233496281 seconds)
  done (took 145.629120415 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.231670809 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.237659098 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.237311794 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.242104344 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.238572925 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.237336516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.232396498 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.23317435 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.239008948 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.268531685 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.238053183 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.233631202 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.238338912 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188555824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.243173349 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.256379687 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.23708037 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.234023129 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.261574713 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.232778945 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.243128133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.239019276 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.234545742 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.235065344 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.279071213 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.314488442 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.26348099 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.234510969 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.249019717 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.23468048 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.27535577 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.244037669 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853538989 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.108174803 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.242048887 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.259218844 seconds)
  done (took 81.407236399 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.234891361 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.234003313 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234030246 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.268512025 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.235907514 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812181541 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816984917 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.201492445 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.288434628 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.593898499 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461381493 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.236609558 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327770166 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.247289464 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.23700395 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.252645869 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.264339227 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241145945 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235835224 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81297378 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.253646185 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.454521628 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.418074709 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.252162129 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268854875 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.628301069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237699811 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268637768 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.569313478 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.285184068 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235463527 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.582618676 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.348672172 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349070196 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239427848 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271001578 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.236881746 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.237251898 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.517588145 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23559418 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236345498 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.237320718 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.237634466 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.239406428 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875931402 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.244149827 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816383981 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242592162 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174941035 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.23844598 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237349748 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.138670177 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.936090183 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.241130014 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.238331407 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.240152182 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.237997618 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.238013021 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.271552604 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.111321278 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.335775111 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.24030455 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241507121 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271380582 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.23879309 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.380917869 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244371182 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.065332732 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.305611528 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336883272 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818878865 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.243579395 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33504634 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357740896 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.239649854 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.239758854 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237119254 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.238407095 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.351812187 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.238396814 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.931748158 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.416851427 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.25772926 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.606602583 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.34105519 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.237941168 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59124483 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.245897699 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.240502711 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939489212 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335357405 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.240067947 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.239618031 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239632083 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.926672095 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.240342965 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820237663 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.486023641 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.245029281 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.787130662 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.246310063 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.099702751 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803591721 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901515604 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.244386012 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349427113 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.415892676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.257866022 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.240897198 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.592018699 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.24317267 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295205507 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.238385713 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.63834517 seconds)
  done (took 377.599793753 seconds)
done (took 605.767261355 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.108790125 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.060996553 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.217493087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.068765273 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.05183735 seconds)
  done (took 11.644828325 seconds)
done (took 12.780982969 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429653284 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.436131345 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303862042 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435120733 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273398369 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449990229 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414441209 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.257675476 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346696689 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.319361356 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353060515 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.293784469 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270303393 seconds)
  done (took 18.721459747 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517113597 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.253118185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304780293 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491343033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286006829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530520386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.577656016 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251858635 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385892486 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2909268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257820147 seconds)
  done (took 18.283835006 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.545209527 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251027343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306155439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504896345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28675354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515214947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.552124371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251522018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389604314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260519881 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259278676 seconds)
  done (took 18.258215736 seconds)
done (took 56.40152979 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.271767559 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.335324422 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.274574175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.256245116 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.252153652 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.253387706 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.259270576 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.253732728 seconds)
  done (took 11.293007838 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.252243264 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.250867864 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.251819171 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.251380675 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.249209738 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.25163356 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.249498259 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.250498971 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.252036757 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.251411097 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.253353157 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.250219006 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.251655065 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.252466853 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.252256987 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.25183983 seconds)
  done (took 21.158702191 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.256005486 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.25152478 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.250133996 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.250800157 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.251174563 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.252587098 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.253822138 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.252897224 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25031031 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.253007383 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.252404871 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.252624742 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.251793206 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.251268494 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.251709546 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.253735608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.253358043 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.252697808 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.256670308 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.253234727 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.252730961 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.252429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.252154489 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.25288374 seconds)
  done (took 31.199286321 seconds)
done (took 64.787197297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.247448411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.24430512 seconds)
  done (took 5.62891635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.308491885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.310567839 seconds)
  done (took 3.758115732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.254334313 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.25439415 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.255937347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.253641683 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.255482744 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.252109962 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2541681 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.255756335 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.254156107 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.254577899 seconds)
  done (took 13.681649639 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.254125189 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.254230027 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.253361599 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.254292632 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.253582539 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.254033072 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.253456973 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.253494481 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.256371631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.254437966 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.256086479 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.255032538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.254208212 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.25617605 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.257643269 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.25506452 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.253668989 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.255903455 seconds)
  done (took 23.722564325 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.267787865 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.272355797 seconds)
  done (took 3.678873465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.382899322 seconds)
    (2/7) benchmarking "second"...
    done (took 1.297569835 seconds)
    (3/7) benchmarking "month"...
    done (took 1.357992505 seconds)
    (4/7) benchmarking "year"...
    done (took 1.351702388 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.296908058 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.276118637 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.297670059 seconds)
  done (took 10.400875608 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.256693494 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.459180202 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.584372383 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.888633294 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.260229702 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.260124311 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.190665075 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.262044267 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.260565383 seconds)
  done (took 14.563021022 seconds)
done (took 76.5706791 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.252706674 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.293543211 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.26146744 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.261752389 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.594880968 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.25186315 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.246607625 seconds)
done (took 16.302613082 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.225044012 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.225739342 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232946238 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.262847614 seconds)
  done (took 10.086924338 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25410559 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567764769 seconds)
  done (took 4.962471154 seconds)
done (took 16.190772862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.257103155 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259382313 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.256924901 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.257066557 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.257494492 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.258195156 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.257862384 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.258386966 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.257532248 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.25801651 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.25859079 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.257070854 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.259461087 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258458792 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25783499 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258156599 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257694816 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.258948923 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259395512 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.257042551 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258536662 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257961934 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259276516 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258143996 seconds)
  done (took 31.336498876 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.260192045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.258616976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.257188616 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.259087905 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.259696442 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.258804533 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.258087069 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.258149601 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.257684793 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.259928348 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258494878 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.259667509 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.258657453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.259490481 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261344374 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.258791781 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.25844451 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25844504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259630962 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259614376 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.259080135 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261222509 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.259684344 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259605295 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.258640658 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260322534 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.260015177 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.259499005 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259912745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.259451923 seconds)
  done (took 38.920983675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.261175704 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.261987724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.260543289 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.259757426 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.260275685 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.261054949 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.2610823 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.261001616 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.260480296 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.260499244 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.264480186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.260197345 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.261216561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.261327064 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.260640522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.260553024 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.260014989 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.259398406 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.259451263 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.260140312 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.259930095 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.258585643 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.260489055 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.259382206 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263099151 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.259676445 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.262002034 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.259406758 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.259975927 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.260253762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.258098527 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261063531 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.262099151 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.259370145 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.261861157 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.259586393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.262275843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.259356249 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.260623923 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.260144968 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.259855825 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.260279838 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.262755752 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.259397567 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.260259737 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.260008539 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.260672073 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.258989161 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.259846179 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.260390093 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.260291338 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.260591491 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.259692665 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.259941173 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.261885145 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.260213991 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.259377194 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.260767528 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.262035904 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.261020061 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.260501544 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.260097532 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.260727145 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.260590093 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.261977213 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.26119754 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.260603458 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.259598171 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.259957384 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.261008487 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.259383188 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.261094801 seconds)
  done (took 91.902885152 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.261080249 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260698802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260530482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261035564 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26277669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26255614 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263940246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262099531 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260166726 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261659578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260594733 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261202148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260790588 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261229917 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261994433 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261702736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261762622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261677959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.262014228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2621229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262215351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260905012 seconds)
  done (took 28.900060634 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264637216 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265167467 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.261926767 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263946711 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263320477 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262937696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262301306 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263220659 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262828072 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261971427 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263141132 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263014196 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263504954 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262448452 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262914737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264314343 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261601251 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265488187 seconds)
  done (took 23.883597885 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.261779626 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.261653436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.262302044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.262376825 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.262525604 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263415224 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263645771 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260988666 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.26152477 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.262257146 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.262574591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261269513 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262454955 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262741832 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264285519 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261650012 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.262555381 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262325764 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261218959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261496442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262199569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262190559 seconds)
  done (took 28.914966551 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262836864 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261119492 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261950849 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261237573 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.262072624 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.260876368 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262656488 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.262873326 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.262206873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262965707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262827809 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262762296 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.264227211 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.260136114 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.262698431 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262297468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262128861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260770331 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262932723 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264128869 seconds)
  done (took 26.392751281 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262390663 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263673442 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26313741 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263327576 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263224998 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264033088 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262663084 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262255812 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262994063 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263650136 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264247975 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264253067 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262698794 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263296951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263136763 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262347179 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264516518 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265002905 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26566111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265622645 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267279017 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261943813 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26486666 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262004472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265268011 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265200242 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265379566 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264149987 seconds)
  done (took 36.534437353 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264051993 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262453634 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.26351069 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.26551043 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.263492743 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264126793 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.264876095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.26553277 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262905753 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262798381 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.265198986 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.264820234 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26536004 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.267101189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265504991 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.266070101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264708174 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.265173192 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266148949 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26553681 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265751428 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265731718 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.265461444 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264186253 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265493277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.265082764 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264456624 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266736596 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265376717 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265703733 seconds)
  done (took 39.096897219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284617214 seconds)
    (2/2) benchmarking "in"...
    done (took 1.28497316 seconds)
  done (took 3.716623665 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.26592968 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264123996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.267182931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.265742642 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.266094018 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266699845 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266523029 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266464617 seconds)
  done (took 11.276346598 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.259925758 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.267323235 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.268486561 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.267142991 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.266723956 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.258650363 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26783341 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.271733067 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.261716399 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.260033755 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262473573 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.261618027 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.264054486 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262315128 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.261514766 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264770451 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27102918 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.267874037 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.268694391 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.269034601 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267037708 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26323346 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2645331 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.272651444 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26045122 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268908792 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269656302 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.272766479 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261582992 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.266553792 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.265244981 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.270222727 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.268883248 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.269652398 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26951729 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.268722108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270576071 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268849466 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.269990245 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275666002 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268967108 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.268996725 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.263619701 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.266270691 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266937719 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.274394954 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.269139646 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.269074329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.262146596 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2658654 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.270907147 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263819393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.272344831 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266596936 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267509862 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273236175 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278017737 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.262131013 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.264671036 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270591349 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.27936248 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27199119 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269003036 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.275746708 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27038582 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270307729 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274677883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277578084 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.27071451 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.269514403 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.271628448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279011505 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275511124 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.277655311 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271074746 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.270027282 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264460959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273844393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271797665 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.274658003 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.276114939 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27253805 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267270133 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27039457 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.265294018 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.274597923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.272242996 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.269449566 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.263847549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272317772 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279648203 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.270966654 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263136335 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.265192161 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.268386674 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.27311905 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.263471351 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266676275 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.273746075 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.272278221 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271354237 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264157017 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269561498 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276392579 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272647107 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.272791836 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277840556 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264661633 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276688392 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.27914231 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272384073 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264766634 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268576941 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.275194862 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263696064 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269445394 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.276582909 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.268148158 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.276830521 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.27327352 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268982617 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275391643 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.278680357 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.274567039 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266421625 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276880078 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272396138 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.269146267 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.278531616 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.273747799 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.273005766 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.269783786 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.27865254 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.266757247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27662267 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267900861 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.27758465 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.272608426 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.271708906 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.268284465 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.272156218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.270271124 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.271337775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.276439079 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.280736055 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267707392 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279854018 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271816939 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271195489 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.274039561 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.277370041 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274189428 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.267915838 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.277002642 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.265368413 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273875667 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266428438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.275305389 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272752186 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273937782 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274076957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.264774299 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269753943 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.277123138 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.273758047 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.273442626 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.276410156 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.274855805 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.272253439 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265673594 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.274457755 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.264849542 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267420893 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.276719298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273228342 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.273765298 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270999887 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280879342 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273689638 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274816207 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267228794 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271704901 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.280935909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274903042 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.282474571 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274159018 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.272710716 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268442762 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.270399289 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275938659 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267261142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.279419542 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27835793 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281909487 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270198873 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.275761046 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266291992 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.277505049 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.276468123 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281992631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.274933596 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274655001 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26875356 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278781813 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269308123 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278673231 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26857193 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276432813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274289379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.276775007 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273510001 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268663635 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271771722 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.277170692 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276534083 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272973348 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268011272 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.27781626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266991208 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270478958 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.27785211 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.275196445 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.277204531 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.282461271 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271588718 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278889818 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.276696168 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270606023 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.277533312 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273185389 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.277495016 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280664763 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277016247 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271347804 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279484249 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277557772 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.270435095 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.275544611 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.283850479 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.27416569 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268634724 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278420833 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.275273759 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.27466961 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.274875471 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266962871 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282299556 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277351066 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.284815464 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270576611 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.278212871 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269411527 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.279902794 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.273496915 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275780682 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.275170269 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278054409 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283739973 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.276050384 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271811299 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278512489 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.276050113 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.276088602 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268061819 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279358522 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278420247 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.276561994 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27388188 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.274153951 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.2795968 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.270187948 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.278378936 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.269837964 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28595158 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.291062906 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279519822 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281347495 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.282668853 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279758943 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.279091946 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272204597 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271357739 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272941887 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271509154 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272092692 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.282040177 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269410193 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.280563741 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275365505 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.278373569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278544314 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.277192128 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.267616787 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.280384366 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.276673903 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276580006 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269880668 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.278144167 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272882851 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280317786 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.279343871 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272454277 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284637925 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28187407 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.27468338 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274965136 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27335034 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271005124 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274640313 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.283809526 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.270823651 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280683634 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270507951 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275414344 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.27294798 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282141372 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.28881 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.271595852 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280181209 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.277102015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.269536471 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271062349 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.280299367 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281492285 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.290965412 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.270121656 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.279028827 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277435958 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.278571046 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277642225 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.278796842 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279723307 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277423013 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283349341 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282346362 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272523994 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27936605 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.286308871 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276854488 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278430938 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.269864353 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279222468 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.287173229 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273048238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.275473179 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274791698 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278613699 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278541838 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278927926 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.278589728 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277677952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28235393 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284065036 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281073855 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279493827 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285190431 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290989627 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282611267 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290735923 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.272928693 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.283395236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27897095 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274161193 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.27580631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274964784 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.28139296 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271604202 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281348021 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279822633 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.274735653 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278983552 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.287602067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27299659 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278286444 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285332134 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272502651 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279009427 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279697507 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271860189 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282928793 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280685701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272474201 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272515132 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275536084 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281185914 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.273199405 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.283282295 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27297178 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28252676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.280194775 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.279704376 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.279135378 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27953386 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274244566 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281733839 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280586926 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.289079138 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273936126 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28048959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.27642804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28592953 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291419107 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276258592 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285235326 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280291626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274305714 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279674268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.286660955 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275351373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283169518 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27371764 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276104783 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276029159 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2827777 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.284017361 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.284096645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.273392287 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275400267 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28350333 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280780799 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282499564 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277219184 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.288238696 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.274363542 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27430485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283558423 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.276123971 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28623418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276024403 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27838947 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2781906 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.283815197 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281902661 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285096027 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.273171792 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27551575 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287363915 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285793762 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278721962 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276859558 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.282857826 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276883874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277302929 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279700803 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275575934 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.276828249 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28552714 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.276232535 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275021924 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.277905133 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284594314 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.284873645 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284853019 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275299313 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288332437 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289828747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289950042 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.275788349 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278593844 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.278439415 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284369402 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282685174 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.27680714 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290420121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289302946 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287046269 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282211287 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285419323 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276294873 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284064698 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283657703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.279711331 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.288695871 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.279402215 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290531215 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282737675 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280732652 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.274462898 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277841798 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277472948 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278937473 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285324086 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281929218 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287495495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.280912135 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288004085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282895451 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.283261423 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284091937 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276536368 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286257205 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275539616 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.285418484 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287018637 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278817727 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287747195 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286217014 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278785047 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280165077 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287545761 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28547917 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.278522289 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284406108 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290330981 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295071161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283469154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279467508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283334999 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288294511 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286016235 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286063776 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279206253 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293774677 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297171488 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278589441 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.282816479 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289500156 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.296050265 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287086894 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285956556 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282205441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.283950781 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.290672543 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286343047 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289471755 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292131893 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282728004 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.288471106 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279933531 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283380785 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288038229 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297692579 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286381744 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.28020297 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293003928 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298209608 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284813287 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29846793 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295172543 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.286695495 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291286247 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278887022 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289353851 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283529592 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291913984 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287122316 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287378537 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289342209 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.280273026 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288403342 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295408944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.29632874 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287600369 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.281858769 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.282003073 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289716275 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287156273 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.28866902 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286813283 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288874664 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289417303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.281802838 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297868431 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303241839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.29239905 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28952156 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28796213 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.289788864 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292548858 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285065305 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293102403 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.288390953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289172811 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.287610965 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297593375 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.290874088 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282643097 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284749121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284366038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.293912974 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29591303 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306875084 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292702468 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293035716 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291470975 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292270042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284754133 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293475673 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290695441 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.285977421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286812707 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293289617 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290089976 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290931313 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282504686 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29318866 seconds)
  done (took 762.643242362 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291040179 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289959257 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29035151 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291237123 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291529135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290478123 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288840711 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292195466 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290437221 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290682171 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291006339 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290058361 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291400079 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291163624 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291088528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291677002 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291235078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292295421 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291490578 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290829133 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291285665 seconds)
  done (took 28.277842034 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293576404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.291788501 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292950744 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291405066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292339404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291256023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29345844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29232252 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292220012 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292283682 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293366722 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292397915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292653745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292351225 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292669347 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29288739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292552332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294412084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.292314183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293300672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292509996 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292422726 seconds)
  done (took 29.605328826 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293181464 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292423753 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285705529 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.297093198 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.294045344 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.291889053 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292988323 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.292782144 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.292759406 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.288469987 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.288423341 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.289029915 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288798201 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.297358707 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.289899143 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.299127876 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.294246061 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295475653 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293734329 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.29275894 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.297415738 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.305200292 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.294046777 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.286942149 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.296903694 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.294141104 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.293803302 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.295899092 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.287568721 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297140597 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.295554974 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28822089 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.29744293 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.298312227 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.286970603 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295821606 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.297146277 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.295553003 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.294983188 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292908437 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.304086061 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295710284 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.298802126 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.308593341 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.296227858 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.289600115 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.301160887 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.294622325 seconds)
  done (took 63.302432919 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295268636 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295678053 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295347122 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297122691 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297206 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296629088 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297167368 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296737912 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296518241 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.297718233 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296765104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.297862809 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296875683 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298410847 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296766759 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297609157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297931832 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296290498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.297141824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29748826 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297340528 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298880368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298248202 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298909138 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297919077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298875484 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296951784 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299288659 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298537053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297793904 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.298373009 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296822301 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298654698 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.297916509 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297493483 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298482572 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299372147 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297626846 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2986987 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.29937178 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.299136982 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298774536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298811896 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.29946723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298405154 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300461102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299035312 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299455526 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300158239 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300924818 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300380517 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299646184 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299848324 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300340625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300506297 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30079158 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300106289 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300508475 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300560733 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.30032609 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301168554 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298905822 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.300842283 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.299453774 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300354364 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300687449 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300703029 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300775865 seconds)
  done (took 89.479734516 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299924912 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301443767 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301402002 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301522442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301406819 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301605206 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303204062 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.30136558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301647901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302549108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301453919 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301316802 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30299982 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302452895 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301730042 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303139705 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302761194 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303465845 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302524304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301885245 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302365171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302700899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302878197 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303325855 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303924856 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304305242 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304152429 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302512557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303628625 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302833008 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303545692 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302554867 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302673957 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30280183 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304034332 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.302960351 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303389324 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303609541 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302730684 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302932176 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302759543 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304330363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30406986 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304750024 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303988499 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303147936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303872524 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304388466 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305624816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30456834 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304853636 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303811628 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303931421 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304657056 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303544593 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304920468 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305469409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305831068 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304622556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305302572 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306632195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305466821 seconds)
  done (took 81.982402849 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305313656 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305301996 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304460163 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.305183497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304884017 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30511504 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304329145 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306864508 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30572975 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30715372 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307171909 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305575544 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306808642 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306789676 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307142708 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30780759 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305826431 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306939285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308044583 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305732362 seconds)
  done (took 27.30144116 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307173842 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306682885 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30557874 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3071476 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306775109 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307364001 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306694065 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305864994 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306213543 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306927964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306728957 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306533929 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30486091 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307605393 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307165593 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306844252 seconds)
  done (took 22.085619873 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.307950782 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.308407132 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307263371 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307066697 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307105013 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306722653 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307518514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.30868564 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306398498 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309931703 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308105101 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307609672 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.306694057 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309170848 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309337385 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307700296 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.308509468 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307021576 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30862576 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309899526 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.31008147 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30754027 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307561678 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308463131 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309466501 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309199458 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309057718 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309439126 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.310226186 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.309886896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.307886864 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309260084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.309109552 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308321013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309057734 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.310560667 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309925826 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.307808815 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309224606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309179264 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307938475 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308564392 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309168413 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308722519 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306811498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298541048 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299858613 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298703239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298775256 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29935497 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298957512 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299755046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296225403 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.290827356 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.290568496 seconds)
  done (took 73.036796313 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290430763 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290092135 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291158669 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29556424 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283057305 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282628546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28172743 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283034653 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283448693 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28322365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283437877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285836476 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280001789 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278958548 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280372512 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279915369 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278241658 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278610497 seconds)
  done (took 24.278194403 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280509078 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276551829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276070189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276307922 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274585881 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27627972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276441281 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.277465235 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276264966 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272559492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27174205 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272105499 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272227328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.271022455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272998852 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271675641 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27409764 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268548453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.26682561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267809312 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269767663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268585519 seconds)
  done (took 29.169241885 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.260334142 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.258582547 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.256928887 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.269208981 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.265995582 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.25760228 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.258366103 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.256710181 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.273175976 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.281271166 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.276373772 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.264784334 seconds)
  done (took 16.329361049 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268083418 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267144532 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266422477 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266601992 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266443638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264163052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263871386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26435945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264906666 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265101761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264848537 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263674751 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265471604 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260700715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260856666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260130819 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262123904 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260815584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26087158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262615235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260517851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260985155 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261999021 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261277994 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261770762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260670824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26227365 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262713345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261958575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261748752 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262249033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26237109 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262763262 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263390881 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262374083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262297423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262782441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263322319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263344522 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262559047 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263733177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263136283 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263330467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26453765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263344375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262096839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26371815 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262122562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26213675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262928064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262742712 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263610402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259138923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259265801 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259304095 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260672741 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259501773 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258883087 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259462484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259589442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254745755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254774518 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256301193 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255920698 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256050056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255350732 seconds)
  done (took 84.43863049 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258871221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253484156 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253676304 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253755606 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251541061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253194229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252246521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254719865 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254306259 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250874366 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250319865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253414144 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250431178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250508759 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250904371 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252186829 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252535388 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251592603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252231786 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251676591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251423986 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250944492 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252270464 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252833808 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252159089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252699864 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252761267 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251951707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251644845 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251955288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253135153 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253506213 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252178474 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.252306155 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250917688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252994848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254647632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253308623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25355476 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251902579 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253733636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253943895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253128827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252605622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254688749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253270515 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254793282 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253005238 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25327318 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253690577 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253642033 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254373324 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254670323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252982432 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255703539 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253414822 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25393492 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254354809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255065061 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254296713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254525765 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254791829 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254224192 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254948887 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253575212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254314967 seconds)
  done (took 83.84952739 seconds)
done (took 1777.798001423 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.410742442 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.364335969 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.245289421 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.248710849 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.245620507 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.242334061 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.258328883 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.245537339 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.244135397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.245386478 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.245476184 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.435305124 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.28052717 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.246388798 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.245180314 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.341887153 seconds)
  done (took 25.683789667 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.269185579 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.260604545 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365691137 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.261190286 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.282752771 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.436024073 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.319091995 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.261877251 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.417199001 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.281286604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.250993724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.298868309 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.260828089 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.252223913 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.29516392 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.436095932 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.503954186 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.257313969 seconds)
  done (took 27.850693923 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.66774496 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.268183109 seconds)
  done (took 5.084447974 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.278960972 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.261987481 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.262757695 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.260105968 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.253791666 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.254096902 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.26207643 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.261941398 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.265158466 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.375663617 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.265775809 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.274649443 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.262043344 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.262328472 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.269214971 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.305513579 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.424047805 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.271416303 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.269241308 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.269753684 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.261804298 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.351696364 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.300272386 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.272296392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.378006617 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.255320501 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.265435204 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.269651196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.37693061 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271557385 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.262413919 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.261536607 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.264763346 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181143236 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.799643363 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.257484383 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.287089587 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.272180603 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.272130911 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.424809583 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.263185385 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.270806829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.253907563 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.791251266 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.36238335 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.373813464 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.250588616 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.263689541 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.26006524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.320552087 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.259620829 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.259030636 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.315124414 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.020120531 seconds)
  done (took 81.312270468 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.255121102 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.247523204 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429244875 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.269821166 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246872601 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.260367186 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.245630347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.508800543 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.261564509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.246042978 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.551510824 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879409786 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.259462152 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.312446239 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.282439395 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.324958777 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.25682752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.245873739 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.260576082 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.249576625 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819423884 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246880215 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.246927238 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.335058955 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.285530244 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761122778 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.245901377 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.250299119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.248104912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.247089058 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807863708 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.248655465 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.295158828 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.248569854 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525337531 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.618222637 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.574857787 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.247941442 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.267076396 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.248350746 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.274295535 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752003182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.59531184 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.248135313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.248254526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754366786 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.251010573 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.254444373 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.264340268 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513667141 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.247799763 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.248579055 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.24909568 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.25159743 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.248175602 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.351758654 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366967319 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767716219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252559808 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.246470102 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.312312452 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.249822902 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.2521728 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.251889461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.250281129 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.601052407 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608151992 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.25528538 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.596372302 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800263061 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.248390677 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906657418 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.252388275 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.266698497 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.295225768 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248060771 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.248150114 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769629839 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.262881866 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.249782753 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580731001 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.255234613 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.54132448 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.265331314 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.254576687 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861464711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.257901434 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.291677408 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.249398741 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.253095653 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.252797191 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.251546367 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.531943318 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.326915822 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.249772713 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.249717856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.293832244 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25034414 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.266816537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.253377287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889916439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.260236425 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.250266617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.269999437 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250833106 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.25547247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.253582962 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.250628181 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551525978 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.250790828 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.252458252 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.2532302 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.252025593 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.252335136 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344159962 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.253799391 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.545076247 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.256706423 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251680154 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.250905008 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251237166 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.256550337 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251642441 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.257742281 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.253041088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.550301328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.268013379 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.254745563 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255251293 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.251459527 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.257429399 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256950756 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.306922156 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.257685694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.238577699 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.259839878 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.264639724 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252309092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.262015681 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.252506087 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.278750881 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.254480725 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555111153 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.532196867 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.597557851 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.257827662 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.270599079 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.150717807 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.263006766 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437126736 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270543876 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.253792132 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533851844 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.583522101 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.255058372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.254977061 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.257527353 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533083562 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264787424 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.577405453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857168203 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.258422137 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.257972568 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.224931114 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.061469285 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.258416715 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.255205625 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.543903948 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.269402466 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.255255255 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.254145207 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.257194375 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.255045799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.261191306 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.256786956 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.2576131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.256305375 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.543610714 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.448988552 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.270058551 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.255042094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774861652 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.282071187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26613626 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.268724788 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.260102605 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.255964668 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.338361042 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.258046985 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.258511084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.25563271 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.263955263 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800665957 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.260509044 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.271635722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.449571307 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083718222 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.260623411 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.258119115 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.256240537 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.311698743 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804368806 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.293718689 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.549970287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.271093335 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.296073915 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.256675381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.269475894 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807525199 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.263499318 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.270203389 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.979418302 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.259221958 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.739088068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.257498386 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.259934594 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907078111 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.261922198 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.261259185 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.262322052 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261313947 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.620295668 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.258142741 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.300589052 seconds)
  done (took 481.505731779 seconds)
done (took 622.575694825 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.25770507 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.261749097 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.242638398 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.259492229 seconds)
  done (took 10.174831222 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.252853458 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.265375505 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.246994099 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.263304615 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.248710955 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.266462368 seconds)
  done (took 8.695709144 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.256889484 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.260024137 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.262725003 seconds)
  done (took 7.931789445 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.463933338 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.27999452 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.59472194 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.271504869 seconds)
  done (took 8.76244407 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.271402409 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.273833268 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.273087088 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.274468261 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.276705012 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.349654495 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.276683191 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.273583249 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.275035066 seconds)
  done (took 12.696816192 seconds)
done (took 49.415641612 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.326711647 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.414223446 seconds)
    (3/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.260752819 seconds)
    (4/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.405991367 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.328352942 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.294236381 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.237095386 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.407376437 seconds)
    (9/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.237623655 seconds)
    (10/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.451888295 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.257768087 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.246782739 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.381553342 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.247588254 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.253215975 seconds)
    (16/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.293950523 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035448624 seconds)
    (18/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.934531045 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.341708068 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.237476846 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.437111701 seconds)
    (22/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.34051584 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.240886597 seconds)
    (24/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.390981892 seconds)
    (25/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.253457484 seconds)
    (26/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.240444465 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.205817033 seconds)
    (28/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.242599066 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045934404 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.097590234 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.38453611 seconds)
    (32/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.239760125 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.363157082 seconds)
    (34/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.405459395 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.522868429 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.332428158 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.064978081 seconds)
    (38/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.253337022 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.006451627 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.376639293 seconds)
    (41/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.072820657 seconds)
    (42/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.2967283 seconds)
    (43/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.388006294 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.251139965 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.359050445 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.07651426 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.366900663 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.297460073 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.239371497 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.272835874 seconds)
    (51/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.143915226 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.100932785 seconds)
    (53/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.29805192 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.411297855 seconds)
    (55/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.359330274 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.300368112 seconds)
    (57/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.405109637 seconds)
    (58/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.401059448 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.500548158 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.377543567 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.380738211 seconds)
    (62/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.266224133 seconds)
    (63/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.359658278 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.435537742 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.242297868 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.376914197 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.444664963 seconds)
    (68/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417699619 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.365607196 seconds)
    (70/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.24292939 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.381090732 seconds)
    (72/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.473647392 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.505123237 seconds)
    (74/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.47551272 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.374213419 seconds)
    (76/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.24290168 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.355049909 seconds)
    (78/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.334814232 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.264575365 seconds)
    (80/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.955428512 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.370155916 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.482870478 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.352432444 seconds)
    (84/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.336099087 seconds)
    (85/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.428680137 seconds)
    (86/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.428528154 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.010734649 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.26367422 seconds)
    (89/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.24377874 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.39004134 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.302022659 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.269877364 seconds)
    (93/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.243977402 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.271337465 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.961419498 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348266253 seconds)
    (97/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.244599283 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.378547392 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.413205448 seconds)
    (100/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996657041 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.304031377 seconds)
    (102/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.243151151 seconds)
    (103/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.096205964 seconds)
    (104/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.409191181 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.085799694 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.249200212 seconds)
    (107/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.133877026 seconds)
    (108/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.263900053 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.307949936 seconds)
    (110/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.334782725 seconds)
    (111/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.25628715 seconds)
    (112/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.245552626 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.427744898 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.244859678 seconds)
    (115/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.472914574 seconds)
    (116/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.34795586 seconds)
    (117/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.305482542 seconds)
    (118/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.381171274 seconds)
    (119/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.607240834 seconds)
    (120/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.296427626 seconds)
    (121/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.444772336 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.300816721 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.395473328 seconds)
    (124/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.356789416 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.351807631 seconds)
    (126/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.245275888 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.391424603 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.334864909 seconds)
    (129/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.300898282 seconds)
    (130/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.33342953 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.476902301 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.280990452 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.514213824 seconds)
    (134/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.36464858 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.51851731 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.307250104 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.267668336 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.365809473 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.267949805 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.126163877 seconds)
    (141/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.344763607 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.448581944 seconds)
    (143/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.999878747 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.27396946 seconds)
    (145/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.231642266 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.422204375 seconds)
    (147/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.382394905 seconds)
    (148/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.29847343 seconds)
    (149/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.397571608 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.333008163 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.247956083 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.442797163 seconds)
    (153/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.330809757 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.268447944 seconds)
    (155/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.280637001 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.380021039 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306601521 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.327829227 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.383768849 seconds)
    (160/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315551926 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.385414852 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.369962194 seconds)
    (163/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.359844967 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.431508896 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.967334816 seconds)
    (166/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.249132972 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.300614639 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.387003574 seconds)
    (169/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.385213593 seconds)
    (170/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348495626 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.352612227 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.11377496 seconds)
    (173/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.512816613 seconds)
    (174/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.251908349 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.449335912 seconds)
    (176/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.340952619 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.411777301 seconds)
    (178/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.516389546 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.273320577 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.488313848 seconds)
    (181/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.248966647 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.353705081 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.251330337 seconds)
    (184/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.305897409 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.249383838 seconds)
    (186/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.46577349 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.368774029 seconds)
    (188/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.067802676 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.506298697 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.253709035 seconds)
    (191/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.365653423 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.275675131 seconds)
  done (took 326.740279147 seconds)
done (took 327.893385679 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29939619 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.364440042 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.279754967 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.278812446 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280253287 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.271028773 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.320062638 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.280054366 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.294370886 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.294159399 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270384363 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.306862502 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.295594682 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.28982063 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.312987764 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.27905767 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.280415644 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.289650824 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.295402399 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.297872798 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281207791 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281463862 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.30829264 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.279032588 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288609398 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288590753 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.287385176 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.273114754 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.289748881 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.296463006 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282864753 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.292610263 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.297381334 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.292177465 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28190933 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.292554155 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281272037 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.36935923 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.303298905 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293757648 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.291390552 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.299324293 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.286639099 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.286767304 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.293632321 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.308029902 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29028365 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.296949548 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281606422 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.286367316 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304956642 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.294625686 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.291745227 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.28053364 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.287752236 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.296351634 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.292104875 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30258456 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.291128518 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282515801 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.316134652 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30296547 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.294681851 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289837425 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.291158406 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.297122792 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.293331403 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299286465 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.290911913 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285315195 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285122282 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.29048877 seconds)
done (took 102.29035736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.406774004 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.281335493 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.439687648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.290881399 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.450186504 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.408578912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.289562357 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.292042888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.291024513 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.095458144 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.291103814 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.291468292 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.281463805 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.29230777 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40846274 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.293041986 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.292060189 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.990569354 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.292557649 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.418987259 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.284062893 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.292578073 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.293858819 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.095942093 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.282462352 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.278025689 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.420976394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.292653985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.994942272 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.278069042 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.282583496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.993565599 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.419987226 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.312137756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.302693232 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.301515609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452211885 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.296308115 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41137929 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.411392393 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441981453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.33129308 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.277809262 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.284193832 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.294745651 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.295075436 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292835151 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.32202848 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.283170386 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293293063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.994844457 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302774765 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.294743538 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.295024115 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.294734551 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.322068841 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.294145767 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.295296902 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.421193468 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.295237084 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411008947 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.096859915 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.095980045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.296314798 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.282641936 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.296543654 seconds)
  done (took 105.370958299 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.355930153 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.361192571 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.39647664 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.287206643 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.335354665 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.396229314 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.287198961 seconds)
  done (took 10.591321091 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.293428903 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.296008055 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334512379 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334246841 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.294313873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.459955813 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.29536419 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.298267952 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.295785567 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.338040824 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.299000411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.296772039 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.30533799 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.285939451 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333541037 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.299543954 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.405211832 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.289412953 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.296965951 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.439666786 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295919169 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.306189417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.33796197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.298866746 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.299799917 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.295717473 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.071552334 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29750828 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.296567943 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.297470287 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298165534 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.354855093 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297349648 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.288995905 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.298286799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402430615 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.29852654 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.299204654 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.297331259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.291766222 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.299596031 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.298698933 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.299093198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.297558262 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.298226492 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.313587695 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.298851095 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.298590572 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.298634222 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298648936 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.339981096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298583941 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.2976678 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.298859307 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.344862673 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308308038 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298852099 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.298665891 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.298367603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298678805 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.441332233 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.337444925 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.299034762 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338040965 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298683363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299118674 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.299773783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.299453711 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379183541 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.299516929 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337397585 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.299258413 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.47231404 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.315129885 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.300903197 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.2935951 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.293797864 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29978887 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.289113424 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.298001855 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.300375096 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.29294194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.29760055 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.30037717 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.300048969 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449850729 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400233313 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.30025095 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.306186296 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.298376361 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.301547453 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.343317197 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300908874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.300506587 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343656048 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.410350788 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.342731955 seconds)
  done (took 133.756303234 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.305487528 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.304423399 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.296337122 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.321025126 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.293583905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.292410953 seconds)
  done (took 8.991732493 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.295929783 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.304779965 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.30352703 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.302670455 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.302994215 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.304732444 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.304610554 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29615085 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.30569938 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.303425519 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.305985484 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.307259941 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.304771065 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.30164855 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.302826734 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.302636733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.303404613 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303089626 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.304140503 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304994573 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.293323574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.304115274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304455946 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.296228939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.309263039 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.305052367 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.319090939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.305392128 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.304239736 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.302903238 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.307841479 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.306822248 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.297135502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.300220015 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.306944355 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.296920057 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307959345 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.307785761 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.304947646 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.3067535 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.308136682 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304616059 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.305135733 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.30837765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.297367307 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.300397991 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.310051771 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.32181689 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.305803074 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.307341248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.309277657 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.30795478 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.308332093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.309195154 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.298445393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301254553 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.312684338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.307329579 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.30785854 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.298317396 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.309435593 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.309055611 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300492429 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.310325453 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.306546945 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.310638539 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.298824317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.311874454 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309418756 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.307030756 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.309009408 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.306148597 seconds)
  done (took 96.153094992 seconds)
done (took 356.031878448 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.699946128 seconds)
  done (took 3.882577493 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.56183828 seconds)
  done (took 3.746396152 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.952606864 seconds)
  done (took 22.384316233 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.378455919 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.391575129 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.297857738 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.298701502 seconds)
  done (took 10.549612976 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.890129476 seconds)
  done (took 5.073141071 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.301533524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.305782216 seconds)
  done (took 5.79075227 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.450424537 seconds)
  done (took 3.633095322 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.501270737 seconds)
  done (took 3.685663154 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.317246872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.319843015 seconds)
  done (took 5.829286226 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.272113114 seconds)
  done (took 3.456300035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.239624566 seconds)
  done (took 20.424376099 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.315887041 seconds)
  done (took 3.503154671 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.329806761 seconds)
  done (took 3.512921846 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.751782574 seconds)
  done (took 5.935795325 seconds)
done (took 102.591421548 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.293583374 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.299882647 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.293344318 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.293180617 seconds)
  done (took 10.364534669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.372418118 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.372108355 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.380035567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.367648885 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.36792775 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375255985 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335659918 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.33302263 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364914252 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.359999502 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.378226571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.365690101 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.375802333 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.335016862 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.359542289 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.375795267 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364228269 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.381624598 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.3346037 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.368232516 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.31021429 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.367201863 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.361835708 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.310142764 seconds)
  done (took 33.803184625 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.796215136 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.370361624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453075788 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352412053 seconds)
  done (took 7.156581759 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.414064268 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.415464669 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.430866466 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468951561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.504462346 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427372277 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.336637337 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.332631317 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.319235365 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.416027257 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.499143385 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413789236 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.628999456 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.310767898 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.628475223 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.310701793 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.310923552 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416058453 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.464101872 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494247175 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.311599092 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414163776 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419006649 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.415236263 seconds)
  done (took 35.289437244 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.320717499 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.32867022 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.314736675 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.328340882 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.311976806 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.31370626 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.315157328 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.320599904 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.312502523 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.312015765 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.313437706 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.327890422 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.312561746 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.313902969 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.320443838 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.315404445 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.315011799 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.320646718 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.324932351 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.31500094 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.31376528 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.319706345 seconds)
  done (took 30.178568829 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.29776154 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.298562046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.649346641 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.554375357 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.298490228 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.30278058 seconds)
  done (took 13.588886142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.371426655 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.510648638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.308581737 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.638743036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.729458858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.311569199 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.305399417 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.541919678 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.827232794 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.818205516 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.364135086 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.373810051 seconds)
  done (took 19.290252125 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.303893254 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.303570226 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.307169736 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.319069691 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.357060146 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.30937532 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.311928362 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.301318375 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.362613395 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.362940874 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311026302 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.358707265 seconds)
  done (took 21.09884375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390333442 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310599623 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321757004 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30881706 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313957709 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311282774 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330506503 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994232674 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.316942254 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587676663 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318074744 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395533283 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557532529 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317082005 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317148771 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.254815498 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537742998 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777914959 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313321408 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318198472 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348895384 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311879072 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319831995 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516690726 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318295382 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314378245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.577087654 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312782914 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585708272 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562250423 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561698584 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320429621 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590819942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943256535 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419244784 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510706858 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314859177 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315441375 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.310819587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.315853619 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329390068 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315563945 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555744172 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319547411 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315541902 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326209432 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007039148 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.32289571 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.315410871 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316916158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556602998 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402737623 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.320158995 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314648385 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338240578 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320942004 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.320832141 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435783162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957094424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316815148 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352109559 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.320432102 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310193217 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322954291 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94634487 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.329232408 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.320048741 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321946068 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31672488 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318551582 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359775238 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31668718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.335078377 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316833996 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055269211 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32364808 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338280763 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832722747 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320231915 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.32221484 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542023309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318382674 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318772465 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.316201311 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316967376 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021479358 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327767416 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.30098235 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357376966 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999330958 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515294021 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340976953 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346468195 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538620267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.287670925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31873895 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.329188422 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323388601 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339016437 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.006908076 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317911121 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.323044277 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564292438 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.527891531 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323044456 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.264820441 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772267021 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318155298 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.349430473 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323056628 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.521421322 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.918807272 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57178033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325951317 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358720464 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320562699 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075548769 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320605444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.331897795 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319560578 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612776424 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087179596 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321655886 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393716648 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320700604 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320323977 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320751959 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342669964 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319996307 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.49631552 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328213843 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56680658 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.327567323 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320405781 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.321225397 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325689022 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.32661123 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541100704 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320748295 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600902243 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322071199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321753504 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321771408 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.538176477 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.322520641 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.330565603 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660175569 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327389429 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332725081 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569889075 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357470129 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433626891 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353108047 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.321977449 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571963966 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.327910525 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.328277562 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335264509 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329199119 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32519734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.33084569 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313687426 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938357002 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304567666 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329517148 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324713863 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.338672831 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398916095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330689196 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521132009 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.341422656 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331930079 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.331502256 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.325881408 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548246891 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567928933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.328526602 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504015328 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.776953241 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919841004 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34475825 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.323808615 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.324747508 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.324795107 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32612277 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323501098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324662131 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523152469 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581874886 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328740189 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928366201 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332692974 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334292779 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.336620844 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56787228 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.339477178 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326400226 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.326144936 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336733549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336869129 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573064246 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550974125 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.340497618 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326309996 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.844703718 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332972724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326931356 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328268119 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354660473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335484479 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15439978 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665292451 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318615044 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585783679 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336140673 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.349185577 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.325806519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334973667 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339045913 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.34689078 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335199389 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.525485069 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33274553 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334534422 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969690769 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081255458 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875277627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342026603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.333593791 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330835252 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021686665 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327511199 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327591316 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569255837 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020947767 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327734705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783437237 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.327246121 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063968001 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575343236 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560034864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335931232 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.331574157 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578799574 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5449737 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35354247 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340836589 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332764495 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.298769806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855878368 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337072903 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50916903 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020363977 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328736481 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335055166 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.397310321 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335300611 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709935335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333049503 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328636596 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330287503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337488427 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156809943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335500753 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329520537 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95350186 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336405347 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.79179996 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33000832 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.530500031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579200019 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.553498122 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.335075372 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.335213494 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.577294216 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575468323 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33569711 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336229295 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878198558 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.191853624 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.33818919 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332002042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086207847 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345029514 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605211949 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.337014613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.349629803 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34478898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332749899 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331804497 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.332227044 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342646036 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308128562 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800393169 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.326378669 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3287278 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337851263 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337000183 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577122973 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.348132696 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934558247 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563174364 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323359232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369062152 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.337507234 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332415199 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.323157391 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333118698 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332136146 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387866293 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.556258035 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350103655 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.302901624 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326104412 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547542145 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332224135 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333722774 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551058207 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.338992828 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.348021209 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111644066 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370192431 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334623556 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341656037 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342956209 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376890996 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407553811 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533430771 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.58495565 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585443157 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72162993 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339432794 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341145711 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34975669 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415860751 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334477546 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.340913662 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.353070885 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93775025 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097669935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949801362 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58555271 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343204333 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335380766 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336728788 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577357731 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334671928 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611456572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336790917 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.337135974 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362059273 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335662787 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357803643 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567289398 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610123856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334883293 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33564666 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342337871 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.336379077 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585808039 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.551907652 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809058347 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857492072 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339390914 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33751062 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055594452 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613337549 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338748938 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338781125 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337925335 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.360335007 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364360974 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.345420448 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340866182 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566006049 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581320348 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985418352 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584554287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.525445173 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.259045443 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338927234 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589888521 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174120095 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.538602314 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953546219 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045282061 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593800026 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412414635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539261164 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.343087331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575481302 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.349437748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343378412 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341228205 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339564583 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.338752508 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583205817 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954472128 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594320884 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.345143295 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.346660006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373351846 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.538500466 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56463271 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048130331 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558474172 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589793741 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352141057 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338995109 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956228725 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592421588 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347126207 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.346761187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551065289 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345011143 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37553944 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.203516565 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.33966898 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863896024 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.553158141 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36389056 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340443636 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050614382 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959420517 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.346928704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817145391 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3430929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34827769 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623010861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.34794418 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347721052 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627384836 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.347481716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341617522 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548758215 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.952921891 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09322545 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.34981234 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36591021 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.350436877 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342998082 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333075962 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347003762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353368615 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.728191693 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347749715 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343759865 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357489903 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.343663733 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354903398 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.347750484 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345067411 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.351960589 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.323767755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.336296835 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355115311 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466775087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880850421 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345692996 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.957705746 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.67913685 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590330964 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348989256 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.318658048 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.34975079 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34588179 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345606579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344311537 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357524359 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872087778 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.358837175 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.598181734 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357261819 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556275731 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555920693 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346427449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553113212 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360631565 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373217305 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.315155683 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345353082 seconds)
  done (took 958.268558055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.339933461 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.356650639 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.359156975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.397520788 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.346379146 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3411014 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.345123778 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.395920998 seconds)
  done (took 20.103291555 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.344779539 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.349621357 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.345153039 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.349814896 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.338164429 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.873527507 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.341769055 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.346528626 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.359047687 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.348620036 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.341809185 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.003262955 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.350812019 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.344138578 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.348394587 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.350715512 seconds)
  done (took 31.959087165 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.084271608 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.378275545 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.908007294 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.402696942 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.396193293 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.350816081 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.487570979 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.341586461 seconds)
  done (took 25.572575029 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.352006738 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.353817829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.352250146 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.352076755 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.351861895 seconds)
  done (took 7.986507307 seconds)
done (took 1215.845519012 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.353901088 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.355138478 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.354091527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.35590113 seconds)
  done (took 6.644204441 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.319753665 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.318881887 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.318409875 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.33076617 seconds)
  done (took 9.512002702 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.016335902 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.863246482 seconds)
  done (took 5.103949228 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.888600681 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.88786308 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.879892338 seconds)
  done (took 6.880484598 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.643319686 seconds)
  done (took 2.867520913 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.322873228 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.344446761 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.071331403 seconds)
  done (took 7.962632621 seconds)
done (took 40.194393572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.340375016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.10152577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.495838462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.339656795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499528985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.495195865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.590837188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.340482205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343409826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350568827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341997998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.501160318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.581760582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.10310994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.579619292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.103323604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.500491004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341541457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356550392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.350393203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.592301319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34102508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.35517443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.354339702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.506072392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.485597344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.354921462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.102408318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.353091017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.343036557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.490606522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.344605733 seconds)
  done (took 81.5060132 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350209646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.352209453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.35343091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.342627485 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.357837888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.358839855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.343816299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.343272786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.342763695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368637506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.342536719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358137978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.344981226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.343951842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.359948768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.343307679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.363964753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.343855813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.359574361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.343887804 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.346243487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343229321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.371785843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343768083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.348896819 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.345478581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365192445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.344971294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.343417492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.351180935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.35067222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358208953 seconds)
  done (took 76.459068529 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.343235799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.35013338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.359400546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.348364186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.348497424 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.358217604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.353507531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.3513174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355387761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359955133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.348590619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36365127 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.351545908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.362594833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.348486907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.343867791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.350198488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.348821118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.348510752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.353781181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.352528461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.349559795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.350516997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350288291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.365692092 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.350966167 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361518863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.354695375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.350295737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.353322722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.350821498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35089216 seconds)
  done (took 76.519515267 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.584405965 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.361974322 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.365708496 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355323671 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.365601169 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.361684538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.356591461 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.593682801 seconds)
  done (took 14.576096525 seconds)
done (took 250.285938951 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.355646189 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.838801355 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.388874512 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.35530501 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.377799425 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.384014449 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.578694462 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388259263 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.573855773 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.372624411 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.371521064 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.357306639 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.157972405 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.514397651 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.175367681 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.292721059 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.221103067 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.352878203 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.901532801 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.633421981 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.380981061 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.347976863 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.168584078 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.236594994 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.332814157 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448574326 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449131934 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.580100187 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.515101154 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.429746384 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.848989817 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.362762895 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.363062069 seconds)
  done (took 63.290311559 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.354693901 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.364261037 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.364009412 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.364348047 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.363577445 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.365092635 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.356298591 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.364435262 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.364650834 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.36522194 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.363594087 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.364734439 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.365564182 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.36416338 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.364495766 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.338902164 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.355026603 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.364814457 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.355572624 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.338489673 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.366203533 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.365944098 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.365742335 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.365730527 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.365370205 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.366049694 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.36565468 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.366077331 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.36636966 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.36499253 seconds)
  done (took 42.093863696 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.366703108 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.920978715 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.085345416 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.368532493 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.35723474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.361488326 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.639139151 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.372760138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.361128943 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.362211836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.828073054 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.376130268 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390574628 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.088007461 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.364563475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.367770828 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.368369542 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.358193403 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.931715802 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372902321 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.637782892 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.372659535 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.639761095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.370920229 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.363124549 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.360228929 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.363611698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.147541339 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.383110592 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.828617118 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.113109528 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.63823332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.088540438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140271089 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.110511581 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.374526839 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.368946293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.831269051 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.367235057 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.361150809 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.636330357 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364942141 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.094543346 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.041776932 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.377365671 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.369542016 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.195903978 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.835724337 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.599540449 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371476799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.134404581 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.368186038 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.372569044 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.364027401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.597441879 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.367840838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.361538639 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.199347065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.367127617 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.640459218 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372441615 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.362667685 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931816482 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.366843358 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.923175868 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.368295577 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.370574066 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.362242358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.095965442 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.370194495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062104668 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.382961897 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.371744817 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.83238943 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.934562347 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.222275004 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.363653069 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.932699412 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.115847856 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.655510601 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.370703976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.124518356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.657620294 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.366902604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.375803677 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.374246737 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.373012803 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.433221119 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.638373311 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.97675295 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.057222063 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.218765177 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.647868228 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.371147674 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.363307215 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.209138533 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.374130466 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.373029712 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.096368387 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072479375 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.384010946 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.372099525 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.044552547 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.386894205 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.646711967 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.36999531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.143894424 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.367639992 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.435577916 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.374388585 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.372175514 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.367563209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.645159417 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.37240819 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.374940777 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.057782758 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.870345019 seconds)
  done (took 190.859611185 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.359820756 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.359861474 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.361795393 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.360002085 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.359817173 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.367648863 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.359538238 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.36094154 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.365416931 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.35947216 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.359303435 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.368835569 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.366148653 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.361171873 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.360346025 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.375582817 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.360056976 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.365139008 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.379328523 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.361767138 seconds)
  done (took 44.514057907 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.375962964 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.91543054 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.883183424 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.381015974 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.377016493 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.367959614 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.420468437 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.375719937 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.377460815 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.658401521 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.53254004 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.383058517 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.376545069 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.377940865 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.883961442 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.350019962 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656550398 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916627759 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.383094707 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.910553039 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.350319321 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.377212572 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.36617063 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.911259012 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.668167663 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.646630003 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.424427337 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.912189978 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.382184087 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.377226634 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910477777 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.377443169 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.369963847 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.897743306 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.3787482 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.391862731 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.377777777 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.425028794 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426279244 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.659910197 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.922638557 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.660894182 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.393230397 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.527486867 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.380362986 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.350074901 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.923471631 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.38005574 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.351327629 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.379936558 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.384675411 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.898119085 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.375459194 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.896883239 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.384462841 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.379330108 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.91457603 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.897837978 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.891390447 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.540688803 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.369834085 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.648545997 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.380657013 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.924560042 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380324841 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.380960902 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.380900034 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.539162753 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.926458776 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.653482858 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.671926896 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.672114328 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.385519291 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.43750594 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.382636356 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.665636923 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.440649357 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.750593823 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.667587936 seconds)
  done (took 124.272141297 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.637091544 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.482263462 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.744159716 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.944306703 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.870461933 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.511760449 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.485656541 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.612420305 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.388026437 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.482854815 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012372515 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.466660441 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.114115208 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.436628851 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.478065873 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.502115016 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.764076808 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.354288906 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.011850796 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.999717062 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.38107614 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.475843991 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.900412501 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.566640928 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.385022446 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.92564439 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.306722516 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.886086847 seconds)
  done (took 52.374607925 seconds)
done (took 518.635924817 seconds)
SAVING RESULT...
DONE!
