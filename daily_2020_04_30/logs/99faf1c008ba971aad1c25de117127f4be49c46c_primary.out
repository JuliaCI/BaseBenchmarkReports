cset: moving following pidspec: 4242
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.29920102 seconds)
loading group "string"... done (took 0.629191269 seconds)
loading group "linalg"... done (took 8.118746132 seconds)
loading group "parallel"... done (took 0.170067092 seconds)
loading group "find"... done (took 1.212135813 seconds)
loading group "tuple"... done (took 1.925969359 seconds)
loading group "dates"... done (took 1.316243947 seconds)
loading group "micro"... done (took 0.221295669 seconds)
loading group "io"... done (took 1.017489495 seconds)
loading group "scalar"... done (took 40.623565583 seconds)
loading group "sparse"... done (took 12.482028602 seconds)
loading group "broadcast"... done (took 0.987147766 seconds)
loading group "union"... done (took 14.030946941 seconds)
loading group "simd"... done (took 4.858760348 seconds)
loading group "random"... done (took 9.421650757 seconds)
loading group "problem"... done (took 1.819446842 seconds)
loading group "array"... done (took 21.330921028 seconds)
loading group "misc"... done (took 1.651392607 seconds)
loading group "sort"... done (took 3.441285048 seconds)
loading group "collection"... done (took 18.04964236 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555629306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138112547 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146875263 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134407411 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.163647396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131429748 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138644671 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098237854 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.84976037 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163484951 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127915755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42416473 seconds)
done (took 5.476760418 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.190332777 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094144532 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095273816 seconds)
  done (took 1.255370972 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.081602741 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143690867 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083020132 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083505607 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.082735425 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083394682 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082699027 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08318109 seconds)
  done (took 1.707395076 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.089397282 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084725972 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082094821 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.083849122 seconds)
  done (took 1.406756182 seconds)
done (took 5.717598175 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795762871 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.227588611 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202598203 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.425312954 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148039694 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193225027 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652624251 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326056438 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206121074 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092288239 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126640208 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.363179167 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142806603 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653485479 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093888631 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109731775 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.154666442 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452972907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087232319 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100576987 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108507933 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147087207 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103422519 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09260981 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16555861 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086922218 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157724198 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.101782576 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084718486 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.233759582 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191039325 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680550864 seconds)
  done (took 10.812477284 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114812273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114527413 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084571005 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141549932 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.11715704 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086464003 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091204832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083633385 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105782133 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145004338 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.10724552 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121102389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082267752 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082996132 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097147731 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224569983 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.100619255 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097421278 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084396569 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094951262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123447731 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093914624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095477516 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095675113 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144718087 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196725161 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112250834 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114353947 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082407997 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097021727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13343984 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142603772 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084512546 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079729981 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.14118386 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110782021 seconds)
  done (took 5.124687295 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.991251659 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164301527 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105598886 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148001833 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081197405 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124717325 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082699046 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097294579 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.222107896 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.43748737 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636417139 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151600144 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12766784 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119879273 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084399068 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085258044 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083960317 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.522297807 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.11373301 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121163448 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097883807 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085761948 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084775522 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.080685243 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087642963 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079445642 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08701027 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.127550647 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090409487 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.331304688 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138397688 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084385166 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956363398 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.182829544 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084432158 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117611979 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176836071 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106226367 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105179557 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154468619 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083436958 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.216202432 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178724982 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084376932 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088876857 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082855297 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100849874 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121400083 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136692038 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081495962 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082497651 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184808678 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081033516 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098279466 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.152552778 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171135655 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081974417 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312920562 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108247399 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088512298 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081206675 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190379127 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139183012 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085445681 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083904152 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085171706 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08504581 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380367939 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084745766 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.958755097 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087267739 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.094141632 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087461584 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087550826 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09073655 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090617684 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105941481 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08278911 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089620848 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082421345 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082271067 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082592183 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095006146 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404861018 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083793799 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088056075 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081081082 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107166321 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112285383 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083558279 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08133897 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115952064 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084391336 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081921264 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084497492 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095041507 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085901514 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128257536 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082769106 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209408195 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084656299 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116282529 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088440496 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115100432 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080930254 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093674392 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084997262 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.482774666 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080428658 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081808383 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089970062 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082410333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085425923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082982568 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095064488 seconds)
  done (took 23.635808362 seconds)
done (took 41.630326623 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.265480142 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08278943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08229951 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082508428 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081728511 seconds)
  done (took 1.748603301 seconds)
done (took 2.883686909 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141458889 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114902147 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08052031 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116252778 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081018828 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116911319 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116060313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092626859 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11560946 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080459701 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112763329 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080636023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080643129 seconds)
  done (took 2.482991249 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097468153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097443673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083456627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096162451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08022112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095728675 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095559508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102512187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095697846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086213099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077148044 seconds)
  done (took 2.135927523 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096108139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097278427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083369038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095361574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077176615 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094917258 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095135855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098902211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095665268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087479455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07738307 seconds)
  done (took 2.127697664 seconds)
done (took 7.870784772 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089984205 seconds)
  done (took 1.209375044 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.54726857 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.604366701 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092921308 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115419094 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.205966348 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123813816 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252204417 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097106686 seconds)
  done (took 8.330084948 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107538994 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096287463 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085740226 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085826035 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083908106 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08486306 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08474558 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083307073 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085872282 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085496371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083110309 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083880393 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084006823 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08222279 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083993482 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086460404 seconds)
  done (took 2.585750192 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110924333 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109504976 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087768212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089028827 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086696029 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.086134814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088334123 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087626984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084396772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086269331 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089061194 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.087080434 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084981136 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077451064 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087354984 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090129181 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085002177 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087470976 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088420386 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088554057 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088414675 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077440241 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085688305 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087886771 seconds)
  done (took 3.346778847 seconds)
done (took 16.602429548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121365756 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084212611 seconds)
  done (took 1.327813479 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093015013 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.093595961 seconds)
  done (took 1.316734105 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.094478288 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078702493 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09998492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.090192743 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079847162 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07885478 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098273578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078905447 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078472183 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079389818 seconds)
  done (took 1.987283813 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081256427 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088795929 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.082462328 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092484291 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0857793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.077568506 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084382327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080817692 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.089117411 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076061928 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084128941 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096161983 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083657366 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097939028 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083965959 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081156797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083462721 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080221878 seconds)
  done (took 2.6624769 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079356023 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079332863 seconds)
  done (took 1.295727445 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079090608 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076824494 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079788773 seconds)
    (4/7) benchmarking "year"...
    done (took 0.079231789 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076474571 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076337204 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076796167 seconds)
  done (took 1.676964479 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420308705 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.131424511 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335354033 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087990279 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.096256362 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272742008 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.079976967 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085302598 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085331075 seconds)
  done (took 2.770075309 seconds)
done (took 14.177183514 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096056091 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.099962739 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109782969 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392616921 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105740807 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081539533 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.12951095 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194848351 seconds)
done (took 2.356038088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.232519813 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.799924566 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.496863102 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.223763325 seconds)
  done (took 2.664251169 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353947557 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101517586 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073310812 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081851456 seconds)
  done (took 1.762358317 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082905598 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08370697 seconds)
  done (took 1.312860811 seconds)
done (took 7.122713649 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080849416 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.221364644 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080032341 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.078044044 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078183018 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080212908 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077749263 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078376019 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080804384 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080040542 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.079956942 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080143438 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080219655 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078100227 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077769921 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080061441 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080090817 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07768767 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077856199 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077875532 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080281534 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078128972 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078105356 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078025207 seconds)
  done (took 3.22028989 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096137222 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080639409 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084585852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084158077 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08228005 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083954504 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084038925 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080275454 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084824197 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082402221 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082222077 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081740234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081713523 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082279765 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08213922 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081938063 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083975951 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07968455 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081939424 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082313755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083839423 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080550514 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081857097 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083782974 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082297731 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082192433 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08323696 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079856825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083979984 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081727325 seconds)
  done (took 3.648470189 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084432623 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076687747 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077160436 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086044809 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077567636 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077499498 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076694482 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077925149 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077819804 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077125832 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078261843 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076348469 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076547293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078093387 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077583503 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08108906 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094175475 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076905982 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076815421 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07727268 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081155704 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076811874 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076923461 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079626366 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076459732 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076404356 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07763251 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07675515 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077811793 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076451709 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080801602 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081332585 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076777645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085094057 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081043736 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076575359 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081802061 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076995527 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077229368 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076478881 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076293815 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076486735 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076467768 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085502017 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077058039 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077657559 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077118232 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078177636 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077034839 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078633832 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07652689 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076936029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07871729 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07809004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081950953 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076693543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078292503 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076384947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077718306 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076941597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076606563 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076856278 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080229347 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077409621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094210656 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086415857 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077461623 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07879903 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077413587 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080672616 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078346361 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092347109 seconds)
  done (took 6.850015784 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101484016 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100187052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079747348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079454725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075509356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077601743 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083291152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078087918 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08005558 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096770752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078271011 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079829111 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079661867 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081953599 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078377919 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079359062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08586113 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07493702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077799215 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081415351 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077841693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08277341 seconds)
  done (took 2.982855659 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161212925 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083956635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.118542401 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088369798 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083692371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088483927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083304958 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083931031 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083787169 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081348374 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081359196 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083552789 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083259498 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081477725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081662192 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081093904 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083437641 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081508075 seconds)
  done (took 2.77891405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090939582 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080209254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102001699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079516142 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080118608 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08206062 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084236301 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087319082 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082223992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080150307 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087269045 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08242497 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082206269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080166353 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082161446 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080212323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082454204 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080559195 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087266127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093139917 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08421617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087174438 seconds)
  done (took 3.024419955 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093674347 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082092965 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094449473 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082555767 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075348537 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077367935 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083996461 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079711063 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083781704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081462693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079899095 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077395725 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.081849772 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079601899 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082022861 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079924627 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08178327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07983631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081527163 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075231288 seconds)
  done (took 2.801888387 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097108778 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081308335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080759639 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08721834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080830485 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081087735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087473144 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0811042 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081125675 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101569507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081148849 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081464197 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087562759 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084900289 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080597608 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087483539 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089784207 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086863566 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080657158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080464765 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101543794 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081131533 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087000585 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080594384 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080709335 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08060209 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08139224 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084644225 seconds)
  done (took 3.547139406 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08119037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079786435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077924908 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077405249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077789806 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078253236 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077903893 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078013111 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080158016 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078142502 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080049154 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080209844 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079922019 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079965585 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079851562 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079976924 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080050957 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077806945 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077968542 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078393427 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079874264 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080489578 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080180451 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077657411 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077348936 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079936966 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078445091 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07780901 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080435767 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077721569 seconds)
  done (took 3.54454752 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088849022 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086843039 seconds)
  done (took 1.351627522 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076587812 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094222699 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0768096 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085742719 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083313785 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080799926 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08665324 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083538832 seconds)
  done (took 1.836642968 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098919939 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.089713471 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.079867468 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08902579 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08841411 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098337127 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141965399 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.080012018 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090080359 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0805577 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096302302 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081617348 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089935305 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084470327 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090360973 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093624495 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077201047 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08462375 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.080909338 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077927126 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080245631 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092996009 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089179214 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.075093671 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084914082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106215399 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095111171 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.078895011 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086317465 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091611235 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088931373 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074331196 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079064561 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079438221 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077459618 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.088350536 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097561416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086508569 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091765984 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080031729 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086916914 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074873592 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088341881 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090587205 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094682731 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079685653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079468386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07453208 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080202778 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085838554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.07493735 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083986427 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074322657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091706703 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087640132 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095204195 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07852015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086210865 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086147208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086795571 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091340011 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085903078 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08901467 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079046864 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094626932 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089024679 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090885697 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074626278 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073752139 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077447466 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092844573 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107991115 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088997 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.079802258 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08021151 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077189522 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087223247 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079602458 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088213652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090616868 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.078619817 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083453533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090993303 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084160621 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085532507 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085694429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0776435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081821192 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080261978 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098743226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078624334 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07727489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080570684 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094452398 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089261354 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.078932085 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080366904 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090741266 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073733961 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.078947399 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079411266 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085007 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092016196 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083125273 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082064111 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091004664 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.085338579 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082994241 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084470736 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075094245 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078268277 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080156763 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088742225 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072480066 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084922694 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081346807 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.077992171 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088983199 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.075986075 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.076862011 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.215305745 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092558599 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07923767 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07747964 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087925583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080619102 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082223561 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093741586 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078316429 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075142591 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075686225 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088289406 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079919283 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08777979 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083714127 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086558687 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074438982 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077631775 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084504303 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092187169 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082237932 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085805871 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089574764 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085580498 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.078611525 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0922294 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086186762 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081929173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089681174 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082953719 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075198494 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082287028 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08715433 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078178064 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08665665 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081583423 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08694044 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080088494 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078204725 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084691101 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080047602 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08145211 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084270116 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078350057 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094574835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086510373 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074936622 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077183842 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08600736 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08052214 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.078964768 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081345791 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085486249 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.0796489 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077337343 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.078759525 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085301845 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087247524 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081892638 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080223501 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088127959 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096277117 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.078944844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086425245 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078392911 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079862091 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07939568 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093117187 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089756065 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082768314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086128549 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076580476 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088312923 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091457552 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081490183 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077469937 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081343955 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08218671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090273489 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082510607 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.079553966 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07766015 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0851234 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081514625 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085413444 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.078897144 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081248734 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083559447 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077210221 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084814629 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079933903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093277602 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086559426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074439354 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081193661 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077618487 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090211641 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.074619072 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080412437 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081946858 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.079956426 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078424333 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085821354 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073621504 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091293337 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091449487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084331725 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080900677 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.078514416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09026979 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083991046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085783064 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08445844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086737596 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092738898 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080335766 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084066419 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092181667 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077532308 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072801325 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089578846 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076362771 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076567501 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.077561578 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07609432 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.214255245 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087529434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090980748 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074920943 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08691557 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.07894079 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083028171 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075915563 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088977023 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08663323 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084060471 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092968655 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080658817 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079815262 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087138 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079410154 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.080035524 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.080720394 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086577841 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.079299184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085618525 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081878643 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085760034 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081839293 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077729688 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085992812 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079513549 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085201574 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088476356 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08001631 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085650323 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086142739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.079676048 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085813813 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08264031 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08179137 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086074017 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08539485 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084458719 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085962521 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074607832 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091491825 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078852332 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092499985 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084077665 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076723554 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084600606 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085758625 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08342515 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.079736463 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.079870343 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084748581 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.078709993 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085886037 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09162568 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08051545 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094693466 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090243604 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085067524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085858183 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084609408 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08491861 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081408307 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083447675 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.079698308 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08501691 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07916263 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087076458 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085855955 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083808433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085100888 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.080087793 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085170694 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.080173121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074156475 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08216296 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081943824 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.079196731 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091686227 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079761948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082710498 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078446275 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079738931 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.07855134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076330087 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085297122 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086470424 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079866692 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089917004 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080909605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085188055 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094499667 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073488481 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.077356859 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077621017 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079784554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091497053 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.079529861 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09274942 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084509082 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081329187 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077066856 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07919111 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.077657483 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074058079 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.076905838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086918098 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081087963 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077935176 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.078930564 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085957325 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07922109 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089913089 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.076902377 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082061896 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07761718 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075467613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080279696 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080324547 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084865764 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.077988187 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078786484 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07566447 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07738499 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081726508 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083700691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077453633 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.215649211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093088965 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079884726 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087404192 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082993743 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075705053 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086399669 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079666386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0792817 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08236321 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087237921 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086480872 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079987111 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093237349 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081957505 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08563868 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079300871 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077843494 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.079216671 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.079862601 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.079510569 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081955305 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080539014 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092889984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078227908 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085681457 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085065508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083705556 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089597798 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.080129133 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086306513 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085235653 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.080779522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08595779 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092530005 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.083044706 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086860045 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080449487 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085528948 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088968574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081834157 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091528769 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084867366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.079807074 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08525141 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080840787 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07926715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079386501 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079028636 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089218653 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.080002836 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081144133 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081270014 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.077520822 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083132055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08156088 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092553343 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086567042 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086417929 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.074923483 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076987913 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079787751 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081279998 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085252417 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086194228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089863129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085730226 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082957766 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078553237 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093902871 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089164868 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087006364 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080817151 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086737384 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07999523 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085898904 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083720656 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084050766 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080372942 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087493789 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085186043 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08195424 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089812115 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087101404 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079664751 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084767285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085512581 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083875064 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.074444622 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.079573766 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085853686 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087995149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085940778 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079028201 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094260224 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080820001 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083813576 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081581111 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07866493 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08760788 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.074684228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085593538 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079633221 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079621819 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07498397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081826073 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08065677 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085809287 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081362744 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.074807938 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094334374 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092979889 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085054271 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078020231 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076832929 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.073859365 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.073833423 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080213305 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07867288 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083923018 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092438815 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079977948 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080153829 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.073564611 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077867678 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085237443 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085229591 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.206483017 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.075946964 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083039856 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08598499 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09167694 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078564318 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.079440033 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086734023 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086606443 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.077721161 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082796667 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076920015 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087340463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095486108 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.079517151 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085371872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089690576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092383631 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.080424131 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.075588638 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.080217742 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085904651 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08512352 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.080068323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.081265407 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098752105 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087091675 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0817394 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.078364277 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086931532 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082690501 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093442031 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080588196 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.080295003 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091084405 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085883825 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087172673 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089923891 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090549942 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086002498 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085435211 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.078914126 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084415813 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.078746218 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081855612 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.080337 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.079944366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083622206 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085747357 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084007537 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09445386 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092823472 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.082356735 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076456339 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081489759 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081802684 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.075342484 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.079849565 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078087862 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.078243113 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.077766312 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.078726108 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085462165 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088423273 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08427121 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.079771439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.079200053 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074391879 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089717804 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086912976 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086094275 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076886043 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.079407614 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.080208562 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087930808 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081878113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078615529 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086429019 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086087197 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08514613 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.075303499 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091093747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078759303 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085700883 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082273067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079040046 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.079695517 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086923755 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083451466 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080631384 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086022672 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085788528 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080672718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077264278 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076545065 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088465813 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.077303739 seconds)
  done (took 51.459067319 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113537262 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076388616 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075339096 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075159196 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084859951 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076404247 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075294277 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076052306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076458741 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078474622 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075241313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076097925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083183379 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090279856 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085264965 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07958599 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075358818 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07641988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076213595 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076513869 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083018647 seconds)
  done (took 2.956805006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085505682 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090726368 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08756339 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09542369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083725112 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083009703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088150104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082548521 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090978149 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085403549 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091228486 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083067669 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08536966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085249737 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085517356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08303681 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090611522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084375732 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.082853075 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087775197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082746779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087766317 seconds)
  done (took 3.147422207 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.079900155 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079012237 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085718679 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074111444 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.078655053 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074738985 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.081226696 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077161735 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08201345 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.081014928 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080630749 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081564758 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085930025 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074300393 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082073906 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076485961 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.119534998 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.081862027 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.078792642 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.079694473 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.074803822 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085727411 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.074795455 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.074912281 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.080957507 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.081740156 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.079639469 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.077989869 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.078626807 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081216165 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.078910772 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077163634 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085560804 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085063368 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08125478 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080933633 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.078700424 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.079024278 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.074559892 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.077573186 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087587459 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.074693588 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.079053881 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.085514217 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07735161 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.077404025 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085668766 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.078437296 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074728208 seconds)
  done (took 5.193183028 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.091057189 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126233079 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.080620228 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106283791 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.091822065 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.084963143 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08355973 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107408393 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077026606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.077594215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.093571226 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.090970265 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07854666 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.082907612 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.083495432 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078457269 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079033456 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077802058 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.081871956 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078001728 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.081667867 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084790206 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091581978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09042364 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.081706034 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07730476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077920094 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.082547872 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08978125 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.081918441 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.082324154 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083071184 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092329677 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083541055 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078278006 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08094237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093289974 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.078802621 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.081053458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076940755 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.080756654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08242366 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085174949 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.093740907 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078341646 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083374707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078443828 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076815899 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.090008476 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.080597516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.085160648 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.090943218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082070918 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079226144 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082490227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.092317981 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.078258578 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.077151038 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.080986365 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089026369 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076960576 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.081546249 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.090192262 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.080280071 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.084528834 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09041288 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083378273 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082256123 seconds)
  done (took 7.146819366 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089057317 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109108944 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095242851 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094921664 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089347133 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088905521 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088691168 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089118676 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088632398 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092844026 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088904725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.127950793 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084776363 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090794698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088833301 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088885072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088590524 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089514778 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088627443 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08899202 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089170306 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094911468 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088986827 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094624828 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091564236 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084885205 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087959673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088860367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094955269 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088588929 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091854259 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.088607175 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089307731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095358886 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.091693354 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08824211 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.078408732 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088823577 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08871453 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088994028 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085339439 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095555127 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0888152 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08470208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089008018 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088665212 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095533629 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.091703044 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.090785527 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09313418 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088976722 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095359896 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088922248 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088503779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095076401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.09732867 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095074907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095066224 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088978843 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095040415 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094820528 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.097637387 seconds)
  done (took 6.949008998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094093343 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086640514 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094453568 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074778041 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077815967 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085331144 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07774606 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079827357 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086035743 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086034954 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088187458 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085160292 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087957966 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088018969 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08521382 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088096608 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085134005 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085319324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085922173 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085341772 seconds)
  done (took 2.985084075 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089570516 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096299713 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081401359 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085160838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082483429 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084968895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082386254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082884588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080905423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083395526 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088873536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088917902 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081144356 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085032981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088983401 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085041125 seconds)
  done (took 2.630335834 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095568157 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.085532965 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091745121 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.078988415 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080396719 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.076023248 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.078542969 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075018962 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075617465 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092469471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.079174003 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090171981 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.078833151 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078054158 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.075974421 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085068241 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076215594 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093034996 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.078654971 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.090743527 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082708304 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077130241 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082389779 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.078964742 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081691588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083019445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.077608501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080112732 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076145861 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.078894164 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.081955092 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.082463507 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.075653552 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.076697766 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.078094643 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093549417 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.078747512 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.078954628 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084129371 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.078926987 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076636131 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.080845591 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.078906879 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.079528241 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075251162 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0791686 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075060382 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.081292329 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.076536174 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081372231 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07841555 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.081376195 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.079398719 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.085994341 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.081141568 seconds)
  done (took 5.718498443 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093801638 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083012561 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075529026 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076804673 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082221363 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.080523277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08299799 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080708749 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08078992 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077448745 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081021427 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082404966 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081116046 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083137541 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080595659 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083356627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074650715 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080525354 seconds)
  done (took 2.756037068 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085533494 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079990941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.086921741 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079475664 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.079419185 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082657607 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074903929 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077505917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078189558 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079674033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080095155 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.081881073 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077366086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082038107 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079960577 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079285418 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081926376 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077538542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079556934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075368881 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08215222 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077646854 seconds)
  done (took 3.041669039 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.10897288 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.099241669 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.153150524 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.094469251 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.101064579 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.088183988 seconds)
  done (took 1.929877632 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104677278 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114244499 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080773706 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082565335 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087989902 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083289023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083135688 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083357859 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090377716 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088835493 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083476356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090240815 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090405426 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090092193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088196781 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091302488 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083137463 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083026974 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079627994 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095270205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083391533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091127194 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083828296 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083216694 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08331321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089852225 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090721211 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08782986 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083756602 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090658956 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087773966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083656839 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091189903 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088430576 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082851482 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090262412 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083156512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095137548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088096014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089782626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082758139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088031053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090006249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086826196 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090178949 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083658703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087122176 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083692469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083727806 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096700051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088611336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089566319 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088335098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090646417 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09031653 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09675341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088271765 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089631505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08823251 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088295359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089442607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088116453 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089515352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088342973 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088102014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090203523 seconds)
  done (took 7.116053934 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117927418 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080426034 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083245422 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088064561 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089925009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083286966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08417092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083671404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083573699 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081439115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120806913 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08431587 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090442267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089948718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084080685 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083902689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083793567 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089580683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080972356 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096727645 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083833322 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089973578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089850439 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089707057 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089062473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088473347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083527193 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083638445 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08323139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083751907 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087362456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083346876 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089488139 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080038625 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090023055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083348226 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083213612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087327896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082910385 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087995721 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089854917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094606167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083264015 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083049688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08844037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083556765 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083423075 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080265337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083423076 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080582166 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088326593 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087958759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088435978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089627389 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083603392 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083740482 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083522933 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083771151 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08323095 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088291438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089995162 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085425446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096672997 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083677599 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083958722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089810752 seconds)
  done (took 7.051686108 seconds)
done (took 146.817154309 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21002049 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185252816 seconds)
  done (took 1.671782928 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.08929926 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117022133 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097288101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148856652 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086928936 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122032118 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120700992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097799018 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086827804 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086963376 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087678342 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089568422 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152863831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087701017 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087225543 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08959476 seconds)
  done (took 2.944156069 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119786126 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179859937 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124986512 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.084868565 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120008927 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092823499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084714589 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097815205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091539516 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08711126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092722215 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09340638 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086226086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091173575 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091576695 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093335577 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086724999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092965406 seconds)
  done (took 3.108182043 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119209988 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110467441 seconds)
  done (took 1.526612125 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173918052 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.148734647 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.216251247 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35989585 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169025795 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158563559 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.157038056 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.153937519 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127685781 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.15092789 seconds)
  done (took 3.109088428 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119004391 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170040803 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307146732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135770443 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091486336 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110243906 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137744828 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097360112 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099080312 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099283418 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098862219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093782286 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118123245 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09193467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088261329 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094167937 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121423847 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087541201 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08847005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093968522 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121352585 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085642154 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091981687 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08807987 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.095975165 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.095925255 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087275323 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085168566 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093748269 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088719818 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094575019 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108499551 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096457276 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.122039458 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.089760897 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.122971749 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09409467 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092015533 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089062582 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09229557 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095974576 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095405538 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09413075 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093849661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08691416 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093936574 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087110362 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085421217 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095863611 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087404072 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095886989 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094663814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12137392 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08648202 seconds)
  done (took 6.912901666 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123992046 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122528508 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086469771 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127637408 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119175976 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085659696 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.120908519 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114549993 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.123746788 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086515798 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084909354 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086339155 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094417762 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.09637134 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131723195 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123379671 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088505213 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086026606 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123253478 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122565288 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084888026 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116695579 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112576223 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122026218 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.083729773 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086032022 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.084546873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0857266 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091923778 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092734021 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084644566 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094011366 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.098809638 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092388256 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083806346 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084347604 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084370747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093727409 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.093995864 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093460058 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.091667624 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083814426 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084564301 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085176749 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085264004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083465289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092669825 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.093992735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.092442067 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084599224 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085973865 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084720556 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085342236 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093897981 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.091518949 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094418989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093835933 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085098803 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084470251 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087426432 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095319694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093520084 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093976243 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085653429 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094193071 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084932747 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.094563388 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098154795 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084458855 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0882878 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084185025 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08448681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085444827 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091479548 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.09176549 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085307619 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084295444 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084310454 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.093646271 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092064847 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084328306 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091057661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083121851 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084005498 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086399599 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08585927 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.091305144 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.093654773 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.086001284 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084558237 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.08442456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084555428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083460655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.09072467 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092788375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.092266332 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.090959905 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.083759256 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.090883128 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089364209 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083301633 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.089881127 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08258358 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084066123 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083379344 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0896412 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.089060782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090888616 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083169616 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.216478484 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.093971028 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095872461 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.085521687 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.093748524 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095208692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.093413195 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084064526 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096086751 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085704139 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.093904514 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08500669 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094826311 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085441803 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09342975 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085245222 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083502606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084789044 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.093588554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.086229973 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084686898 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086881507 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085003832 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.092362729 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096102595 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086403289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093025526 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.092721267 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085880845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.092530215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085187863 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.093284953 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085033137 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086035101 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084222316 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095017829 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084652951 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084570458 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085087629 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094927837 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08499824 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094434359 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092628458 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08390536 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096278445 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094607052 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091924214 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094869207 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086529754 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.085008854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084654427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08481458 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092050557 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093487397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086392075 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084492723 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091677038 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.094223758 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.084026173 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092376799 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092025325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092680634 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084715163 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084710252 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094695241 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094509127 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092963655 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092425679 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092946457 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084607825 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09211462 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092686449 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084734057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098565218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084851134 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096977461 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.092334607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091332184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092545351 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094355743 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.093837663 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093944263 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.097051299 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083296552 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084277526 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092980727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084382517 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08543135 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.091995011 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.086071955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085595203 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096515421 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084975643 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094366879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083456683 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.092717697 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083265506 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08547408 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096783274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08338372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084502148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090606441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08263709 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090357722 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092499703 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089693134 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085131465 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084016913 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.090922707 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.090917621 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.082322142 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.218857152 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087546792 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.093223396 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.093607672 seconds)
  done (took 21.979850693 seconds)
done (took 42.565824867 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215849878 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166491353 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174964315 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.127890141 seconds)
  done (took 2.083996227 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122273129 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112436945 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101444651 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081341447 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108082047 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081234912 seconds)
  done (took 1.940481966 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287610654 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202566595 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18718509 seconds)
  done (took 2.009218084 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223386177 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204376744 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471637545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295373224 seconds)
  done (took 2.622468126 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.154611699 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09750144 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080598362 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.097210224 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137947211 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164833269 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108383487 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132915515 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092656836 seconds)
  done (took 2.451346607 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157953737 seconds)
done (took 12.596646918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.215307123 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.191216958 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133357232 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112956293 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143415732 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.08378502 seconds)
    (7/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.216315335 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11552275 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 0.147098954 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099101767 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090163694 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.089583294 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091329198 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.195246587 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094035536 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.205493166 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.131962967 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113238731 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173008802 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.20365052 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.453240877 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114631343 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116080447 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088152203 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087892384 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164554696 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.198700851 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105804253 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.087543826 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113303733 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10588016 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.131380822 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.171905956 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.082995694 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.246720102 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.255194732 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093850136 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.107032084 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08874069 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089268314 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206831588 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100146819 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085756708 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15828114 seconds)
    (45/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.131621658 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12364123 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142327199 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.086751938 seconds)
    (49/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131618571 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 0.14678892 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077834646 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.090724145 seconds)
    (53/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.118504493 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092810416 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.157240963 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194175671 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.159289366 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.221230508 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.081975732 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233534921 seconds)
    (61/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076051597 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.0817415 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086869935 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09499649 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182645724 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080331271 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087443744 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201750334 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091474175 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124047069 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.170624342 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.077151003 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161276089 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.102501448 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.211955516 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140875134 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.085653306 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162883592 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090991868 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.100690547 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.11730155 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200356549 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088372314 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075230198 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084398406 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.095597776 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.105780176 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09050287 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08214282 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.12949831 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.240515338 seconds)
    (92/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141213004 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0881484 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079560899 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093898804 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.184243675 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090892399 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185358264 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088462821 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.187710799 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.065021122 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164751906 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164185197 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090381672 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082713483 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064540156 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065184151 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.085624599 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088176262 seconds)
    (110/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076133764 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.096021648 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064301396 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06577603 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.094085603 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082166442 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129217762 seconds)
    (117/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.119150344 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.091301177 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076771929 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.187662473 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064247386 seconds)
    (122/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082064825 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096151831 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087554017 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06528939 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065270921 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103481172 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102440972 seconds)
    (129/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066079334 seconds)
    (130/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06397728 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090039819 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092939255 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.088527758 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065839654 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160372067 seconds)
    (136/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.102615176 seconds)
    (137/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076297574 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086679715 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065966803 seconds)
    (140/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.131287933 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064413382 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085930643 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063954225 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159270037 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155975601 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.081809392 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191803947 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127033133 seconds)
    (149/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064669732 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.081392056 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.086772411 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089183642 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088287884 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064482994 seconds)
    (155/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086476794 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077718504 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.162452451 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.085060558 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.179903134 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088251581 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154021899 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.136794169 seconds)
    (163/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122322524 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198504358 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.160144097 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064362515 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104670613 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064496609 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063646398 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087288687 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081999357 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063998462 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065954955 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063725913 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101706234 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.082165871 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.090123884 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110510469 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.085517463 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082442794 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.105912853 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091553607 seconds)
    (183/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077651281 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137292606 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078203149 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064407366 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.087841804 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081291583 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087463489 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088291339 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080380108 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.102446092 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065077754 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.086966249 seconds)
    (195/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158418013 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081357788 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080155139 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084640041 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079920793 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.10084559 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.103480824 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075113139 seconds)
    (203/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.082970193 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0823279 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063058831 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086658344 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.091906833 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.085831973 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158278383 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087237864 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.085069916 seconds)
    (212/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063097371 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088223009 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063086148 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.309623955 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065898712 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082381925 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096025344 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065830609 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088703206 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161525733 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.084510124 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207421434 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136825715 seconds)
    (225/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077901442 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064412372 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081948257 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183374603 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088193361 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06494999 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135167921 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194050697 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06442509 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065693603 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081860393 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065024393 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.101942191 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146098383 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.103239933 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082145538 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107865894 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06614992 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186152033 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090654464 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083750387 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105454681 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078512927 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064825439 seconds)
    (249/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088434712 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191287157 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065137562 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123951363 seconds)
    (253/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064764859 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082182979 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081974003 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081069731 seconds)
    (257/309) benchmarking ("sort", Int8, false)...
    done (took 0.160850061 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064546259 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065725497 seconds)
    (260/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132889929 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188147153 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064443917 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.082262547 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086198264 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202122915 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.087901309 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151776438 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085839292 seconds)
    (269/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064326818 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087219715 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082613797 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.081317081 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081328539 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064986238 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.106054409 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065978766 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.103071329 seconds)
    (278/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064508528 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081356525 seconds)
    (280/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064451708 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081581459 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081116056 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.082076738 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.081774006 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081576489 seconds)
    (286/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065722818 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076389603 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.107226403 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081198917 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.087030421 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142348503 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064369715 seconds)
    (293/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080750948 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063985684 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08152395 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081128503 seconds)
    (297/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081932722 seconds)
    (298/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.104360451 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09356861 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.086146901 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064748316 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064990229 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076764443 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064943706 seconds)
    (305/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09355848 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081361679 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080720072 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081741395 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.161637904 seconds)
  done (took 35.227260172 seconds)
done (took 36.573433674 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098140349 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111166267 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.088661282 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10496474 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095835255 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089273719 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.086239941 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.091144025 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.093996774 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095285831 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.094106433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067774089 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.090188759 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.090371003 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.088681158 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109383201 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.095103472 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089392573 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.089668385 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.078364689 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.089184401 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.081944356 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.081074663 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067825752 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.092484327 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.086716945 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090881859 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.090557799 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08151225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081899328 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083994834 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090070777 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081745496 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.094246164 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087637136 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.089582335 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09078757 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090918886 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.081301216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081792141 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.090575957 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081631602 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089794879 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.087497572 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.085783406 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085085199 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089304898 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.090849232 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109377224 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085757719 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091393514 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091732495 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092430543 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.086998697 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.083662798 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089108524 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.085611779 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109577155 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.089599099 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0863041 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090397068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.088155712 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085463694 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.089327788 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.089576188 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.092122037 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.090231147 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085373494 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.091271852 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.08625121 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.081697649 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089562101 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08315147 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081326982 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092850809 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093879087 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.077993157 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085775735 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089143694 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089701581 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081662441 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086136453 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.081549717 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086314102 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085695619 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068042515 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083767064 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0884781 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.078513254 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.089365549 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.088346289 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089154892 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.080707302 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.090993701 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.078497282 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.084891814 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081307626 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08134601 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.080455015 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.083579196 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.080593753 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085479368 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090104522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080578505 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.085779904 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094526055 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08080734 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088399743 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078613035 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.078394243 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.09252439 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091092686 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081497843 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085904499 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.07848666 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.086799357 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0780846 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.080783121 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.080897891 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081048904 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.085052892 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081200805 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085221724 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.086077877 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.092767641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079853633 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081801387 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084039251 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.079422356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08347833 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.079892475 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.079474306 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.079296417 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073219684 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084356708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.079802973 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.223628502 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08717235 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.090574185 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08119315 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.090016223 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085394668 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.086319026 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085611836 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079110932 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072817042 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086736456 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085813339 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08102055 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081289886 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.080681221 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.080965783 seconds)
done (took 14.712390407 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081948252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146687114 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107298539 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107284144 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.099161728 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08277773 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.087952009 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108317958 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.082051245 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.114019818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10258571 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.101283769 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.124213908 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.079154388 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082518264 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.083875633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.081505106 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095208332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108618975 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105214387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125796785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079121609 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103333639 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.103581959 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100482196 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116108644 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083105245 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.083757216 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085750908 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105762668 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.105844551 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085719476 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082840721 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108038501 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104471824 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095009208 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082770233 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095030689 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.082692761 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082731826 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.083390464 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10833387 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094352668 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.09435481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.083457285 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.089990413 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081537738 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09427278 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101779737 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.09083451 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098919757 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110101854 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.081925021 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096902519 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.077922818 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096312051 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089342177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.081981333 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.081832216 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087063639 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082017907 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.084556111 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.094356256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.09157062 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.085087034 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.095773185 seconds)
  done (took 7.644880411 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099551768 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.110137931 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.098159352 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.098646827 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081415076 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082081674 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082032325 seconds)
  done (took 2.088441802 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082429767 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103848133 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103816254 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103926341 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.094886281 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.105694507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090168003 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08246401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105183305 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.081862167 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100165951 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110290076 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083416442 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.093572186 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104936548 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082859933 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.104416821 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082135899 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083534 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104297915 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.084200384 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107021124 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093832475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.08253415 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093266567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.082874332 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126535926 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090606904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08114246 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.084063526 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081562285 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121251466 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093225129 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.093984166 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081487337 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095341132 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.094461735 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083775632 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09144337 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091575877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.093813796 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083530239 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.081529324 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081382446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.084568282 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09208465 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08137729 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.083705287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083628992 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.099442892 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.081050414 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092850323 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083325654 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.085686407 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088245617 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.084305605 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090623561 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.081444124 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.099686926 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081128103 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.097669688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09666733 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.094055737 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.096648352 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082351508 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093025078 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.093697633 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08338622 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084467425 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.083853668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096602125 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.082982232 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.08400497 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.092150556 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.082424994 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.10446725 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.104793912 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082385458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095456819 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.082950954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.081328978 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082933882 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.104814588 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085522615 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081374213 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.086767373 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084514853 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.083654562 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.081158207 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.08636296 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.081065123 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088325995 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.083709945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.083894062 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085548092 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097481476 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.082579503 seconds)
  done (took 10.185320607 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085218623 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08366149 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.085729055 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.083286957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.083789017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.083824913 seconds)
  done (took 1.96584757 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106941277 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.082721359 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.093465755 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.085290671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.117032701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09900827 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.099622213 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093237196 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.096806259 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.092455792 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09911351 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100631511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.104006409 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.085723689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09914621 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.08485806 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.099628436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087692921 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.092357209 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086509673 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100590104 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.085828612 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086725911 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.100598159 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.089263719 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.084928893 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0934364 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.092505406 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.091855464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.093362269 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.085717832 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.089259039 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09075887 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092469632 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.099086696 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.090965678 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084925362 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09033011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085515408 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088727783 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.099932487 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086257201 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.087291148 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090580234 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095194489 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09092396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.089962334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094804747 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.099217348 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.090476379 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.089818733 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084832692 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.089185364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.090023778 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09053021 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092835244 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090371371 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.099122025 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.085787388 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090448713 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.082210802 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.088445656 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092228565 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.089769841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.090280384 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.090106418 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090809282 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085613606 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086142955 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.084809816 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.090792263 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.082095998 seconds)
  done (took 8.032610562 seconds)
done (took 31.337231765 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530018576 seconds)
  done (took 1.943494413 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620487149 seconds)
  done (took 2.06163902 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.547837475 seconds)
  done (took 7.98259026 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39498359 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469921912 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.757207448 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151501208 seconds)
  done (took 3.253117364 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.732933322 seconds)
  done (took 2.181213873 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248556394 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239192661 seconds)
  done (took 1.94532501 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.370753964 seconds)
  done (took 1.8140366 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.090724836 seconds)
  done (took 2.531919427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.245065791 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173261169 seconds)
  done (took 1.866429448 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457979918 seconds)
  done (took 1.902632401 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.218474927 seconds)
  done (took 5.663340608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232629658 seconds)
  done (took 1.71187333 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.255389438 seconds)
  done (took 1.702172119 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747468946 seconds)
  done (took 3.196682389 seconds)
done (took 41.212059568 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099085989 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101421349 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101085799 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096784854 seconds)
  done (took 1.827723998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09069347 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.087224357 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090658713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086103925 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090327778 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086315505 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.087594526 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08894316 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086364881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.08621111 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086213003 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.086305741 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089143598 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.087897243 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.085275893 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.089574257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.090043177 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086546131 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.089298078 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.085972085 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.084360548 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08894069 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.088944814 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.085846184 seconds)
  done (took 3.553564293 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094255246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089159354 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09171797 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087667565 seconds)
  done (took 1.820149248 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.092046189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103758083 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102052941 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.091996761 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103368362 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09859282 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.082677515 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.083418822 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.084113964 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.091930705 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.082225726 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.107759843 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101083659 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092097666 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094475016 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.079625808 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081722751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.099992408 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093069816 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.093147435 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.084872048 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092495858 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.082206704 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1019261 seconds)
  done (took 3.674345438 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094734617 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114198999 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093760814 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.104426476 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.105456875 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079246242 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092341295 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106403959 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140485303 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.079705437 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085358175 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0798215 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.087892234 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.079482022 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.093600487 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.121440291 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.125513318 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.082966659 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111057741 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.079609874 seconds)
  done (took 3.416104911 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088421302 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088290946 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086510858 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.081633609 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.093372251 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.088935718 seconds)
  done (took 1.98740869 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084188156 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083592913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.083376212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083733 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.088028403 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083549717 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082002813 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084375715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084248417 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083644217 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08328694 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082116164 seconds)
  done (took 2.460979071 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.197637458 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084461468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084225677 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.081882085 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086371903 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082854567 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.09752354 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.083332152 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.108968278 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082714935 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.082610518 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.084793096 seconds)
  done (took 2.614492759 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212286204 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089278881 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246680039 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160736273 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119947463 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124688285 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126382684 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125097728 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147431866 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110482736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170598376 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175055319 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118643667 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147646893 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102766121 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.112661953 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160731164 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175848632 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117585662 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17173567 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153714475 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137024569 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15590671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112704918 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116081862 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128868322 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.084372731 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092040257 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180177438 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145603095 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151988047 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121746783 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102347498 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188765622 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173220913 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150040805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157498542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0966292 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11297545 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14321619 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208015002 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100865165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166395322 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118966078 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09120379 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138194715 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124281804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.269364475 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116480657 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103526623 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154446259 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191112645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143059361 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099110782 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134498042 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122700434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122633165 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129676375 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189678586 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166325816 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137455029 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.08534539 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122213518 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157947083 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142137109 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.117367786 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132609409 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102723518 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141646661 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163138509 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132658331 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153093333 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12484717 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100674453 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131396342 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145833632 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137231957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180153468 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134330945 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086092637 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131995681 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110410835 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093127187 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155862138 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088877279 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183475629 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113152806 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.115722145 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14000677 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120826576 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120693108 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16586336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149949506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115810583 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079246904 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115770382 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127103516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148418499 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098439233 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117886753 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122670069 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087590801 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285666976 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.089785976 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134639926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089430233 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134650774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140060985 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.090935276 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134330103 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116703919 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114916486 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141149068 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167126878 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102167415 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094675535 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171866999 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132601133 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.113913926 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151263186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161271981 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.113059532 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110120103 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153951003 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175674999 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102761985 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169201416 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115209532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096539631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.098821979 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132899628 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121806415 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133329227 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094148519 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127172703 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17040764 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.087505476 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108811448 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144930432 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091762031 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093856133 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116902066 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115360885 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.108383364 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110136147 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.112806782 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145039872 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134235215 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116392292 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133986871 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110009315 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173044461 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103435823 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.114942802 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115913048 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.08335942 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138038601 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158668243 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090364477 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162717092 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127392923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275524654 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131740277 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097471526 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14654031 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093553489 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.084153202 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149507101 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121926389 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122092145 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156757828 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126350758 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133139634 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128791711 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141741058 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138735532 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137041001 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117654137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.101764194 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125419344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135655827 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.08642913 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10215726 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.092848514 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117138869 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106926522 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097828417 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151506024 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132985657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121896606 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125632134 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109540243 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155918439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.089542413 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136313821 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.129089398 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108099334 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157366168 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158102364 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142785835 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11189665 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145723829 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084587217 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087888347 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098536188 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131546849 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096548826 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096322939 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124628108 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155550045 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137483866 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144162731 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134666915 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129047245 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161586619 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083010921 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12842903 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147395705 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128939809 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.114892396 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250137816 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.111603857 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150045938 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117086273 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191535469 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125922825 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135845158 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165601842 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.11379507 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09241046 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115645513 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141951974 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11371446 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147425655 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11021497 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099910643 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119080828 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08907489 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108210644 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136074237 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129980723 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146683732 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122747775 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142229172 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091426425 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124474974 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132841106 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13173148 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077777761 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128625986 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171585481 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107833794 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12849881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157795794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092250005 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148599842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177176719 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153499755 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097838333 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117904164 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130584682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133664315 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129179644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145565795 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115562448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148534766 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122128879 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.097716241 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099952958 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108119728 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115335903 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103572546 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110745475 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120453988 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106445928 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137223286 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112700338 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119165451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275348516 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.112274721 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.106464085 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109606089 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181857126 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129853451 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181131254 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.111953663 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148146792 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166981604 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088771977 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092989461 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.091412596 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146020811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097726717 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140483355 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123671412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127320699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13360127 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147248197 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108088144 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082951366 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120553085 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142398743 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133618802 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110063524 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.11354036 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166934341 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110011245 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092455738 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123429414 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12773844 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115850816 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179386257 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.074932608 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120546388 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090435476 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092733417 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13474676 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160895627 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.092982025 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.112504311 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13182639 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122389164 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133805046 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10935238 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12192769 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140025596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153747145 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136496186 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101473822 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122316186 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135956034 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159180458 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112503071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.107922042 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175474579 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304204209 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162707257 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.098552533 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128342488 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126199479 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120833733 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144933968 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097034997 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166088077 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095554018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142748007 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112575337 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099768817 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137938189 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124035527 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101262664 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150654732 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127599466 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095513619 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090865556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125853497 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12950579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115174522 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088286533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147188124 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.087358458 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142746127 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179511178 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093309681 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116263574 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107971497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093736797 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115317375 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113995987 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098995212 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.111830705 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175807033 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097837372 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153348806 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141729844 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121768418 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145323392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115049455 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.651443759 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.090310109 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156844071 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12548759 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177992051 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111980964 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128166555 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121615879 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129100472 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148446541 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111297776 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187889256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286288692 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127447552 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092973472 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114480819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11578602 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098960749 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119923028 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125101869 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126576981 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104714694 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12573576 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13237735 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095708177 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108865007 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16091698 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126540424 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151976721 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146680637 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09773563 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128591777 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144831382 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093138848 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127046621 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161381797 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116807114 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111040462 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.094462136 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110483409 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179524087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.087195933 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200246911 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130843065 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121660732 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127183644 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118881543 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14046734 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115389607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131868347 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103687979 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117795707 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124244505 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094106768 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089863122 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116835341 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121059901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.109970874 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107024236 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112532608 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156758978 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.085358271 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109954381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125278365 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150878888 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175795952 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.097951017 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095887527 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128354027 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123958854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119014714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27961181 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.093320087 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095093994 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.092036878 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.094255376 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11518371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124830043 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129788193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120033718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16719183 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.097349248 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239708477 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108633035 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116258339 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.082238689 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091532438 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109323738 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108622213 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116432641 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12258298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17799859 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.107509538 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102706866 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102121032 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.088492794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095803292 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134852536 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122367152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128453812 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112934181 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.075601092 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117592337 seconds)
  done (took 63.719339005 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118770443 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.092279884 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.112280443 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.158377222 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136590365 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214631845 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.165632602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203600969 seconds)
  done (took 2.76802051 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.084412514 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109865699 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.118652127 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.098007362 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.082747165 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.083708125 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236354134 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.096718008 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.082735491 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105748022 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.092860749 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.083964033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421164642 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.082072911 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083409887 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07432952 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.082620828 seconds)
  done (took 3.568123426 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391632966 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612864275 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355141202 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.090311795 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.929497045 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.103159332 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.268821104 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.154652985 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098353937 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534745656 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.380856278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148224663 seconds)
  done (took 18.628030308 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.097750071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.092018066 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.103406336 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.10408147 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.092973622 seconds)
  done (took 2.049172474 seconds)
done (took 113.554002853 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.095574938 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440457519 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06663912 seconds)
  done (took 2.093214231 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.102593552 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.100513877 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.101584349 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.098990303 seconds)
  done (took 1.969629996 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.090637853 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.092101728 seconds)
  done (took 1.74187931 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237190563 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18754285 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.110907055 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.096293054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093103663 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.09314706 seconds)
  done (took 1.844958672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.085632622 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.087715437 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.086399917 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.088881752 seconds)
  done (took 1.906453208 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.087903813 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065020118 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067241775 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069631744 seconds)
  done (took 1.848042659 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.099961261 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.097318214 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.092284442 seconds)
  done (took 1.849222192 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115326409 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.105365572 seconds)
  done (took 1.781094378 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.093712574 seconds)
  done (took 1.654572153 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10191583 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111457005 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.145801548 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.127829263 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.15127392 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127879377 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.099527654 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.100236009 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094626413 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.101189076 seconds)
  done (took 2.722082411 seconds)
done (took 21.600959987 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094267858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385600498 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.375467948 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105179839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.684962085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.37257425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00136506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108159257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154608164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.083558927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.099707346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.665007105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994375393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336981821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983520311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338628648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.666079217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08520563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084947647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.084672876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989105884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08483903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.084624853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.08526923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.665519969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.38968915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085210522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.337758791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.084907292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086485126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.371620093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085249693 seconds)
  done (took 16.597702346 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086305177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136578079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.088703284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100090692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.08598696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08544128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.087290554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.084847123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135925698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084899809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10130949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085067578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.088231015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086298324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.103773893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085489159 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.085970112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085761986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084779744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0848505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103506473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085013889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08509029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085537796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085199386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099681326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085262443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.085162334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08559476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086746769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.087810657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085737422 seconds)
  done (took 4.503401983 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132610238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140226708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089339441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120966095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127464425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086817102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.163155683 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109620496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143887293 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084802342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101252122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085186665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119517245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08592915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104730424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085548755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.085528378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085660379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0852674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085637013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103880168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085133745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.084829584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085565092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085152902 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099280521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085100599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.085274275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085040139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086572981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08877866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086054433 seconds)
  done (took 4.760112784 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.086579314 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.088873515 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.096270206 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097311124 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.08316491 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.085660247 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.086768173 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.083249388 seconds)
  done (took 2.286961402 seconds)
done (took 29.717186286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.092670882 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.082759201 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.08682211 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10184542 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.089037004 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.093566242 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.079941668 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.089769024 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.08657813 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.086882716 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.088520169 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.08339424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.085352568 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.081134214 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088032465 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.081190407 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.095889114 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.085843764 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.09492071 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.09554598 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.083729799 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.086879339 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.089610699 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.094900282 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.094941225 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.094683334 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.090175828 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.086664451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.081720339 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.08402126 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.089518524 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.096976175 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084321168 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.094171873 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.080738365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.081291226 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.084998644 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.083707476 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.094691474 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.089838034 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.082607651 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.089515651 seconds)
  done (took 5.260508803 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.100626288 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.104220691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097457148 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.074825401 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.080476935 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078020901 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.101827897 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073448559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073565294 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.1012875 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069453098 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073313044 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075967706 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067331476 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072838587 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070219211 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075469386 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068390759 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072658838 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073405109 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.101370215 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067507319 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091246163 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075391373 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069729081 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075215441 seconds)
  done (took 3.671289274 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089292342 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.100950857 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.107220147 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157353148 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125509031 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.095023761 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0969674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.106621035 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111333233 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.084013445 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.087727625 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.106885261 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107339872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.088640615 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.08332436 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.099221111 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.098996883 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.085025626 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.089892675 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112049886 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103076448 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100286047 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108113164 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098933807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.082406646 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085525669 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.087581077 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099027488 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.085476251 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095182894 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.088461912 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.087823506 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.084465809 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.093522288 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.086279488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.082938642 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108155247 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095202625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095847996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.084423678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.093460503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.084881604 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.108966786 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.143087755 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.082783559 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.08771109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.087041413 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095276564 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.082846372 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110582169 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09501079 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.083525648 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084010791 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.082589525 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.082815533 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08596495 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.085534175 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.08582743 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.093557794 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.08999353 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105825378 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.088525676 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.100603161 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.082977229 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093621224 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.082740623 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.084561047 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.082785787 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111453518 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085020198 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127145768 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.084485339 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.08246702 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.094342144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093669367 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089665443 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.083323753 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10111671 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094921033 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.087377737 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.092024359 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.086626424 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.087104196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113226567 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.083691888 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.083049526 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.082212555 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.087328673 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.087011669 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.084155618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.095427844 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.082831549 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.086839781 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101490375 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.082941853 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.083836369 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.087002393 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.085847393 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.082636048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.093661394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.087250006 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.084150235 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.093392538 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.084000224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.086579538 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096065062 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08968844 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.082571074 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.085950433 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.087174294 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.084615317 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.084465974 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.08667598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.085318389 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.089993605 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.090019567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.08932861 seconds)
  done (took 12.431399396 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176133108 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167808945 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.086016284 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159343423 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.091696953 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.093531119 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162444459 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.108416254 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.083947773 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.085513614 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.084238908 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.123279001 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.119008842 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129212114 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.094949522 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.085157088 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106180016 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.127605941 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.164449488 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.158475929 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.105992125 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.092330846 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.086798504 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.085315009 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.085548174 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.093406057 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.100751543 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.092684684 seconds)
  done (took 4.776449109 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.093183326 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.118445877 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08841887 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.106590691 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.103462857 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.082179843 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.085602289 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.086124346 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.100221785 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.090331456 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.081934652 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.089430091 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.088333584 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.084434434 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.084629748 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.088174483 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.090637372 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.083588608 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.085506514 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.086951812 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.094136646 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103341375 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.087466573 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.083696772 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.08646941 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.084140546 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074724512 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.096193298 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.084609275 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10841866 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.081939312 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.086394504 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.098110202 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.085101488 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.084293887 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.084627437 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.081550683 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.081776624 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.085267717 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.080033317 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.080130557 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070364562 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.082905362 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.092249362 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097052957 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.068942171 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.086161988 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.086806317 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.087118363 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.079278775 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.087040235 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.086856821 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.087142667 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.091587513 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.085674537 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.086920107 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.084827978 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088819659 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.090425224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.083768299 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.077419029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.080182776 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.086628122 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076430435 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.09655672 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.086580133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.080051287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.081686118 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085199198 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096695223 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.083298575 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.085916964 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.079403619 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.08345421 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.090152497 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.086318563 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.085371176 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.080086928 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.083629465 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.084506956 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067512592 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.084188205 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065988851 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.086593149 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07966888 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.080318497 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.08414493 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086280817 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.092184244 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.083991723 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.087617783 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.085045388 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.082742959 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0867949 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072207919 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.086899664 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.094791534 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.09464962 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08280965 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.080363796 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.097302977 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.087170101 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081028105 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069818439 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.089072126 seconds)
  done (took 10.664361574 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.107672794 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.083848199 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.100401253 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.107187635 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.101859639 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.08937425 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.094514079 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.082934698 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.100101911 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.087248188 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.091172341 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.081740794 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.09434564 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.093503841 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.08324915 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.094169112 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.085308836 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.101298861 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.098239914 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.081342279 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.092119374 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.096030903 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.105019612 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.098101549 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.096887385 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.099195742 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.104978292 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.092391914 seconds)
  done (took 4.276385775 seconds)
done (took 42.654530472 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.691638692 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.928268088 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.666294852 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.903803244 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.731153338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.896511837 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.764023415 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.660771841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.844756916 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.706355562 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.987260965 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.757308365 seconds)
done (took 64.266707995 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.679494187 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.796083483 seconds)
    (2/2) benchmarking "String"...
    done (took 1.897368874 seconds)
  done (took 5.282850289 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.866738965 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.332805893 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.904109803 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.663029495 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.67074339 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.937853701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.465345277 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.113396148 seconds)
  done (took 29.67759011 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.847228537 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.894626145 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.378039335 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404633271 seconds)
  done (took 15.159937535 seconds)
done (took 61.348035672 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.6696377 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.710887513 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.671901184 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.645472922 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.765486538 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.673137011 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.797275436 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.679007745 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.667761429 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.651371651 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.669258573 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.094090372 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.677040127 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.756449578 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.665294732 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.677314862 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.747197046 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.094340393 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.825052238 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.680824939 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.678926673 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.707712312 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.670967866 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.673472759 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.723959532 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.667597132 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.062937311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.672505894 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.496523652 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.66661032 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.712436362 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.005097291 seconds)
  done (took 200.147817021 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.665124602 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.692939069 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.766103571 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.689939201 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.974137656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.850549631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.766545407 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.153195032 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.670793726 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.674798875 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.84152828 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.667861197 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.87742062 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.617895289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.693157864 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.677293247 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.797572266 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.894507099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.700920215 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.83504437 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.694357457 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.741357441 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.688756994 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.82467994 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.670504025 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.707266055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.671334065 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.698747455 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.856448946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.756270183 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.674972104 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.705147958 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.87621949 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.53873106 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.674597969 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.67274331 seconds)
  done (took 165.551521888 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.848358754 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.667941125 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.667774889 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667455719 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.672339641 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.669214958 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789160858 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791238914 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.299139746 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.227520136 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725408566 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.666456988 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460397797 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.667170944 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733978304 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.678717226 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.669212913 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.681793271 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.695360733 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668055046 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.668686574 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792221593 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.679451631 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.667266702 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678024704 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.668100832 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.673119285 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.036018185 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.667199371 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.855922692 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673187045 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.673772554 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.911261219 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.669920325 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.66962751 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.531373351 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.196826208 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.668240025 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751606051 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671694022 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.673535549 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.669459853 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.887484042 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.66944545 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670616785 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.669083781 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.671540975 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.81349349 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.669964947 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791963341 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671074724 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148432246 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.669235292 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671215413 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.621510209 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.28503591 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.670963047 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.672522208 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.669427984 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670986891 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.675866174 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.645852533 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.74180652 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.6713008 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.673561939 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.675812312 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671187992 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.671639346 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.672628663 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.171561931 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.726387726 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.897525369 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79167932 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673559026 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736047333 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763247215 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.670372054 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.670844072 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.670151141 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.671064349 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.75053912 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.672636204 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.79421036 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.682862954 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.672354543 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725652215 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.740234101 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.671781358 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520498771 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.672677261 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.671173302 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934095665 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736519558 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.670625186 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672663371 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.794934297 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794076125 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.385874971 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.673892252 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.700085599 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.844878173 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.87203256 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.672384808 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.878119886 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.670878683 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.671662429 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762837806 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679976995 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.671626169 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.673500646 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.710200773 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.672169732 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.725970359 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673714176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.04558088 seconds)
  done (took 390.155368781 seconds)
done (took 759.351629864 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.281111267 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.247215316 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.357647285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.267735641 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.239245855 seconds)
  done (took 12.990363879 seconds)
done (took 14.585922862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.762365593 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.76355592 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697525239 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.761276444 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694228626 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.76051132 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.743861883 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.698945275 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.730446771 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.699369524 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.731562233 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.69884074 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684901088 seconds)
  done (took 24.025948423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902088339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904940427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740698701 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.902184471 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.716183634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906260642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832070159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.819114151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.819517804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.688690034 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683968692 seconds)
  done (took 21.515789391 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.913507757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916609034 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746818083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.908798907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720175268 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.910669278 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834800221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.821597721 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.821875656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.687548916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684475416 seconds)
  done (took 21.566373227 seconds)
done (took 68.704217995 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.681178997 seconds)
  done (took 3.280520131 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.704174703 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.875096073 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.687253855 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.683618085 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.680171764 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.680953874 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.683221443 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.681326907 seconds)
  done (took 15.276431973 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.676174252 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.679911264 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.679777909 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.679790595 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.676913055 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.67934776 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.679791089 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.677043327 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.679196653 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.680121462 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.677110584 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.677261027 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.677728511 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.677599848 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.67718783 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.681980033 seconds)
  done (took 28.45645899 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.678413764 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.676634257 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.677659924 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.679210841 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.677793877 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.677852257 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.677616047 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.678055093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.678001737 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.677768964 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.678615781 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.677469681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.67810144 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.677327889 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.677992709 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.678231396 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.677384548 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.67879255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.68213122 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.678995258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.678121028 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.678205229 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.678825835 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.678883979 seconds)
  done (took 41.880336769 seconds)
done (took 90.491846347 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.515025255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.421288935 seconds)
  done (took 9.536830216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.680166386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.681054174 seconds)
  done (took 4.965616811 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.681849049 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.682882252 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.681988001 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.682076185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.681943326 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.682423706 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.682066683 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.681334007 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.681310373 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.682788148 seconds)
  done (took 18.420983794 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.681759672 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681913331 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.679131711 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.681543357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.68180402 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.679159515 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.681516476 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.68307554 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.682174627 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.67924295 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.681309412 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.679770598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.683206855 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.678768504 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.682370868 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.67951349 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.679384927 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.679513629 seconds)
  done (took 31.85802385 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.682786489 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.682630482 seconds)
  done (took 4.967943582 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.679427859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.680480203 seconds)
    (3/7) benchmarking "month"...
    done (took 1.681308227 seconds)
    (4/7) benchmarking "year"...
    done (took 1.679762473 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.680342073 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.679677436 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.679992948 seconds)
  done (took 13.363508475 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.683857206 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.826724232 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.889719948 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.281690338 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683976661 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.686764368 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.632588909 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.685842805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.688215271 seconds)
  done (took 18.662484992 seconds)
done (took 103.374089197 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.58210954 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.678928604 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.912443868 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.777877518 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.695689147 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.974934658 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.696448429 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.969464573 seconds)
done (took 41.889608268 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.703571556 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.400180546 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.426966256 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.73266886 seconds)
  done (took 15.163946967 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.65951342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.963958645 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.681999789 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.478826052 seconds)
  done (took 21.391321723 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.047608678 seconds)
    (2/2) benchmarking "read"...
    done (took 2.02850147 seconds)
  done (took 5.683560753 seconds)
done (took 50.545927193 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.684532686 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.6846044 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.684134418 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.681962922 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.681509387 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.686068189 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.682327346 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.682222461 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.68548695 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.685985985 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.685059479 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.686088193 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685916152 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.683600753 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682489699 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.685450386 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686296621 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.683528311 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683000541 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683481494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685473173 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.684701724 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.683387267 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.68413487 seconds)
  done (took 42.026320092 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.685096923 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.684183445 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.687424143 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.686756619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.683053497 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.68623068 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.686974851 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.68460164 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.686290902 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.686089533 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684099635 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.684039398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.685169654 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.683964306 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686428908 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.68338299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.688271157 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683969868 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687432058 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.684479479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.686739539 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684354331 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.683714749 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.68791567 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.683711272 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.684212584 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.68768581 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.684514474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686719808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.6845402 seconds)
  done (took 52.168123792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.691778493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.694625929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.687231042 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.687726462 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.687355711 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.687483867 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.686853598 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.686841763 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.687567877 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.687840917 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.687171123 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.687768318 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.687348209 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.687840859 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.688220356 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.687686711 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.688097776 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.687586677 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.687507205 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.687746407 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.687851609 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.687503528 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.686925155 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.689372564 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.691051146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.688230564 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.688200598 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.68928522 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.688212826 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.688615062 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.689569959 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.688477892 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.688867137 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.68959627 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.687940357 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.688747576 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.693891359 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.697105106 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.688822473 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.688948999 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.688255839 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.689553573 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.689183233 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688286721 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.68891813 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.689588014 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.689140568 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.689270901 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.688629537 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.690006911 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.689525479 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.689325999 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.68968936 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.688683491 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.689109066 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.689898215 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.689462276 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.690533442 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.689689572 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.689281406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.690096237 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.689989031 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.69005826 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.690651684 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.691082132 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.690817964 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.68944093 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.689908734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.690880621 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.691608426 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.690180548 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.69103066 seconds)
  done (took 123.230098619 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.689924078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.687437704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.687377226 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.688115155 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687561731 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.690936139 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.688698824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691140951 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687539102 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.690278562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690553951 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.688708337 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687386962 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.690983162 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691155517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.688160187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.691344594 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.688519832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.69086871 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.692063411 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690991748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.688830522 seconds)
  done (took 38.778214973 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691691651 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.691071832 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.689159199 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.691748673 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.690278362 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.690915172 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.691008337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.692272452 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691719065 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688855849 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68939117 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691674123 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.690305258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689056258 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.688743079 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.688034406 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69266355 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.689246252 seconds)
  done (took 32.03885195 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.689681409 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.687864485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.691915743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.68965401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.689125142 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.692830318 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.689176505 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.692563528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.691850421 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.690104819 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.692143991 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693348158 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.6922863 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689069163 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693144377 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.690965695 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.692653372 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689741813 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692788023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690739255 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.690345086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.692142367 seconds)
  done (took 38.815286801 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69275456 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.693521114 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.690068174 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.690839 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.689739493 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.692831922 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.693442456 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.690331673 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.693308468 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.69387926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.691336381 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.693440371 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.690389971 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.690678469 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.690825103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691687889 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.693325268 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.692450704 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693820346 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.691179415 seconds)
  done (took 35.452448811 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.6955612 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.695423199 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.695057551 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69476974 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.695873946 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.695843716 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695836881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.696017676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696064652 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.697535618 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.696351171 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.695659676 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.695736066 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.695493238 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.696386567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69589808 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.697364388 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697019826 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.696744496 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69664262 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.696531762 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.696125002 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.697272787 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.697097776 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698104309 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.696597823 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695824091 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.697958376 seconds)
  done (took 49.110918854 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695267004 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.696387338 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.692839737 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.693524935 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.6933435 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.692366085 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.692756065 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.693358461 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.696182306 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.692901162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.695927847 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.695718116 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.696755591 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.696555051 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.697641436 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.695910703 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696217263 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.694758313 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694543185 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693111276 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.698287584 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697003877 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.700040079 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.695248723 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696325859 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.696248924 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69516027 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.694478651 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697346996 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.6933889 seconds)
  done (took 52.475207988 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.715257336 seconds)
    (2/2) benchmarking "in"...
    done (took 1.717725258 seconds)
  done (took 5.048486026 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.694009981 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697084287 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.696321795 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.694708713 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.695855111 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.698251651 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696884921 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695024546 seconds)
  done (took 15.184031861 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.700525422 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.698020321 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.696823367 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.697639602 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.69950947 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.698663371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.707633085 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.698368789 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.702328292 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.702055886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.708154108 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.706742002 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.705137603 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.701214947 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.701279431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.703602728 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.697409978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.698515383 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.699367671 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.697860298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.698565705 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703457081 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.704148599 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.697086996 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.70394495 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.711640622 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.707413029 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.699291149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.703111977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.705478803 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.702160618 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.696103658 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.700538643 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.700109871 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.698962923 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.700251617 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.710267739 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.704138564 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.710439056 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.700722725 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700376163 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.697028398 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.703357036 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.70480235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.704947852 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.699983876 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.700392334 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.696581517 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.701410484 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.705720888 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.704682024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.701868316 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.696664606 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707472061 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.7051951 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711189794 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.701714162 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.707238798 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.712127594 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.713341243 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.716137683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.711138383 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705210177 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.701143655 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715739311 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.727309541 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710478998 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.698971529 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.698898486 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.70022625 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.711749149 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71699203 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.714217774 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.702837926 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.702325383 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.702374998 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705968089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702287908 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712451138 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.708254306 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.702935775 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70289187 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715571593 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727723705 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.70399098 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.702402525 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.701806065 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.70302067 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.704004888 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717007785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.703513864 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.703129931 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.704428817 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.705803005 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.704332586 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.703745546 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.703170551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705637373 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.700847408 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.702674989 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703553694 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710895888 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.715629362 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704507101 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.703703008 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.71259919 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.703005352 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.705635231 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.712509965 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.70295118 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703474897 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.704669376 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.712052725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.700803059 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709894021 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.71399337 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.704552619 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.707305323 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.705404762 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.703847758 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71783286 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.732599854 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.703889325 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.703903469 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.712160551 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.716357023 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.704481811 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.710082802 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.703479143 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.702260188 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.70115907 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.709539821 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.704079842 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.708499225 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.705442773 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708203713 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.701036334 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.704349702 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.704547749 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.708729271 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.706812027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.707841799 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.708579037 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.709957844 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.706682967 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.710113275 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.714421749 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.706667689 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.709913502 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.70804587 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.702538752 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.705558421 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.710051322 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.709807211 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.706671929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706795016 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.709247555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.70682486 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707521277 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.706786258 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.706350165 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.708314834 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.714253479 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.707160982 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.71325648 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.708784432 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.703304966 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.705947869 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.706359684 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.707205798 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.706087673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.706115007 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.712707971 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.715369455 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.706950624 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.706274567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.711740174 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.707086358 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.707316673 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.707370989 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.713231383 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.718125821 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.707465501 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.716622951 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.707872483 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707211669 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.7078244 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.710683483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.709521164 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.707849516 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.714364743 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.715275111 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722868189 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720440773 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.710118418 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.710850439 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.709545921 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.712614922 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.714874577 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.708421847 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.707919515 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.70792396 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.710084626 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.70743229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.712651107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.708783318 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.709288971 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.708909833 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.709104707 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.707898605 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709359592 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.712277708 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711947866 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.706063318 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.708464308 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.707683309 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.711510233 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.706335381 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.708562478 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.708431698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.708863708 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.709628596 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.718563732 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.705207591 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.71259349 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713776595 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.71097398 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.709194663 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.708657382 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714605463 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.711425049 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718215209 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.711407828 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.712471611 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.720312033 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.710858677 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.710747781 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.716066427 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.709375262 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.707330416 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.715719625 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.717895091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.709942188 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.710803374 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.710042684 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712387246 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7102622 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.719790693 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.708180961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.711941619 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.710398792 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.711962415 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.706327328 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.714224808 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714319457 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.711880751 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715852114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.711282607 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.709860609 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715493712 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.710876167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.710978143 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.711802322 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717289194 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.719424664 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.71820664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.712486453 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.713565132 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.71420053 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.715365125 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.714582573 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.712066653 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.713913907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.727323976 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.720188479 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.720445799 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.716748892 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.712814738 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721267914 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.714196715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.717262516 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71576813 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.714543894 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.713669645 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.714162188 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.708851575 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715253859 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.71221381 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717654298 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.716698259 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.716730373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.712006289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.714418132 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.712081509 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.712434399 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.712620407 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715790095 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.712785617 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.716949188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71804167 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.712691788 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.714705647 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722904907 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717008898 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.71746593 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.716207043 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.716404846 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.714158801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.715808959 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.714684843 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.720990377 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.72120755 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.719561527 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.726189242 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.716957883 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.726291924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.714731838 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.719914799 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.722247018 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.710926203 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.71323912 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.715117706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.714606816 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724975022 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.714970047 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.715260462 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.718759874 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716101361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.714168015 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.714439529 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.715676303 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.71501082 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.713713245 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725127011 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.717822326 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.720473718 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720627342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.712034609 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.71503192 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.714986196 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.715364623 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721596721 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.714400296 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.718302049 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.716307301 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.716399466 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.714788023 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.716313672 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.715445869 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.711973649 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.714265262 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724305348 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.717698878 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721221824 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.715936331 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.725718284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.716472088 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724492973 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.716457155 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.71709641 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.714997042 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.716000055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.71770898 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.716532812 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.72032057 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.716501008 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.718636007 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.719585554 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.716106274 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.718914044 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.720676357 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.717245813 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.717869235 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728829037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740061633 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.721073193 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720575453 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.713456293 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.72000294 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.720086685 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.715942286 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.71661416 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.722255934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730810227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725373909 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.719968849 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.717610108 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720933646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.717438188 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.717711117 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.717827252 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.718766837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.716418679 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.719513569 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.71767571 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725192472 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.716726731 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.71903344 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.722086021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.720255847 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.730411563 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.718102292 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.720048116 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.718455706 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.717806743 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.72186567 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.721941594 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.718078442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721326839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.71796225 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.720867887 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728336435 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.72612564 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.72446104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.720103892 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.718372422 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.720878798 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.720565898 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718675913 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.719370007 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718549699 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.721527981 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.718216466 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.720031252 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.718794968 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.718369967 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.720659501 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719256749 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725175646 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.728297478 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722086113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.7163657 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.718466051 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.719623478 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.719144295 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.721876629 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.730270514 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.72697839 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.733650695 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.729510447 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.724485125 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.723868569 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726657652 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.730364186 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.720005749 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.724235591 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.721271895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.72347598 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.721919203 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.726259966 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720148504 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.729293611 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.722964292 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.72170844 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.730480588 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.725451408 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.720277964 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.725170975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.72746566 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.722995516 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.716492687 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.720667556 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.722331008 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729746918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.724775391 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.720481754 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725392746 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.719900114 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.723645839 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.725165127 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.721306714 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.724783493 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.719148273 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.724908195 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721863445 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.720342267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.718299398 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.72164 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.721158168 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.72726104 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.728566964 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.719860791 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726754231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.725265903 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.723002272 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.721623805 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722273609 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.718994225 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.718020836 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.722273926 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721533027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.725109032 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.727725107 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.723087039 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.72396486 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.723274679 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723475655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729222531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.736396135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.730107514 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.719949236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.722545938 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.723864141 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.728706914 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727494937 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.723078329 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725241689 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.727535566 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.722723082 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.722659514 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.722224719 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.72960425 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742816833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.723828745 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.726660438 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.726561192 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.728894763 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.723098951 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.72017696 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.723756916 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.725650074 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.72974936 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.731067818 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.72418394 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.732779322 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726846817 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.72727398 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.728422052 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.729012968 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.734043986 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.729009847 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724495528 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.723638765 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.732065887 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.743664993 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.724089838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739036202 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75688309 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.725967413 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.725768974 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.72494521 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726178229 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.724266855 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.72766284 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.72459597 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.725183863 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724391305 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.724908406 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.727274972 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733702208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.729014148 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.724531817 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.724014151 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.72593051 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.728259651 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.72253483 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.725341108 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.72431966 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.725334531 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.725074081 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.725863964 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.728876812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741469768 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.737238053 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.726133025 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.726646244 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.724303782 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.732277237 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.732257062 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740485744 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.733492181 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.726790325 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.727167838 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.73135022 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727067626 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.722259888 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.729715175 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.728377016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730408987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.722445969 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.740459425 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.734291617 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.73351832 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.727643463 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726999729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.72710767 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730081562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727481578 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727212179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.729744369 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.728917576 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.73075581 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.726909334 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.727167319 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.732599534 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.735007062 seconds)
  done (took 1024.295506635 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724689441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724433885 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.723912337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724400025 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724260211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724620707 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724964538 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.724015987 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724987793 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725841243 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724378462 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725116607 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724172062 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725480684 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72472781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725092737 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725478924 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725527143 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725474263 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726547246 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726418109 seconds)
  done (took 37.869887424 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.728180743 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.726074946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.72605201 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.728274976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725782592 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.727831969 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.72668981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728056012 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.729658785 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725531653 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.728172892 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729279653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.726204753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.725851759 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726305126 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72820687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728145863 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725733128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.728719999 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727019012 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728352368 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.726959575 seconds)
  done (took 39.647770899 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.729012234 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.729489075 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.73120024 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.727507401 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.729480427 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.726322113 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.729915574 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.73028768 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.729021839 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.730840704 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.730408394 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.733278814 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.739656104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.734537106 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.732235191 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.729801933 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.874365611 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.730491458 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.730581469 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.730355816 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.726937286 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738619506 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.729138802 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.727670822 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.731026397 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.731063426 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.730663548 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.730939528 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.730641937 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.733428489 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.735675607 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.73085703 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.73323648 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.736248228 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.731941738 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.733265949 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.73590838 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.729933477 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.727774055 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.729708168 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.743567385 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.750699311 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.730995712 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.739346725 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.730262649 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.730214812 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.735757984 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.738245235 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.727464726 seconds)
  done (took 86.668458623 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.728599307 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.728700661 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.727475035 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.729960181 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.727876016 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.728912649 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.7294624 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.728911652 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.725762509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.726261121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.730045726 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.726169698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.727074092 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.729024163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.728831747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727090464 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.725652584 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.726145008 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.725182243 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.725586268 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.72658239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.728917 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.728326097 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.7264103 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.729037393 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.726174448 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.726648986 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.726263478 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.725306085 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.724140793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.727704204 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.726670911 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.727557132 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.720524916 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720725571 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.723073341 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.722645128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.719785651 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.72412797 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.720127494 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.722352508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.722840678 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.723701709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.722295328 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720370389 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.719016895 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.719116824 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.719575095 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.720339837 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.722027975 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.722637677 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.71980997 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.722250898 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.719294927 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.723749509 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.723013965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.718881201 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.719587114 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.722440204 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.720100717 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.718898109 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.723029756 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.719135507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.722806465 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.722292535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.719765162 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.719560699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.722870361 seconds)
  done (took 118.894630324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.722294554 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.72388506 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723743239 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722975769 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725034665 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.723647713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.723432036 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.723949091 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.723661267 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724585417 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.724214699 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.722808286 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.723285879 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.722553505 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.723210221 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72414971 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.724479659 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724703107 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.724501291 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722971151 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.723414343 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.723986501 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.723778785 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.723470897 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.724249911 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.723813953 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.723647391 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725014757 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723196258 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.723217447 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725084799 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.724872087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.723310944 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724755431 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.7235591 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.723038769 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.724157664 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724859443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.723691051 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.723973717 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724220062 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723900941 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725149873 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.724415436 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725378897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.72424196 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.723499848 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.723842205 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724385421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.724253951 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.7249799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723676515 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723608948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.723818448 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.724527691 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.724442037 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724960469 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.7248961 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724109023 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.725061945 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724062243 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.723469376 seconds)
  done (took 108.530746964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723715859 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724753142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.721178546 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.721416256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.724641904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.722521096 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.724607258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.725095317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.724054756 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.723783059 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724349792 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720974763 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721808625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725494576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721409944 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722158958 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723596796 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720266661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722542678 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.71976249 seconds)
  done (took 36.101392681 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.719517145 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.723125501 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.7156351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715960943 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.718399511 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.716912778 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.717864361 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719370404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717528469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718542076 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.719283196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.720326533 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716293692 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.71694112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.718419347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.71634405 seconds)
  done (took 29.130352247 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.715823305 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.721162806 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.718965981 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.717181908 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.715821539 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.715125729 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.717813098 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.715719763 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.714659005 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.717852579 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.717458142 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.716986719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.717017893 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.718630307 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.715067932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.718220127 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.714747412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.715714789 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.718015041 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.720019115 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.71678967 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.714696546 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.717238559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.717617576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.715958409 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.716341069 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.716340454 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.714992803 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.715407044 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.718183491 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.715054932 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.716593491 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.715315353 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.716141483 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.718398149 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.714982082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.71829492 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.719235473 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.718322231 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.718575952 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.718155526 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.71599633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.719191496 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.719319545 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.715426695 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.718781291 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.716206612 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.716359204 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.716612556 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.715972059 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.720217768 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.720222699 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.718578088 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.718635532 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.719918602 seconds)
  done (took 96.084657619 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717535852 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.718446793 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.715557244 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.717278437 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.718681104 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.714922272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.716764822 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.713990987 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713989563 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.717152243 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.716143322 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.716413768 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713776139 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.716933204 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.71393151 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716768361 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.714547932 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.712078206 seconds)
  done (took 32.520376194 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.712379511 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714660638 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.71857845 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.710927196 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.71191968 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.713471571 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711341105 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.714163576 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714835421 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.711022463 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711460448 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.714939603 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715177065 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.71349395 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.712231623 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711248637 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.713748527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712939751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.71047101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.710412943 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.715503025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.711569332 seconds)
  done (took 39.319299855 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.711775454 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.711673561 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.730334859 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.734164951 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.734602047 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.748131034 seconds)
  done (took 11.999848497 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708957356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711685661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.709637392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711523387 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711840371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709110351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708783334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710209718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713246114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709360465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709160133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711142768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711555226 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71066163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711990822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711557155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709162311 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708711642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7090043 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712418326 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709294215 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711100977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708438055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708793554 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708476082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70916823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711306674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709834191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712095771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712487461 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7125345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709446137 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711800463 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709083729 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711727869 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711321153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708421489 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710843019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711655582 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709602448 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.710418442 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710967557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71126218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709334977 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711342591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708437789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708113621 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708392952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707924569 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710854166 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710944813 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707954425 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711171137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710633181 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711693577 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711592528 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709145464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708603701 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71004468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709442082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708788285 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712305679 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709058944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708955155 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710763013 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708882329 seconds)
  done (took 114.505943145 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708753921 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.708422763 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709533043 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708745472 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709438009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710170417 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710578125 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707584717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708411491 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707742873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711352626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708754257 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707921202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707137283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707761863 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708791813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708379435 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708740024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707113862 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71144711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708224806 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707118817 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707797019 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708019813 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708495912 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70930232 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707065301 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707925104 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708261805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707539207 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707285594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706594406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706744535 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.70777772 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709213554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707140151 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707477654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708161648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707966889 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709774869 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708909563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710025389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707808409 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708568363 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708755251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70783706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708175513 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709037018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708171804 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707774667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707419556 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708429604 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708575697 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707271532 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70707276 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707590828 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707771396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708268886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708137721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710344877 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706709384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7078125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710403183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711094638 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707274244 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707450535 seconds)
  done (took 114.383053544 seconds)
done (took 2375.885960545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.750291646 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.705042285 seconds)
  done (took 15.084081173 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.876168984 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.825778443 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.711114703 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.743960232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.711900674 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.731981487 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.72484364 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.712093044 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.710549932 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.710545082 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.710461512 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.896222663 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.718846861 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.7115766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.71093985 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.802578052 seconds)
  done (took 49.640894939 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.71379541 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.715606614 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.72512654 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.715654632 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.714928486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.725446318 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.746846556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.716319909 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.747915041 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.727441294 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.784010425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.725459775 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.713693772 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.764039849 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727718085 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.72862179 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.8051255 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.790086045 seconds)
  done (took 32.915460903 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.792358595 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.720655412 seconds)
  done (took 10.148145181 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.734211992 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.758395454 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.716412286 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.719399329 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.706656529 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.722732349 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.743310231 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.753335125 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.739200355 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.736669968 seconds)
  done (took 68.959531349 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.718750299 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.713634211 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.713141168 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.712475474 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.705053695 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.708767747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.71215168 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.705981866 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.374110123 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.74787923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.721233563 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.718333667 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.714911652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.715866296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.709933385 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.737917494 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.825520679 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.708604422 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.707350517 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.71695256 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.711178942 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.763661344 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.724893548 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.711834386 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.742683109 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.372777501 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.720977545 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.718246394 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.821575404 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.708254859 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.713919168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.712732507 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.715722059 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.089661792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.97815781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.714494458 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.726919094 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.721735582 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.707277929 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.824792049 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.713515468 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.718470442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.444497989 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.96022006 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.811727012 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.760561488 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.05211529 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.736644199 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.718866311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.749326933 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.720276915 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.719075026 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.73141462 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.197990417 seconds)
  done (took 123.654355051 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.711032807 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.061378136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882384265 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.714290782 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99753388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923211839 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714248703 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.76147559 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.712464569 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94397637 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967542341 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820402653 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.713199575 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.709343615 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.709507224 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.709989108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.870864285 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.791184192 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.714734623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.710284848 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744121717 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956424602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.837733502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.713919302 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.743961637 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926479446 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.837164568 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818928791 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.49313789 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.712634668 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777613909 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.714097955 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.712787537 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.711269912 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.871224086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809743407 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801332376 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.713953946 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.713257586 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.71032432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.469013732 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.914993279 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810729121 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.847238904 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966841066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919091197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.499113953 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.710666601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.460171131 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.880564097 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.943878364 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.945487369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.838080207 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.715370222 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.970201106 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.711898901 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71059894 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.967081563 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945195737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.812726974 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.714739651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.710518232 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.712595883 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006442879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.715600864 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.810492257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716509984 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.712410908 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815317821 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815105368 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.952015664 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929892519 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.747557902 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.062850507 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.228740479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964208699 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.78342163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969187006 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.716634584 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714447864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794438956 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.558528052 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.969530547 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998162308 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961721682 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75253575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.440802922 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.712405356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.943352638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938122482 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977642336 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962096794 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95471948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.038664678 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713553634 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.713049946 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.01467879 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841884438 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.716041353 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.066210194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94463669 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.248167577 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.742090421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019076977 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.846510959 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713594094 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.357298306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.710607385 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946211551 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.754805354 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.711830491 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.713060745 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.933942756 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.727244318 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712051646 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.609026234 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.77706237 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.713952978 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947068918 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.715725732 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982669611 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715316167 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950111013 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.159737739 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.746953499 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.888192939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.962544294 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.714916965 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.95681584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.959285335 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.830223407 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.988368671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.61581494 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.713023761 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003148119 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.715541173 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.711756482 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.885123117 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.714074912 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.85896215 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714694165 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.010191087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738551104 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950091167 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716287748 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.970924804 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.750213383 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.76591226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.717780996 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.846550248 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.714553384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.632435271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.873609211 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714869238 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.714234116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.273060121 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.717372178 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.866526833 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.942737472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739311291 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.788814765 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383929354 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.713672827 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796530182 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.739537405 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.105127128 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.714040377 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.968508808 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.128375059 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.715633487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.715432908 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.003474193 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.952824672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.716412845 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.715432046 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.623779062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.714113639 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.713903888 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.900347504 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.120474772 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.713289638 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921566656 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71933846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847086197 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.717459003 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.790732164 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.052008331 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717172173 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.714985604 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.715831861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.715934754 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.715139235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.925974048 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.743893697 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.211801898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.856722229 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990036672 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.028282802 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95813922 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.761040216 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.720478688 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979902562 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.719411954 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.781380068 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.718216708 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.73903369 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945740329 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718028098 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930825309 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99082008 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.571489856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.767016382 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.718485825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715849182 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.715679339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.865574082 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801714986 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.718682321 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.716991551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.834807689 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841714061 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928377349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.717338191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.805703047 seconds)
  done (took 869.306714006 seconds)
done (took 1171.336902323 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.715886473 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.717746614 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.701676989 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.720066449 seconds)
  done (took 28.495177705 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.723761409 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.721845774 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.727037559 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.721987358 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.722777829 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.721522312 seconds)
  done (took 11.978071435 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.767664773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.716531626 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.718754525 seconds)
  done (took 20.8428907 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.795200877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.107545502 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.856255532 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.157284858 seconds)
  done (took 9.555834916 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.725635222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.724278553 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.723400685 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.723761586 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.72473599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.725070602 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.724701081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.724136898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.725831148 seconds)
  done (took 17.16299558 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.704967321 seconds)
done (took 93.376863627 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.893929647 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.733277755 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.259446707 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.807635624 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.726578969 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.91541465 seconds)
    (7/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.046545733 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.420314402 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 5.520927896 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.92877459 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.816508898 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.745041151 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.734758253 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.235800981 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.870025045 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.969575173 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.352985742 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.051902489 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.909843356 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.033940682 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.026530513 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.875181606 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.63900491 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.897991584 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.753108853 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.836375506 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.165530463 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.627254308 seconds)
    (29/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.761778765 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.843461869 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.220591337 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.735969929 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.760254343 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.870514035 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.092219394 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.066620277 seconds)
    (37/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.737559813 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.594364617 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.831098916 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.86697437 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.519792694 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.889385296 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.966806957 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.799819323 seconds)
    (45/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.795291227 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.713483468 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.945970247 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.926732446 seconds)
    (49/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.973535538 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 5.467494047 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.840994172 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.737577161 seconds)
    (53/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.794281163 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.910996514 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.729908566 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.736083617 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 1.954439618 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.713798834 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.819495012 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.843042397 seconds)
    (61/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.996338431 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.489466995 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.827737518 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.989423255 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.900180036 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.893071699 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.75387144 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.050504393 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.736504398 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.772609344 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.717649592 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.359531365 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.829655686 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.709613147 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.945096378 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.841333478 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.754564754 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.826675991 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.055999349 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.708843543 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.808751317 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.1765037 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.755024285 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.061783245 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.038549442 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.565142375 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.778447724 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.732297574 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.221649964 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.323135883 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.81864833 seconds)
    (92/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.733893982 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.748211542 seconds)
    (94/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.624535391 seconds)
    (95/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.747286516 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.476959001 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.818206556 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.902907037 seconds)
    (99/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.743039545 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.102117353 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.508341047 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.864146882 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.866995374 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.894189311 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.733622599 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.11303525 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.097205286 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.756792913 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.756693094 seconds)
    (110/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.872360807 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.573546016 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.091904426 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.720826144 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.507332985 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.061847978 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.856591419 seconds)
    (117/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.794743107 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.7453513 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.824508004 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.039150044 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.942583374 seconds)
    (122/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.73373241 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.215290598 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.783897824 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.714597023 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.60310006 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.851063028 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.140021409 seconds)
    (129/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.717896937 seconds)
    (130/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.841060581 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.735709854 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.357864403 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.773290183 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.715584931 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.328906598 seconds)
    (136/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.75222833 seconds)
    (137/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.855387463 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.99845595 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.716488928 seconds)
    (140/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.970381254 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.93886751 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.989577691 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.967535584 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.970646552 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.917522337 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.812125941 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.73505423 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.845812303 seconds)
    (149/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.007628981 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.369073204 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.762096597 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.754641658 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.817733586 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.048344981 seconds)
    (155/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.831881398 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.752594252 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.735952739 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.762319562 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.031206061 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.129120442 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.739183349 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.738781294 seconds)
    (163/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.844470125 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.84694908 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.993351433 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.906491757 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.738671091 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.148904452 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.173981548 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.981210042 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.741994136 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.056005473 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.821069301 seconds)
    (174/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.201555103 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.151207907 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.816828887 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.843887635 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.729362928 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.840018636 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.798027619 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.418186591 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.751917594 seconds)
    (183/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.944470097 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.870257904 seconds)
    (185/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.865454594 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.825363942 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.755962531 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.06022684 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998564968 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.01816671 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.960003097 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.647749193 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.722773647 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.848040552 seconds)
    (195/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.619015763 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.744644117 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.183021634 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.815473709 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.002122893 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.884355172 seconds)
    (201/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.74535299 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.347319853 seconds)
    (203/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.835557451 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.755278017 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.038912175 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.985290395 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.449745799 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.772251447 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.837670585 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.484223592 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.942133044 seconds)
    (212/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.825563174 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.743743558 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.180660532 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.742437362 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.651354473 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.881661415 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.63814896 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.120990087 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.769763544 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.833470881 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.846169743 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 6.738436805 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.724305272 seconds)
    (225/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.745205726 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.16844502 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.011516216 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.928238694 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.772117908 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.097827356 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.746825791 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.826262871 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.036271869 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.032163586 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.089320669 seconds)
    (236/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.901659568 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.667570955 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.775545046 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.763699322 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.754719213 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.723848607 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.73002283 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.817882989 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.769528482 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.809432596 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.178932204 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.853290075 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.079255856 seconds)
    (249/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.750938186 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.74064039 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.07525934 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.729713163 seconds)
    (253/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.925598936 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.746391523 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.955259773 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.832202389 seconds)
    (257/309) benchmarking ("sort", Int8, false)...
    done (took 4.651520315 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.878516161 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.966789429 seconds)
    (260/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.01812323 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.747235977 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.897712874 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.747860932 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.239534634 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.871130731 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.086543033 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.879847168 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.759482626 seconds)
    (269/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.924150861 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.78349482 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.87605223 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.748422679 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.093375184 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.727598207 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.562356787 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.802618339 seconds)
    (277/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.903946233 seconds)
    (278/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.837602977 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.153163005 seconds)
    (280/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.980787805 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.098635084 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.095022677 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.811751701 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.150004165 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.08501672 seconds)
    (286/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.727981738 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.006486003 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.86713719 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.885253386 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.58400495 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.779167593 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.114269639 seconds)
    (293/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.853501216 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.058613463 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.447043017 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.908327162 seconds)
    (297/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.827868981 seconds)
    (298/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.768570578 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.741925121 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.832583488 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.484449569 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.065011005 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.943709725 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.871806093 seconds)
    (305/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.327400633 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.157284714 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.965652372 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.747913579 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.811578759 seconds)
  done (took 963.001638829 seconds)
done (took 964.934960805 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.775810758 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769227604 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.750969528 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.77293443 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.864063058 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.776799839 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.761920218 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.753334244 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.798803669 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.800928203 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.749895224 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.774355092 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.754267155 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.752480843 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.751909663 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768176205 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.069534045 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.784619639 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.77072403 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.761441854 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.769708601 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.749183112 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.801246812 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.77513152 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.755127308 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.754923463 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.755421198 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.77339275 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.864840534 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.756265812 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.755013024 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.764555763 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.068412395 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.783544912 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.748358745 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.772424082 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.766437643 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.761540594 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.756831892 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.785828742 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.156149119 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.795867717 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75582973 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.754463894 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.752930526 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.757075335 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.756319994 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.760977052 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769327449 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770241578 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.1494882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.809645747 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.757557539 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.754367385 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.764523897 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.753998412 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.756818463 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771895033 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.775434589 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.772811223 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.051680947 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.788821906 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.755889043 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.771563519 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.763557589 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.183775423 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.790631823 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.757894836 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.157481056 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.798551604 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.183934831 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.803723156 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.755969662 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.769506537 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.787385558 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.068741089 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.780840335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.754374309 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.762346471 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.752300962 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.764189905 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770772528 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.759145899 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.755396542 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770132041 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.781373765 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.7652153 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.757327775 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.764535686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.77647589 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.764011731 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.768858039 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.76010688 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.752580862 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.76776453 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.760602082 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.761028805 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.760356723 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.760853889 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.766839955 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.155929457 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814022769 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.752879076 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.751786748 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.755859988 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.770846524 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.155138762 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.799509741 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.778458547 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.803054833 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.758594385 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.05579245 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.790132901 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77500278 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.766899946 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.759371246 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.751064667 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.053741375 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.183060197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.814615336 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.758236733 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.754260388 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.775223698 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.757597568 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.753166164 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.07272274 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.787749786 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.77585343 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.878935935 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.768535776 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.789016162 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.754688363 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.759997237 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.78511489 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775047153 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.790448144 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.759563854 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775681785 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.775267528 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.754189296 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.769162231 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.767423992 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.758938297 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.762714604 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.751929285 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.78623775 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.774032043 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772679982 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.779226861 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.881128194 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.756099853 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.055769461 seconds)
done (took 276.435988187 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.830860665 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.753678778 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.856162215 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.756326863 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.841202412 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.847015579 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.754059037 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.753329718 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.755472699 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.139293207 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.753742072 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.75428863 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.757231766 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.753657299 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.842758022 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.756842828 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.753958269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.101675502 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.756566637 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.833315748 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.756210926 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.75290104 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.757019622 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.154083603 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.756235656 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.753634687 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.836998243 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.757753403 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.105876583 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.757228483 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.752916107 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.115988382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.85674154 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.776367484 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.767754581 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.764575538 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.844796198 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.762039904 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.842805062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.845082604 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.8565684 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.797772112 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.757955785 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.751205507 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.76028456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.758771555 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.75437046 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.786796231 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.752105434 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.755799882 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.101862067 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.768003059 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.765371989 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.756306391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.754758614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.780339218 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.755776896 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.759996002 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.854845607 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.758916105 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.823305042 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.142993186 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.13959637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.758973537 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.757456461 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.756317074 seconds)
  done (took 176.907865903 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.82720824 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.835512995 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.827058612 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.763831723 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.809632082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.82768707 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.765402566 seconds)
  done (took 14.330805291 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.76586758 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.759690881 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.808376882 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.810874015 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.759409553 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.916684164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.760179583 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.771179667 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.758334153 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.78696442 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.761366169 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.75896209 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.76611355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.757095661 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.808792298 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.77054933 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.878528492 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.764938747 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.762294393 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.908901197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757393224 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.766822212 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.788407603 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.773363211 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.761716524 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.767130498 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.359625378 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.761293146 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.759261642 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.759712301 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758250543 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.802627001 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.761022927 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.757642481 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.758069055 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877506632 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.761515217 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756874451 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.761160347 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.760039877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.760839041 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.760575563 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.760899848 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.759056453 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.761539903 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.786995676 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.762241361 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.761654185 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.760976265 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.762389208 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.788773557 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.764071626 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.758682139 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.759257098 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.804377726 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.769484916 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.763287555 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.759944019 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.76333658 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.761017796 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.911588981 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.812367784 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.762421266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.811322661 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.762850422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.762661911 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.761666406 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.762436391 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854682109 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.761264642 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.813464481 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.760518286 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.926366287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.786092406 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.764787875 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.766456082 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.766507985 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.763306331 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.762330983 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.770162642 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.759797164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.765986177 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.769902454 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.759865524 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760832031 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877090536 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903632817 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.76139506 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.776861445 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.771118168 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.761515819 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.806700998 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.763001638 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.760823568 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.821388763 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.881225206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.791904862 seconds)
  done (took 195.187727284 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.769841504 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.773184679 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.765435908 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.780809557 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.765343797 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.764084216 seconds)
  done (took 12.297622985 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.766944696 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.765430734 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.764361131 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.762997586 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.764758308 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.766029724 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.765631095 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.766656162 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.76798042 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.764473205 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.766433988 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.765107239 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.76557205 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.76404484 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.764590368 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.763978337 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.767042571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.762757532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.764133254 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764465364 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.924348761 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.764967569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.764417286 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.770240326 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.769659613 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.765512344 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.775613582 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.76448963 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.764243156 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.775526762 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.769421011 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.768009117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.771210961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.772967135 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.769733213 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.770735463 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769999964 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.766784473 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.763132984 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.766937004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.768155991 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765549323 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.766332513 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.768396613 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.769429901 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.776572386 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.771618179 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.775432918 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.767780259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.768802832 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.768010354 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.767174718 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.768702403 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.767043947 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.773151099 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773189865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.771874989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.766332654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.767105029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.772456702 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.770600638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.767771551 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.770375849 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.772296334 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.764876818 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.768006589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.773947154 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.770783569 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.767361043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.766874683 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.769535298 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.763717418 seconds)
  done (took 130.133617895 seconds)
done (took 530.545845115 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.048354481 seconds)
  done (took 8.729904522 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.914082288 seconds)
  done (took 8.653299371 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.234597818 seconds)
  done (took 9.918857796 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.789329748 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.804618046 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.778571084 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.763989842 seconds)
  done (took 28.844525657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.796970074 seconds)
  done (took 8.479538621 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.785577658 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.760042163 seconds)
  done (took 15.263365943 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.811014538 seconds)
  done (took 8.493895126 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.841342841 seconds)
  done (took 8.531533518 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.769448802 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.774591871 seconds)
  done (took 15.254110314 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.74340368 seconds)
  done (took 8.426743344 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.951703502 seconds)
  done (took 9.737055546 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.774770138 seconds)
  done (took 8.527842504 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.770475826 seconds)
  done (took 8.454039217 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.821535027 seconds)
  done (took 8.505213326 seconds)
done (took 157.50066643 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.766926227 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.764861354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.763369556 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.762695136 seconds)
  done (took 28.742588102 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.801569645 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.801807891 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.802688897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.81243047 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.804178642 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.803910219 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.793833797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.79381964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.813253322 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.804260793 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.803322975 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.805180769 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.801820312 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.794102771 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.804574013 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.803350159 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.814151645 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.803141171 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.795228505 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.804951198 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.770080249 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.812980239 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.804968819 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.769777043 seconds)
  done (took 44.903899488 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.965081974 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.841679164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.925104615 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.821375507 seconds)
  done (took 9.237178568 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.821021039 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.821579333 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.834051741 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.874439601 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.896785644 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.832560567 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.796451272 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.792218248 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.779713821 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.824292154 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.898705397 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.817951418 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.910714822 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.772118174 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.95734461 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.770406786 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.770305875 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.82247219 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.87374758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.888584218 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.77067719 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.82234514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.826057078 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.818208217 seconds)
  done (took 45.678563941 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.770963385 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.779752948 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.775918908 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.768979625 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.769884531 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.77243644 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.776503862 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.770441668 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.790744262 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.771155927 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.769819886 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.771714254 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.769508587 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.770696876 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.77046069 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.782196378 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.783675891 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.772930744 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.773217214 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.777068064 seconds)
  done (took 37.175114243 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.764742376 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.618758847 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.117346435 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.021345612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.765572653 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.76908251 seconds)
  done (took 30.743139342 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.786694422 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.779604216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.772647921 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.831094121 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91665335 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.77917265 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.772731979 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.785381441 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.819761901 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.839245502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.796147927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.800819446 seconds)
  done (took 23.367721646 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.767969419 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.76924863 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.768300415 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.78570994 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.784567091 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.780735916 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.780195662 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.767222467 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.787043615 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.79163165 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.783575499 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.785047778 seconds)
  done (took 43.043579515 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851457297 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.654444674 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221976636 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240188046 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303696672 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97855526 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.767901215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859324973 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.77199171 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040896426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.145734879 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97876089 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022215867 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503178144 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.772441865 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.225214989 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070614108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994381622 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801298825 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400600066 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882406518 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286995409 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.459680152 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886221198 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978251394 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.901796563 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.029362215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.724701769 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825154968 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77798509 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778749145 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769294601 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044363804 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894329448 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843451731 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779063971 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.194794644 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.482169737 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.752807306 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.468340119 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.337172514 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890882727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780288686 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771518763 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703494456 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281421796 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865257191 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.776852324 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.472970456 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770761386 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780280469 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849511675 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.77380187 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.586919851 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460033671 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045395322 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.767717708 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777740037 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336145502 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801515975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38470735 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.710284482 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.865028475 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417559014 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234824644 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.927714098 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.773557934 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773693915 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703194334 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.469368502 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887648009 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918589778 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.789632874 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418888407 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086370979 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.206449178 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833334894 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05476979 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545012346 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.709104124 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99565632 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721324483 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703313936 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.609694496 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704024211 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995038418 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810579744 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.357610638 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812492235 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.860308513 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782309858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791854617 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778269001 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994685443 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.650587285 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773630058 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.098697342 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03863417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793636021 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864471509 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706346801 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.77666066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026618424 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.98314122 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.005669335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.240642044 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869027747 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.689282829 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.787364488 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.684102328 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786892103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.051260612 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839961462 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804239075 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896627812 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.728935246 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030573984 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.619580273 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.991361491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.161400267 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015713864 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.100049529 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026906452 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840227586 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775128586 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775196638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.47869252 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394677583 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997459121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.770604492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250343132 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786762464 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.77517501 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709781419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.401368072 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161708615 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.861891532 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996622061 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.704229299 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049912833 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709247577 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919234223 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.77150992 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.99534521 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.436652616 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.860083703 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033615455 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002903216 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.993444862 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785609299 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794732859 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873803209 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79680106 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.180218454 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02865102 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.779796052 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.779321544 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483111153 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.839314584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781350829 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.78189643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311881712 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060800638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809967013 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.784064797 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663211153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.78964414 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842271545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782776012 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78605095 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.297449553 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288653339 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.783113794 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.433951823 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998360647 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784836017 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.46979146 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963511572 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795023955 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05603528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845098121 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.709643127 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.478448667 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.480021818 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777601818 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710961316 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.777163448 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785966369 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787090916 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.972621296 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061897317 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829847552 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.425846637 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.885064291 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788039847 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.781211414 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777682258 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.275595109 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814283225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279720824 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889380329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911450938 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.790610123 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710394667 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.780796387 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782019616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777361431 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731339921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83154541 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.421458465 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989590964 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035468952 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.193118475 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793286682 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.473357758 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.897430918 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.7964599 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.107179696 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292890333 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.881900356 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845421216 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.788522713 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.427227788 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.522859167 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347563886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091713674 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106227615 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138010201 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.135235109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.100326173 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872114362 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012147248 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306658179 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83746359 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874188285 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732151706 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799861184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.442744602 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143509459 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793459402 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004488064 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076058225 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.186457946 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919766134 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989525894 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814919004 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.574983324 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809476493 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.299782636 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803236591 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.256012256 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9878661 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869339272 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112477932 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.8686064 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.780161971 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127201346 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826814096 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.490624967 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144284124 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.161490728 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.279655391 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012159928 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787713673 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224344245 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138099021 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.954124081 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.903698852 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714465907 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.791073109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.790958869 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.776641082 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.756573478 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.629530665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.033102822 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792918686 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015309669 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.882302607 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149602386 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.691137076 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.786644251 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782875288 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039612819 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445684001 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936822303 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.05815969 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.357136353 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789330709 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714800284 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713705244 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.486015073 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.791086364 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758575583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004043448 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.89865871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471269457 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.145081438 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093257982 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035526402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.796048419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062968758 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065638647 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.280966574 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808044671 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.882341839 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.118386339 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.461523628 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.003474495 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016933733 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328749063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009006654 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238806909 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.739823152 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783849085 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996135529 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.005006156 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.182824586 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96416763 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.496314719 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.792698664 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15870813 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849197563 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.183429263 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977444825 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.876580752 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795764576 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864864213 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792082648 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.795381119 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794469977 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796527817 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187513911 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903438564 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.797612367 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864754525 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825572676 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.362519651 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.796331276 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064445323 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158488617 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125818349 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854505898 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784678815 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794515005 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718396745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918428471 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.228975518 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057486557 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.90932704 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.92504946 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808898674 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.124830957 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.019057902 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095742345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058866941 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.678665871 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403022191 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905466803 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.007873563 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795305939 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.994807813 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013441987 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098784356 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257707797 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.898063174 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.978714913 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059977494 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15343158 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786250654 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374366356 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.799116955 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191499935 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.825373238 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187099434 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051158129 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796742883 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911688011 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79536184 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982574953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.280801526 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447158209 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143343438 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644986935 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794672556 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070591674 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126948092 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100799171 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867379886 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79688974 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.484383786 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924455761 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.678415263 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.02698217 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78826784 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997196813 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.499694312 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797887364 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071178833 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103770703 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.78550152 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.710956276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82830072 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.797084413 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009958418 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012853855 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041555974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798456821 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.79604718 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.601650883 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074473603 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856308767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721963871 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.791822446 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838717952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021809206 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808053319 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.304365146 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.489969421 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07724031 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.70868137 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8096762 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.187436039 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170844872 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131106924 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.322480484 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017704577 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349334186 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.626269175 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163119194 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.793641716 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.182084316 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16625612 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.793051204 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.278154608 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899486828 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.069628592 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122134286 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.806327058 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574323973 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.829226402 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012646799 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155505729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729026512 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793666087 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.822660805 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.791827488 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781744219 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801865653 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.749271178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226979248 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.627340622 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283728643 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.796022355 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.859769771 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.158464598 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317566315 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898020079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815234246 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796988748 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.491801009 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.081440929 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044362434 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278171467 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.860409332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.796985971 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792468292 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718092375 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988163756 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.987749353 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08461999 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.110965266 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901503927 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795813086 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.006510501 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001621959 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.203535458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93327586 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.890237914 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902786572 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.716093259 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505840163 seconds)
  done (took 1619.788595706 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.813026604 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.818271906 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.806763739 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.843809264 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.832354256 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.809173341 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.855876402 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.887239329 seconds)
  done (took 56.379277681 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.793012378 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.957273393 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.802553862 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.793210773 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.803326842 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.794174167 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.957892888 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.80110374 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.820110974 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.801941795 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.792480461 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.796558875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.054386392 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.816664497 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.792105685 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.191375426 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.803394999 seconds)
  done (took 73.292681266 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.815204847 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.22275253 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.825058845 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.795391271 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.087321865 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.794820842 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.839236686 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.841418918 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.798354446 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.21351833 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.088508939 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.811795835 seconds)
  done (took 89.845353204 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.81033566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.799139621 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.800106809 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.800516966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.799477551 seconds)
  done (took 10.72952747 seconds)
done (took 2114.626350347 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.026074191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.978872159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.02398046 seconds)
  done (took 5.715984169 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.941992787 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.98954836 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.109141233 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.116533237 seconds)
  done (took 9.874183272 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.096646952 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.166672791 seconds)
  done (took 5.977109717 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.122897294 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.831448792 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.175894484 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.793212344 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.796820093 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.797212704 seconds)
  done (took 22.10668632 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.797570309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.800284525 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.799323344 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.79980665 seconds)
  done (took 8.909645003 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.77652435 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.458702235 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.775985494 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.793620895 seconds)
  done (took 20.51968393 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.94837646 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.914822618 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.941153798 seconds)
  done (took 7.518886758 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.020871276 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.027224516 seconds)
  done (took 6.762324552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.956113967 seconds)
  done (took 3.670250093 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.826566369 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.069318662 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.288717072 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.322672711 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.384552562 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.631766352 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.138248209 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.033084048 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.246759115 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.274856262 seconds)
  done (took 23.931312481 seconds)
done (took 129.854216276 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.148360205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829829482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996835335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.158812823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.036036591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.997655908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.009006603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.150596067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.842907622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.834432978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.166238184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.034553088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957681597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817794554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.97051695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.809571364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.02629494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.171370236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.846943413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.085285795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.027828632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.808086204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.003096495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.823898959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.033195495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947539597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.35185313 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819272222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.980508501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.363746121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952159472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.224544429 seconds)
  done (took 165.943521786 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.799988849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.800144816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.799142177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.797137496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.284184788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800795035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.798635181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.797749977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.197790153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.187022517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800397742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.273013735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801952583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.79814794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.799949016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798880055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.346786344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.800451621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.798444132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.799270949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.804783626 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.102237665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.799966114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.113667017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.342068801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.800219228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.800196186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.798347727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.799370736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.798652575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.800147505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.800968175 seconds)
  done (took 206.760647164 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.79978243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801555087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801275971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.802385609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.802768083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.801453998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.802136951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.801197503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411913604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416808176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.803240976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.803245523 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.80035663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.801271394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.80524445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802432438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.804926008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.801594338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.802490071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.804411724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80502213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.465743679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802831514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.469167915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.803378791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.80089621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.80257953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.80274654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.802073337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.80368573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.804742138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.803685823 seconds)
  done (took 217.956254858 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.062082697 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.809030993 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.809092083 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.718870899 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.808560648 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.807976023 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.819782395 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.055809141 seconds)
  done (took 18.614006959 seconds)
done (took 610.996229041 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.317409462 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.164110109 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.983034162 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830100884 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.187018278 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.877707532 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.826710083 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.889567163 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.444585115 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.896814347 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.479410543 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.851044048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.558624084 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.854864544 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.949867904 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.883518781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.38268504 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.460853234 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.008037904 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007736934 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.011581994 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.760067217 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.914420116 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.485615796 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.592106381 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.80636915 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.891782592 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.38135161 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.840333946 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.986832596 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.588636417 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.125995156 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.847932397 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.828411194 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.883463439 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.860312648 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.097852259 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.847783273 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.957269829 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.571555205 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001366056 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.364289082 seconds)
  done (took 100.221409864 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.796006987 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.794331455 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.794375952 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.793605542 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.795381686 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.794010195 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.79597603 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.794044164 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.795727145 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.79386621 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.793884886 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.796371659 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.794455086 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.794519199 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.79426498 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.795380443 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.794248905 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.79484102 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.79537863 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.795300518 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.794630166 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.79496082 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.812203003 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.794763954 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.793180533 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.796351669 seconds)
  done (took 48.413720553 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.811029827 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.965254499 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.053183208 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.833635256 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.811624569 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.815502654 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.829772524 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.816075126 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.815129808 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.814394808 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899975752 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.81747776 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.830218743 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.054207667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.830991548 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.815439059 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.811872381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.813139685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.971782652 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.828953206 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.83244173 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.818048939 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.832485519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.82643035 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.81421709 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813121739 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.817554753 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.264645511 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.822861905 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.900659033 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.859773119 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.839929206 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.213559626 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.063349666 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.874087088 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.824824111 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.812198372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.906527937 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.818097948 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.813637678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.832123486 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.818646937 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.052275001 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.326420544 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.829462579 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.814816199 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.273972902 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.914271776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.855650131 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824806805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.059521899 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.832841177 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.814611962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.815166889 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.850543946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.821045403 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.814273163 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.160382894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.827371638 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.831900385 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.819018061 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.816947937 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.976732321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.825696202 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.967594273 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.826063518 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.822391497 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.816229885 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.055363538 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.834180661 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.329065252 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83437157 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.814973789 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902595612 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.972680071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.302468832 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.830088164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.979665207 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.231652702 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.840015985 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.822183925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.256388671 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.844090482 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.822507178 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.81617131 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.816617152 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.815052628 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.855605659 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.831508152 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.252150525 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.339121779 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.181559428 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.845075264 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.83158348 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.817200305 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.162734296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.826049818 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.81656399 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.051766947 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.341682183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.831822564 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.822542546 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.316476546 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.832677695 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.834698689 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.825069461 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.061203369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.834739267 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.857048037 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.816340095 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.822665289 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.819250261 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.835130308 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.824452308 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.815554407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.31130584 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.92509535 seconds)
  done (took 225.635141546 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.814479738 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.816978892 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.811359464 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.816014272 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.811666364 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.816293527 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.810617717 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.810654927 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.816888911 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.811033465 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.810227572 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.812495053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.813641496 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.81578517 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.828501293 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.818381167 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.420703824 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.815162279 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.811830319 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.812105854 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.470010483 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.820178038 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.811646893 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.811905926 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.81087709 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.813019967 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.820158201 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.819853618 seconds)
  done (took 165.80511234 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.817851644 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.935990522 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.843179683 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.849139855 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.832001551 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.819258225 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.843471113 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.835720356 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.825236016 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.815139879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.815971929 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.880237653 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.83051487 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.918181174 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.854100084 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.850269159 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924881503 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.829269985 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.815430985 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.816087683 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.847154372 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.809856499 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.880246977 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.949435463 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.840253843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.937733877 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.823085328 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.820120092 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.818049165 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.938434023 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.837462332 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.8789117 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.850508005 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.83769368 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.94132522 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.942933293 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.930166227 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.851358745 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.825176833 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.816508087 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.817212226 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.802431607 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.937345886 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.840329406 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.821741435 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.922635995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.840519367 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.819845802 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.828141357 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.816377093 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.833906271 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.839518632 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.888971499 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.954119914 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.85450721 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.8448292 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.845189834 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.104469036 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.8291061 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.922767688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.814421563 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939245927 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.844214733 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.80491145 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.822490901 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.82737893 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.851527861 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.855022267 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.930149908 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.835063567 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.924728081 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.859484592 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.828753261 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.819328895 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.823243973 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.941564606 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.946134488 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.8587297 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.860594285 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.853588969 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.81615281 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.821862665 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.805886501 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.839344305 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.824869183 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.936847412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.945755128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.832805387 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.822270911 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.823158678 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.823599677 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.848360509 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948525122 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.861047671 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.913387298 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.89470453 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.90010481 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.838700314 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.834459127 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.825656491 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.886527877 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.836836621 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.833210122 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.153959727 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.892990742 seconds)
  done (took 197.427485472 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.190349536 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874568491 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.880141656 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.187513699 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.18765674 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.736402028 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.87043375 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.869897403 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.895944439 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.067554266 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.94472685 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.889131257 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.85912469 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.8467923 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.86875662 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.891741901 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.87875359 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.219562425 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.983601291 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.044834605 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.861524418 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.161583073 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.152916717 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.272579089 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.906848028 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290600899 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.456302848 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.007358155 seconds)
  done (took 60.039909199 seconds)
done (took 799.262149175 seconds)
SAVING RESULT...
DONE!
