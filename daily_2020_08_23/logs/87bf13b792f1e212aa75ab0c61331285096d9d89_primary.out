cset: moving following pidspec: 320
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.645895666 seconds)
loading group "shootout"... done (took 1.229634693 seconds)
loading group "string"... done (took 0.418430832 seconds)
loading group "linalg"... done (took 8.012550322 seconds)
loading group "parallel"... done (took 0.155521634 seconds)
loading group "find"... done (took 1.318964391 seconds)
loading group "tuple"... done (took 2.029379134 seconds)
loading group "union"... done (took 12.733953085 seconds)
loading group "dates"... done (took 1.359550494 seconds)
loading group "micro"... done (took 0.202817063 seconds)
loading group "simd"... done (took 4.426743915 seconds)
loading group "io"... done (took 1.027349045 seconds)
loading group "random"... done (took 8.850117442 seconds)
loading group "problem"... done (took 1.590865319 seconds)
loading group "array"... done (took 19.683794296 seconds)
loading group "misc"... done (took 1.588349012 seconds)
loading group "scalar"... done (took 40.09153366 seconds)
loading group "sort"... done (took 3.072272848 seconds)
loading group "sparse"... done (took 11.974048489 seconds)
loading group "collection"... done (took 16.793554991 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533842031 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13384032 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135934395 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126575957 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152948953 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.128158579 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134621467 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090000218 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.934286501 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149564911 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12014896 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432941149 seconds)
done (took 5.591792968 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168257054 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090593187 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082564738 seconds)
  done (took 1.462578547 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067778734 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.138317981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068871298 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069664806 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069380368 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068486892 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068531275 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068626574 seconds)
  done (took 1.841674562 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073972849 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069760291 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067477729 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069265731 seconds)
  done (took 1.572842859 seconds)
done (took 6.419700347 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.246578817 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.105401026 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.292221547 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.40091204 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.472137517 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094773162 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075690066 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071325113 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130605437 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313596939 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10503888 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.189288394 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093804813 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17705014 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.01450163 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.124333374 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087164742 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.127180488 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094887144 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135716945 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.404626776 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080179336 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.075539474 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.072163603 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06866371 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.65085178 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659590704 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130967763 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084529061 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100185132 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.117610821 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646148659 seconds)
  done (took 10.769063754 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09338305 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093308248 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069070819 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125281632 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095218354 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06990981 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07498969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06762358 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08979419 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126392258 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092036015 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100209363 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066779548 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068995969 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.075464474 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198644758 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081181615 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081556062 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067728341 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080629073 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107365074 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084118535 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079323415 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07891772 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1305306 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171073575 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101432211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098763896 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067338288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080144447 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114983368 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127348066 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066862683 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065394179 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121280231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09550976 seconds)
  done (took 4.750557414 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.972589893 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093675311 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10380838 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.642158865 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066019297 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.155106988 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244335051 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073306938 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.341209201 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.148160004 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140014428 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148831743 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117799705 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085833977 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.226077969 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.072094831 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115709484 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518860483 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068566484 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067700668 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066687509 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.069498388 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068542247 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063721296 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070753651 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095753514 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088598138 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.166344469 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930459843 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245703378 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068220544 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160240358 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08729459 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.358415774 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070285877 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083634862 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.419280807 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124728062 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065612454 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064392756 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168335647 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118463849 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065774821 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118297905 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078880827 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069301986 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069415783 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068426473 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071537039 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079002426 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102150793 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068723876 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065212146 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166669168 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065613694 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06671215 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067235525 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150544834 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065101781 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142699478 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064289869 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068976097 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102138302 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068898687 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090021184 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.104021029 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.340426744 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.049823821 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067024834 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.05016924 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077134055 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066393915 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070927046 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066605608 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068040751 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06429977 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067089366 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073942714 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070267296 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069196005 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109218207 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065834 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070251999 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067053991 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072133686 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097833835 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066132346 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.483345188 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097574146 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067523339 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077225573 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106280732 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067636813 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07219228 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067395061 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067319176 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065949375 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066981248 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.182651919 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097380906 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070002605 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11368653 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.034205154 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071596326 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066935912 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072504654 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070223174 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069839629 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065312508 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065883264 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069827813 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069102253 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065282992 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.111517151 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067751993 seconds)
  done (took 22.005836684 seconds)
done (took 39.788110911 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.260511812 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080624322 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081620392 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081747843 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082059082 seconds)
  done (took 1.974090107 seconds)
done (took 3.353038369 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.11018894 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063729896 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100816822 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100210409 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063965136 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063648905 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098766016 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064613146 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098548301 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.10049439 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102422869 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101554893 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064012037 seconds)
  done (took 2.51420397 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069496551 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081438608 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083784109 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062383522 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072067896 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082118608 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.0621331 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081209182 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087735862 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.087898596 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081752958 seconds)
  done (took 2.222929182 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068991386 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081935777 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08358782 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062062277 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072767259 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081629861 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061852237 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081593178 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084587316 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081574066 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.0815795 seconds)
  done (took 2.204906375 seconds)
done (took 8.307458604 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066296439 seconds)
  done (took 1.413439871 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.530796452 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.540987597 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.069417186 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.088065651 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19300037 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.098275028 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.222847922 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.074021974 seconds)
  done (took 8.351610724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102190978 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068385424 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068860625 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069899765 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067697953 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067628036 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068501847 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069592857 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068089244 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067569081 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068979256 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069635265 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069248628 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070340497 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070149809 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06964331 seconds)
  done (took 2.583765476 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098718466 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097940965 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073377521 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074359211 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072183188 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07158493 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074124521 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073106278 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07007595 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071888741 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073662926 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072453691 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071987204 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062873241 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073461822 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074131026 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070075991 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07365864 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073621519 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074765685 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074068181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063229882 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072232496 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073053503 seconds)
  done (took 3.257080744 seconds)
done (took 16.972025024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114496537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076208166 seconds)
  done (took 1.543931207 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069446963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071263903 seconds)
  done (took 1.509510477 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076427551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061068611 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082954716 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.072538937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062155849 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061479051 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08067763 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062134903 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061608122 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061883038 seconds)
  done (took 2.051769328 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063114824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070646485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068542345 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07053392 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068420428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06289357 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066356103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063386323 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070975948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06202343 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066905477 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082532385 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06648833 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084267075 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066324669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066781056 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069079797 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065832082 seconds)
  done (took 2.609323519 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060792113 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062597419 seconds)
  done (took 1.503561759 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064796264 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062142353 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065934983 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065254231 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062128246 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061562961 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062294291 seconds)
  done (took 1.815742544 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419525301 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122609256 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348351142 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069681125 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078662009 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2539605 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063293669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06845622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068219826 seconds)
  done (took 2.908448282 seconds)
done (took 15.327798725 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079821442 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08464149 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09068266 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.422199046 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092681943 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066960693 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113001689 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178793721 seconds)
done (took 2.526559286 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212404331 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.324010864 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.796322558 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066881367 seconds)
  done (took 3.571494622 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.453521647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080092575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07831293 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068192079 seconds)
  done (took 2.072845105 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065160801 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071981699 seconds)
  done (took 1.52521401 seconds)
done (took 8.777190289 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063687372 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063757519 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064428574 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063374662 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064167077 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063832741 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063386792 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091333871 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063123129 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.063238397 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.063503375 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063402043 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063873651 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06356363 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06322669 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063699017 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063590873 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063268594 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063830128 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063601651 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063377354 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063857178 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06366888 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063037307 seconds)
  done (took 2.968609505 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079298937 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066208801 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067232666 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067268869 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067518387 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067302981 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067582626 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065670104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06722713 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065301409 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067492323 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068129548 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065493525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067828694 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065641984 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067664215 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067206428 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065784853 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06552524 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068006144 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06684753 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06558571 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06744787 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066802638 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067363899 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067285603 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065300749 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065612825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067401145 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067726471 seconds)
  done (took 3.416318611 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065608142 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060677355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06114609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069437976 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060482394 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060930697 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061195836 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059833794 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060026879 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061406342 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06085427 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060150116 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06121728 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059946189 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059925648 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06073048 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06434446 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078104705 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060153167 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060019506 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064021192 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060680693 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059978588 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059812108 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060598819 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059890718 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060122724 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060364249 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060162237 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060715921 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060150778 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064518071 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074344842 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060273205 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069157633 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064526717 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059682597 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063469703 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061566715 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059725728 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059516062 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059830962 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059807738 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060090155 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06907935 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060298661 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060999963 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.06056877 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060278934 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060068276 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060002492 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062077158 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065176927 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061651044 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059611062 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061539297 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059546581 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060476069 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060082047 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059588821 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059541149 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06333715 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061663066 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060568592 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07787388 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061644272 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069324285 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059848623 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060598203 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063072954 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060604096 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075934424 seconds)
  done (took 5.882300821 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086641424 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088522356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065202543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065182366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061015295 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062203404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069019471 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060759155 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065130917 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080284617 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060641513 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065398853 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06490242 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064786529 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061104782 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065175045 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069179067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060901953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060592629 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064419384 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060980354 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068269894 seconds)
  done (took 2.884563019 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140081519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066585462 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10425783 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076871516 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069002231 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076787158 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066021253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066681221 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066934922 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067080076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067366472 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066722455 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069081087 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066962358 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067197371 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066834898 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06673884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066888486 seconds)
  done (took 2.743817537 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076434429 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065933485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089087811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06617507 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065878267 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065671693 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07008796 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070650623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065525391 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06600008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07074154 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065612885 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065357612 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066047116 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065790077 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066229365 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065523965 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065999788 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070600759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069915766 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070819037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070526676 seconds)
  done (took 2.924559781 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074116167 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065256658 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079343125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066552885 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06080007 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060834337 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066147435 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065261353 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066297833 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064540553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065289648 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06088571 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066764434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065768869 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067036184 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065154108 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064639427 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065123193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064678612 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060555684 seconds)
  done (took 2.721754102 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085857521 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063715353 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063494131 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082925782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064092837 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063362857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082154525 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063174174 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063883079 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085031387 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063397578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063233199 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082080279 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082223948 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063374073 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082195433 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082159886 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082313337 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063375772 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063758356 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084861892 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063516932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082109979 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063522846 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063227582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063520932 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063365022 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082075206 seconds)
  done (took 3.423743526 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063462317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06363495 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064303218 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063756041 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064042699 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063745947 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063694425 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063920018 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063018285 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063648721 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063084058 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063176929 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063587883 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063031738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063642403 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063261484 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063291681 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063942994 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063315408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063533886 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06335871 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063350981 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06329539 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063370794 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063682782 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063590637 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063315124 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063333665 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062902782 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063515586 seconds)
  done (took 3.322005045 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073415934 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072316579 seconds)
  done (took 1.56216653 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061776861 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076773667 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06012954 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070700995 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069288668 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064014881 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070289586 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069058275 seconds)
  done (took 1.95146049 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06699077 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091219814 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062869798 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063030207 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066031127 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121180791 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.077337989 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072653103 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075303552 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064204278 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062935738 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074800832 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064847783 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074298264 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063550153 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070230896 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06851555 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073322597 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073534839 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060746685 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073220172 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062717844 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060790209 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062870351 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061854044 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068235809 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076775025 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073620903 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069861221 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059517443 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080322811 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061077868 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062009012 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069904616 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065528277 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060950023 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096825797 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060997518 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066889435 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060524719 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072983022 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080665019 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074827207 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07883154 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062662245 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063517998 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060507777 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06307264 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064309841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070003141 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061008255 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067948856 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060162154 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062367597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071177234 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060875757 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067113405 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070210946 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073468133 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070600211 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069300852 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075504728 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069374572 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069852791 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062258841 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080165543 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063072073 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073289839 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075148429 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062096621 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074259109 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06038038 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059421854 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060536535 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093323549 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062728898 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061719554 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060740622 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060579502 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062256802 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070176217 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066853723 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067446606 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064671694 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076007537 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069236042 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060238653 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068676099 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078728777 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06399804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060802182 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076696282 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063636173 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060630624 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078349058 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070160205 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06301394 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061943156 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064215475 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074628452 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062226967 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059345175 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0685199 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062226635 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063910794 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065953461 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068064215 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060340661 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07000044 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066438854 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062851848 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059313141 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064748479 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061566689 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059262267 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069891414 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060679712 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075898606 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067204771 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074176272 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074705522 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.071093943 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07626414 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060585315 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059545478 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078444912 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200178153 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.063042777 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078813112 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060888657 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071742826 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061065422 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062783931 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070273999 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060444865 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063319643 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061026014 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067162476 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063245937 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063868337 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065531966 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068855797 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073497173 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062499755 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069769987 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061777845 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07692384 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070646761 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065929775 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066188027 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062171505 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073038847 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067802298 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069816975 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060367387 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061431179 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061386195 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07138943 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070536306 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06280972 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069905779 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065222657 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061767498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061161115 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062656496 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064012962 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065034756 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061806743 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067907987 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069390475 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075480243 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069616317 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069729674 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060102411 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06056375 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065763464 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060702843 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065512397 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070015013 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075357882 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072277283 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080880689 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060841674 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069944042 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062532268 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076853964 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073647337 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061791164 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066237723 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059660667 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062743145 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069595854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072141614 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075036057 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074883368 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065184812 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065409991 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060611504 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075188351 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061793372 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068738417 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069603332 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065901882 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060746519 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062749946 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069675878 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064953962 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061091431 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075871754 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067888493 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060882419 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07434196 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061299391 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071515814 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060654674 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064067057 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06531089 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06309006 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069948573 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075633084 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059976064 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061903684 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076029842 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063085871 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062768836 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068584522 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075675142 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065414358 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068748485 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071594552 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070578972 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065511698 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070258182 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062260703 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070218843 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065073432 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072999121 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060979644 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07904533 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059739504 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075332341 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061660482 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071655789 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061225224 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069813438 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.062005173 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077515946 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062512434 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061781137 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072735338 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059902594 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069522659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061012436 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06524365 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066978999 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070092798 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062942787 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06990961 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.198166266 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069305586 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066072183 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06973447 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070546654 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065739539 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06085837 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069167263 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072423868 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069188615 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063670547 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063242025 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062082155 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070458575 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063324148 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062586524 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06911359 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065208216 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066914342 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062934546 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063296739 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063799293 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069815511 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070932561 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079857157 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069563043 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068452851 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070265845 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060625277 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076605607 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061163094 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068409189 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059961922 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068247397 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06984913 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061507871 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080450608 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063151403 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068657586 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073277983 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069466662 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064397773 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078577379 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064296343 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068525371 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06861447 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065363296 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067788602 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063111255 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068254126 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069854741 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071083376 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061923084 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068334445 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069085399 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062769797 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070176377 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062912621 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068778036 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06284468 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059902989 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06524658 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072407918 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065639356 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065916249 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06139644 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059785749 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061486875 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068984411 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065157014 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069273792 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075978873 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059663709 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061839555 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060655957 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063920806 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078644399 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070608205 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068283674 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065152776 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062706438 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062788525 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063000449 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061276127 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064897304 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060081513 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060514547 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071289495 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.06295118 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065190732 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061367586 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062596065 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06982365 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066744673 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061370991 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067249566 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060559826 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065676647 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059931579 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06272335 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064960363 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060297443 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064373418 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070876503 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076970903 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067242627 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068910274 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061939355 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068471739 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075986689 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069186621 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062365598 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069949445 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060364065 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078960756 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070177046 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069281979 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070369923 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062178517 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077389721 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065209858 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070693425 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075997997 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062151592 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.0688939 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060407423 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075967881 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064871783 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060319813 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068694438 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067929056 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066634314 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.211334484 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062825191 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069662321 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067497173 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064980619 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063777939 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063404238 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070001113 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077090855 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062733602 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066346675 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069634824 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069460049 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065364065 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073706471 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069336596 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062886046 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064246892 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064511792 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062584747 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073593337 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062451333 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066354232 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066089468 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061347259 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068446682 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077461416 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070333464 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070949053 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061341374 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060644557 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078586994 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064561742 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065815903 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069115281 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069883681 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073475862 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070055053 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07758498 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061963636 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066794745 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073276599 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062472088 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060953858 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064359933 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062975446 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069992767 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070837635 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067684435 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063541772 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06716552 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073569668 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062246476 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065116753 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066756287 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061720851 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071090263 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068463244 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06883283 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062470091 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060418974 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064261116 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069386785 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068326062 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069367388 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061923476 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068811503 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074918259 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067977069 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064725796 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060956135 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064716049 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06954471 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066484238 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060999416 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065396519 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064380168 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069356506 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070201717 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065423554 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060699524 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077566452 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068899678 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069821804 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063288954 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063852945 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061645996 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061226588 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072126289 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061178977 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063013083 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065738694 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063071492 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078642067 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069067232 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076690552 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062398229 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065581686 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060834564 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070309645 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065242242 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061389479 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071108721 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060067293 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076211652 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073226573 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067832369 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061184705 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065774439 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069113056 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07525157 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073320567 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069325224 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.065271442 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070477153 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062843752 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072112881 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060747047 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059782938 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070771904 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069050085 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073447811 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060434334 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070634684 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062827321 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068575695 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069133249 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062783109 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063378159 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063034809 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070396154 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.201580653 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070962634 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065815002 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078296135 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063168243 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072195044 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06992806 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.07228314 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074996536 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074185557 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069843804 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062254281 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068531889 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069235367 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.063345806 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065688809 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065706121 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083150077 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063565479 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063229362 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076316344 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069266417 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061415337 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068980437 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06589951 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071439538 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.063272382 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071552874 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066008184 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062491674 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065658261 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065821047 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060401705 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061198025 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061616647 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070742863 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065959066 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061384229 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08025366 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062595586 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069055696 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072478561 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067937494 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063243962 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060284197 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062037216 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072844789 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075846522 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064054411 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069439214 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062857372 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070880535 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059819864 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069232521 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068462034 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086950847 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060618928 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061359827 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075038731 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076030915 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064942422 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069928305 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069820388 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062838157 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082741846 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071076842 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062249413 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071502771 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063681574 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060292273 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060081236 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063086324 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07233652 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060634138 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063822606 seconds)
  done (took 42.093311544 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098720683 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06234483 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061048363 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061442889 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073273096 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06206934 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060897574 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062382197 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061849634 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06387151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060848737 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061169562 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073406576 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075811325 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072252571 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065597119 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060967039 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061812625 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060998686 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061860889 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072136052 seconds)
  done (took 2.907513562 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067400174 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076911615 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074287883 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078765935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069734479 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066574859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073290715 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066190836 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074030675 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071473193 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073985601 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065902157 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071304852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071366279 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07110959 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066127335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073641185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069955418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066206778 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073285395 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065926343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072987291 seconds)
  done (took 3.050051441 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061759746 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061738159 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069084079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060502628 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060936628 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064735134 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060154396 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064374922 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065153494 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064853743 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069255117 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061455495 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060027524 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065982714 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060719361 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.06153254 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104047517 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061422299 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061951679 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060333531 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063660206 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069442279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060366891 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060593075 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067619718 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064329667 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060292397 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063599952 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061245412 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064403856 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06154472 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060161262 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068783352 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068368697 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06451315 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064620988 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062120329 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061379772 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060421547 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060486944 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068519695 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062093354 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060852383 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061935099 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069380741 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060363702 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060149007 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069015005 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060073418 seconds)
  done (took 4.632329189 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072402633 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112401456 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066961424 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092413332 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075135893 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067913639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066495757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093232894 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061783411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063188141 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075786146 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07614769 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064225146 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065733279 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068231756 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06368475 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064605274 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062902968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067158672 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063506735 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067421666 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067801435 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07481387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075166279 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065081081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063270782 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063371656 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065668814 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075112428 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070200352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065947342 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066367829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075224807 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066526773 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063317935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063477833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075908349 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064369901 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063847073 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061954368 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063302798 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06549791 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067865677 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076499957 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064410305 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068744259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064395739 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061932277 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075169105 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063805363 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06882668 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076765438 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065350364 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064852929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065783905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075433971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063992878 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062538724 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064685832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075457263 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062051975 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065208057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076104244 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063652844 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067977497 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076099785 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068603989 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065039658 seconds)
  done (took 6.327523673 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070811803 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093844123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073557885 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073466461 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072122863 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072525633 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072491833 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072313498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07222753 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073090543 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072237298 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111951021 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067641504 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077612806 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072026943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072408259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071683527 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072277942 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071841764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072205607 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071885292 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072972748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071753348 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072644334 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075027279 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067502929 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071609434 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072008291 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072543403 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071701112 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075364847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071979924 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071693309 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072422376 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075397705 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071889087 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061678393 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071795635 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071887284 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072194794 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067641795 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072867484 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071548247 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067639295 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072048081 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071774437 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072918693 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075202719 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080804495 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072519963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072032671 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072576024 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071667052 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072398475 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072614072 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080694743 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073936247 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072510236 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072011273 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072797687 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07275314 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080284555 seconds)
  done (took 6.07551193 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075776637 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069875805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082276261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061017192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060942689 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071176564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060859899 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060977685 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071832611 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069179465 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070967738 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071096661 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073470793 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071474307 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071166809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073283167 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070806778 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0705401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068908133 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070664167 seconds)
  done (took 2.910592252 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072786298 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079375528 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067390017 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071455158 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067020257 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070937337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065601415 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066732568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066866428 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066512684 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072107635 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072134204 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067151958 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07090609 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072608283 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070757411 seconds)
  done (took 2.620331817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06668566 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069380482 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069475705 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062697311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065988205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061292163 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062128916 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060469247 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06155414 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07554468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062110251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07345419 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062001357 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061153522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061454337 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067607515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061368632 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061949477 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061769816 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067164556 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068707226 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06293769 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065712229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062046286 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067116641 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06900766 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063926279 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065628194 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061836443 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062923002 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067596251 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068848827 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061733185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062473869 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061004513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061932259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061817333 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062358727 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067696837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062085024 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06012825 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06684432 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06243159 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062764298 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061168163 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062495211 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061070604 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068119077 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062261368 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067340231 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061906097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064234022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06253497 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069281087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065025613 seconds)
  done (took 5.039773597 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074740979 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066228701 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060957348 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060814827 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065932278 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066729095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066592729 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067030472 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066630368 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060523922 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06687068 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065526535 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066785073 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06600656 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06652493 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066207448 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06044568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066136297 seconds)
  done (took 2.69431316 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071328573 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0663987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071340694 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066060484 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065794246 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065354949 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061248947 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061079441 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061303051 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065401411 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066116491 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065153704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061560443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065275542 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065687276 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065749099 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065044699 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061248111 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065525052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060969222 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065298786 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061404288 seconds)
  done (took 2.932290067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088230318 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085076083 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.126140821 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079275467 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088577944 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071741915 seconds)
  done (took 2.044753335 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090775883 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104788894 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066014325 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065893926 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076290625 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069496958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069724715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069520483 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076346084 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074471767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069753932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076419361 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076483138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07193279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075972883 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079387316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069715597 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06961386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065862952 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07919563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069813942 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07648374 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069777091 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069597308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069579381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071856048 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079423653 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074089373 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069686347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076310762 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079519502 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069581244 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076241108 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077183544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065805966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075929964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069767071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079258721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076175483 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071623112 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065722862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076507225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076178601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07166135 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079447882 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069749566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071865144 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069903543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069676255 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081564036 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07627 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072080123 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076284801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079289898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079310764 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081923069 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074373706 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072041666 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076613058 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074276517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071658744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076634232 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071941901 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074340338 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079121742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07190533 seconds)
  done (took 6.421267751 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097305575 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066611128 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070163516 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074751613 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07201334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070010959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069966812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069809525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070164192 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066793928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105452282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070426825 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072209796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071920219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070370088 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070098695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069991722 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071975179 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066730128 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081819744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070026737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072001783 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071999618 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072071771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074133687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079087281 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069630212 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069667928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069651648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069517653 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072484199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069965751 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072031142 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066549966 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071804089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0697375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069596258 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07159109 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069407851 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076356083 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071837855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079348844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069334567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069468189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074155144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069792817 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069540077 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066732085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069689547 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066278847 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074589035 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074653323 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074673211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071946394 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069992897 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070128598 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069726872 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069721753 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070230765 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079203634 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071676692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069729256 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081817903 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069720447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069516634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071713306 seconds)
  done (took 6.30761382 seconds)
done (took 131.250633963 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209726127 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184095553 seconds)
  done (took 1.895695111 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072417315 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098352726 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075843664 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134689813 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070264386 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106567729 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103155126 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073946442 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071397022 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071117233 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071663582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074038499 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137045446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069954237 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071295174 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073641992 seconds)
  done (took 2.895559389 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105119345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.184248391 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113486603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069091671 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107160546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077239288 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068951242 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080083583 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073125273 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07219873 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076667694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075070983 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072071635 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074808118 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073039414 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076550544 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072240879 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076399185 seconds)
  done (took 3.071159726 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093159708 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086314945 seconds)
  done (took 1.708653811 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155441894 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104968025 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147065349 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.323437541 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.137005491 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.130892257 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.133791131 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129676728 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11286667 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123135071 seconds)
  done (took 3.019141422 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102171485 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18083614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311405707 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120547442 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075673885 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.103159765 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123263725 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082113798 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080523023 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080220593 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080493489 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077149525 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098338415 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076634046 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076389958 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079619715 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10213605 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075468445 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075330326 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075983527 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101354715 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069822351 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076904907 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07524273 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078041999 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07776151 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070818443 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069586766 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075897426 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075452657 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078882409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100064338 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077649046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102617621 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074022033 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104344941 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075311875 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074033182 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075970756 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073788581 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077459111 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077261511 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078950873 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077032046 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071041182 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07483975 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070823692 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069122846 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079238914 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07049387 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079183745 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078700507 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102951969 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071167297 seconds)
  done (took 6.313208328 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10796366 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106079707 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070009782 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114509134 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106029382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070237937 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106429097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101238256 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110051743 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069865198 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068945677 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069326519 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077952952 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082091489 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119117531 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109117481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07195618 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069882528 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108644124 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108971913 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06865159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101933488 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09997545 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108463376 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068310175 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069724323 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067863756 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068802311 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075516324 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077296199 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06935617 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077617885 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086486365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07683679 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068080387 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068018709 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067833315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076974755 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07752969 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077595853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076346122 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068330994 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068293442 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068856154 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069487438 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067884308 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075875169 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077460129 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076033455 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068373986 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068808725 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067935245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068784249 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076820748 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075762605 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07852379 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076931161 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068162592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068289497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069909069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078703498 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077817826 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077426631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069518861 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077645549 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068641468 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079488067 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081809418 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069068951 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068629229 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068317872 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068544856 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06868224 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075475854 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075980477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068934291 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06846195 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067968491 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077867698 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076048294 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068329794 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075257978 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067740868 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068448884 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069264294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068822445 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074489527 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077091849 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069058363 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068310569 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068153516 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068406156 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067887837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07551327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07695779 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076882224 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.0756848 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06876035 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076114763 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076186487 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069135042 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075794587 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068161046 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068670439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068553209 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07612497 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075472892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077493331 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068766862 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067916032 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075999371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.208965248 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068484739 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076368824 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08015071 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077308248 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068625839 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079878924 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069676174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078914547 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068760313 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078863607 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072825427 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076697698 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069578261 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068470802 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069022763 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076651318 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069395251 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068949828 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069281568 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06874263 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077051999 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080859465 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070237793 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077501049 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077292608 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069834933 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077041662 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068987655 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077866209 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069398302 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069353413 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068338353 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079496802 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068830073 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068598658 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068787257 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07928147 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069291001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079135979 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076023031 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068045084 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083696712 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077846517 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075797784 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079184587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069845455 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069022856 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068277694 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068832479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075111284 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076929198 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069790928 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068575117 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075171381 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078808504 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068549295 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075754476 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075885673 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075883144 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069054082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068441118 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079360812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078664951 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076526749 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075954765 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077235162 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068748329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076208231 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076319623 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068638325 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08401003 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069320855 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080763725 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077108335 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075675927 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076859611 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078031784 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078879752 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07911681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081345423 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068615877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068528111 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076299864 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068671297 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068627193 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075706234 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069259685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069221176 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08231181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067282732 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078774153 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068215711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077753787 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068543939 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069445153 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081809159 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06905431 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068999073 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076058515 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06895038 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07599219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079816216 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076456392 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068567008 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069079572 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077203286 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077514741 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068456679 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068388606 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068699936 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075925619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075264441 seconds)
  done (took 18.553926276 seconds)
done (took 38.999943547 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20797106 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160488405 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197175192 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116156075 seconds)
  done (took 2.308205305 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096526124 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097150129 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.079192755 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065329684 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.084658755 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065426228 seconds)
  done (took 2.057085084 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274524773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1948919 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177418892 seconds)
  done (took 2.209293357 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220675472 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199794079 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.485701165 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299622359 seconds)
  done (took 2.874099341 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134259458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081101699 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063821194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075560898 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112855599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145273327 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091095652 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115139454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075428939 seconds)
  done (took 2.514593493 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133365529 seconds)
done (took 13.683207744 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.200722051 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.195202367 seconds)
    (3/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.187146126 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.106417242 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071776312 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.229437256 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068088776 seconds)
    (8/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098213462 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208109164 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116713723 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069391113 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077230033 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076695503 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.238723166 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104981527 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200553764 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076663883 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074075807 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087406348 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086290085 seconds)
    (21/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.092229069 seconds)
    (22/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.234704129 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221437698 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074563032 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.18970151 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.425800956 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074235042 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191168761 seconds)
    (29/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.143707535 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158121194 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081556229 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.149777438 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076888034 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.167604653 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075166068 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066504674 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127350133 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064860962 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.098532891 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176183705 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073240923 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072823365 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064069849 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09038588 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071864901 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06754357 seconds)
    (47/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.252886609 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078342802 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.151329925 seconds)
    (50/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.236631789 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076242462 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164881459 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.066769187 seconds)
    (54/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.0665361 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065095734 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078160484 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171995168 seconds)
    (58/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066709798 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06495898 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074669496 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065927311 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158659929 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089467905 seconds)
    (64/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076809004 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083516576 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063389703 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083138056 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064746274 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08807091 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06573523 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092407236 seconds)
    (72/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065877739 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090436337 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.146483917 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161202127 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085489149 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168689257 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073436458 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074560922 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076966218 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089546134 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220055266 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066349113 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.145818504 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.221065988 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.150913423 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073976574 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066854253 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068099299 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06640977 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079842979 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065931107 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080187692 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.144259237 seconds)
    (95/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.147002546 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065632151 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077414426 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123359433 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073272796 seconds)
    (100/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073006938 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065616268 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07298522 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131734104 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119434805 seconds)
    (105/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073117106 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.2038835 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086757432 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065410494 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.202739384 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177041084 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077467445 seconds)
    (112/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.182721418 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074517851 seconds)
    (114/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.080555001 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073772064 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07946196 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.223860869 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.23066977 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077848822 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082055682 seconds)
    (121/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066733203 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078095752 seconds)
    (123/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072559132 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066749058 seconds)
    (125/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073157195 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066122164 seconds)
    (127/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072523138 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076444134 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064845033 seconds)
    (130/309) benchmarking ("sort", Float64, false)...
    done (took 0.135162158 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086549013 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067455228 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064918133 seconds)
    (134/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.073533582 seconds)
    (135/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066324099 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076240272 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065114682 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064994438 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202873347 seconds)
    (140/309) benchmarking ("sort", Float32, false)...
    done (took 0.135922205 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076480113 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077706558 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 0.175433615 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091308562 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073420251 seconds)
    (146/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.077543834 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086554704 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117597029 seconds)
    (149/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148518759 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214637373 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.210577294 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151495515 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148892736 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064306325 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091086649 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064943828 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067031472 seconds)
    (158/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065755255 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168216211 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070939928 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068669936 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066099794 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064003774 seconds)
    (164/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.191175627 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07277424 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.144551545 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066026417 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150568757 seconds)
    (169/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066201875 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064071352 seconds)
    (171/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066895129 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065108914 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073262426 seconds)
    (174/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074057357 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067761213 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.079798255 seconds)
    (177/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191998962 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189956257 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073553429 seconds)
    (180/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073056878 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076697897 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15039604 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178173112 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167350339 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065702837 seconds)
    (186/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142889719 seconds)
    (187/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.064523349 seconds)
    (188/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073468406 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064306337 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175239059 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066473632 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222152042 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070446652 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065870766 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214747818 seconds)
    (196/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.156699667 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06598475 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065176828 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07339347 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066417571 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06497903 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065028431 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066696939 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.253766148 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073591063 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068895697 seconds)
    (207/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066882675 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146021528 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065899502 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077514155 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077298693 seconds)
    (212/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.067389568 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145658494 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133618299 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066508229 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089619534 seconds)
    (217/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066978523 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144467124 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073954732 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067974851 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075028071 seconds)
    (222/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.066196571 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088771876 seconds)
    (224/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.066695069 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066992053 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128788544 seconds)
    (227/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070447508 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162559442 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075109163 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0654769 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066768445 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089961042 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064909187 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065233282 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065936757 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073429033 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091285565 seconds)
    (238/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067852839 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128383337 seconds)
    (240/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065747693 seconds)
    (241/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.164293678 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064435713 seconds)
    (243/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.09450401 seconds)
    (244/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064872836 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067034198 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064486383 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066056296 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065078197 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126355501 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066076985 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06786888 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094042785 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064512182 seconds)
    (254/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.066441029 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064667473 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068268182 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12617634 seconds)
    (258/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073559119 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066754417 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06810273 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176454603 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086685484 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.143857803 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065040767 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124576287 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068092167 seconds)
    (267/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06568526 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072068155 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065128095 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136797681 seconds)
    (271/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069691909 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071838993 seconds)
    (273/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066221499 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073791714 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150541909 seconds)
    (276/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.065047123 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06535496 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092085628 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073048465 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137561174 seconds)
    (281/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06652956 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064483468 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065259046 seconds)
    (284/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065275413 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064952267 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065236779 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065895321 seconds)
    (288/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.06455721 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076126439 seconds)
    (290/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.065273116 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064778308 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065216124 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121653574 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072568683 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115377499 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077070016 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064500574 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064612231 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092530109 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066535971 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06776593 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072810203 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172271774 seconds)
    (304/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066104407 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06508886 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087006007 seconds)
    (307/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066535834 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085388251 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066559947 seconds)
  done (took 33.303859505 seconds)
done (took 34.887742417 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08705018 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093051553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074597333 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08750761 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083355676 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098476125 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074867259 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080256412 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082416931 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08128879 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080020192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073097199 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076321623 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076511233 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073606809 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090329886 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081097496 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07488066 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074851566 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065189837 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075449511 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066084559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064758896 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073213381 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077638958 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073200372 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075320737 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075407345 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065897471 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066124617 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070559926 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074634589 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065722404 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078514668 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074537594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074926484 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078952525 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079303525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065373964 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066393482 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076306143 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065576842 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074203757 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072699816 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071839501 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07326818 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074942529 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078584064 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089862976 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070507062 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07687882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077119357 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077656434 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071414542 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071338206 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074348125 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072381815 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08976644 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07465721 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071162157 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075887405 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075570173 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072882542 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074731682 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074598807 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0775515 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07851052 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072867122 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07726176 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073046473 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065512111 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074659915 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070819088 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066299367 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077376569 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079349934 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064571954 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070243887 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073789518 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074360585 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064855331 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070228574 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064484488 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071135148 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069991428 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072341454 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07086376 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073223749 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065026995 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074702746 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073436452 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073954845 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064562012 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078235497 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065722385 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072237051 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066203743 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065668903 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064565782 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071030374 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065578754 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070682343 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073986612 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064367974 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071072195 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079735935 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065327511 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073614212 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064463481 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065013551 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076692959 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076869419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065582654 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070458103 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064637497 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070901904 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064796906 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065166548 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065211585 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065398902 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070151901 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065798547 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070272078 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071169337 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078514876 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06549903 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070304877 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070404269 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065709776 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072146804 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065947007 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065525687 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065146415 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079508835 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070518022 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065789145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071461383 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070207387 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074301161 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064344479 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074630594 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07155782 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.20800975 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072212039 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065306019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077657722 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071150092 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071005786 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065554822 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066548339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06451821 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065697182 seconds)
done (took 12.881031228 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06527164 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.094441175 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.075003001 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.082921546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.078929815 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.0671449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071030101 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.084764915 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069721934 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086738225 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089467147 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087557729 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.094332805 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065392017 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066744796 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067035824 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064807069 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07349335 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.082277595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088836356 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.097678761 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066010355 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075840001 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.082156456 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077330784 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.085434405 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067200926 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06708414 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068711604 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082299455 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090818486 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06607215 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066935225 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080763779 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080445477 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074083196 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066862515 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.070492975 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066765404 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066115937 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067794042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081270399 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070644666 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07284726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067337444 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066988534 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066877997 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072481847 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077510927 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070609595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074460335 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078959842 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068387668 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06601456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064610179 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.070482703 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066206032 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06652149 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066351273 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065924402 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066603674 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068660925 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067071089 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066825536 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070145189 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069234465 seconds)
  done (took 6.489618078 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083508219 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095692742 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084164098 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084137404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066178566 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066845343 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066840422 seconds)
  done (took 2.216759113 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065935408 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078838917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084010599 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083826867 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.076046457 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08496734 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067313611 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097977406 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066522231 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079641756 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.113553582 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084537071 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06985453 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078385002 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066355316 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074651712 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067104101 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075041601 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075447705 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083060042 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071002024 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09494935 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080892128 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067052673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087729212 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.071322241 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065836347 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066823177 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067554213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067851563 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067539966 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1066935 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.071185485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081087439 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067864658 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066036895 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07273101 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070162551 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069677734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073628421 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072342523 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068163019 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065185608 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068147356 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069317007 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.071546666 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065349328 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068101745 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067469871 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078916145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065517593 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071173143 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069785263 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071793436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073076872 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071243427 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075138989 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068099138 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07914676 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075000394 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067574048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076053573 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109068321 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072681602 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07500813 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071042954 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.071066461 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.072465007 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067222299 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068297368 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068202 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075278313 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066084655 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06846114 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070123707 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068457202 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070919308 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083796294 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084111198 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07968881 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068450647 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067998978 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071090396 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083807991 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071513442 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067527657 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069912014 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065843331 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07110064 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068239684 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072827129 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067977781 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075399064 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068931246 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070214257 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075534226 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066591179 seconds)
  done (took 8.818832408 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06731955 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06861385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069787853 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068337137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067906766 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068540479 seconds)
  done (took 2.118867502 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089210563 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067605591 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081466982 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06764443 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103602551 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.075196746 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.075516545 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076565908 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080739518 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080531369 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.075120814 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.078029147 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074452288 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069727544 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074738965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069191474 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074751091 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070985707 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079846031 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069582054 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08169752 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069241476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069767302 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079661217 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07077496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068695455 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067568463 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079885633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079493955 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076405533 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069262549 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070489887 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075596133 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078849311 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07495828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075355549 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067240194 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073361519 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069442285 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070448164 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.077253095 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06949234 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069510091 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073341265 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076124696 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075516516 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073074512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071501044 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074145819 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072877528 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072943941 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067689855 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070267735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073339801 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075348949 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076109595 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073266357 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.074587438 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069047876 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075120438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067077637 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070329039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07592049 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07031313 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071300464 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072918089 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075067743 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068852404 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069212733 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067011542 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073277461 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067072959 seconds)
  done (took 6.980420079 seconds)
done (took 28.283125753 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.975992724 seconds)
  done (took 2.626154915 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.568290299 seconds)
  done (took 2.257168601 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.69888878 seconds)
  done (took 8.384297611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.288110006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.332298784 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730720205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133017479 seconds)
  done (took 3.198451982 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710570306 seconds)
  done (took 2.407132539 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234493096 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22866217 seconds)
  done (took 2.157816537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348410467 seconds)
  done (took 2.035555864 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137310386 seconds)
  done (took 2.82316803 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226404946 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160871416 seconds)
  done (took 2.080734762 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.472693595 seconds)
  done (took 2.162686958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.449662387 seconds)
  done (took 6.143533641 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233928953 seconds)
  done (took 1.963334852 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23538003 seconds)
  done (took 1.931724307 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.74273973 seconds)
  done (took 3.432308152 seconds)
done (took 45.301827883 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080832527 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086462843 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08633781 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081871884 seconds)
  done (took 2.002698108 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071909967 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069882405 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073436941 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073502967 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07194765 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073025885 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072434818 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069262263 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071368766 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069508593 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06810073 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069410171 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072539393 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06958215 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072553277 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073936668 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069370634 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069386016 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073225494 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069195203 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072588452 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069506841 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068198639 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069876043 seconds)
  done (took 3.395705549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076551248 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072651158 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075305706 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071582528 seconds)
  done (took 1.993865366 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074022526 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084960587 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086991666 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.093976873 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075314331 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075497019 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083260604 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084185835 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065650375 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087285818 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068070218 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066564482 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066480156 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087083448 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083173921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063000306 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064549683 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075250321 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075032913 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077060283 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068086852 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065177568 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075401446 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074818331 seconds)
  done (took 3.518126901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077759388 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065430762 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079945522 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092270871 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094566128 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065533652 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080689491 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094628173 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127972614 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065589117 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071288038 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065238863 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108330431 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065490115 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081931286 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107991286 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111122367 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069404226 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098731642 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065473599 seconds)
  done (took 3.398098829 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076161353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069777949 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070547057 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066221498 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077982874 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073929413 seconds)
  done (took 2.141341877 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066801712 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067779905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06770267 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06682043 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071859234 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067114359 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066251741 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067900864 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06819624 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067702643 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067044156 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066272899 seconds)
  done (took 2.512181379 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16140441 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07059669 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07103128 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067648091 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072183084 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067058186 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08242678 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06916672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088778151 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066971007 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067047731 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069474194 seconds)
  done (took 2.655681533 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098621971 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130095011 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096740737 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074038139 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187605699 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094798175 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.093180645 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.124053208 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094470768 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069844501 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092737506 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13676639 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099670244 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098988925 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082813687 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133747888 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111427476 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090865201 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115444555 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084919705 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071940572 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133947887 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071500975 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09409673 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102939037 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098908309 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114144422 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135367976 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085664292 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090545159 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08238533 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07543527 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106919936 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.086564275 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.099173513 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095026689 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098886442 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085725929 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08755357 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12723808 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155146988 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102117333 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101572415 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137058232 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080788705 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.117002391 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084849667 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099403468 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104661202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094323286 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076800705 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095682504 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.106233184 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102876626 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.083116111 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083026547 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119075613 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.099738006 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097133746 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083051113 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110564255 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087825281 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111238912 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267928903 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143508618 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105314522 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13994376 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12934759 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098814923 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091401848 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093624192 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078025768 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1120155 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099878604 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138081905 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111207692 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102097861 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.099300568 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084315064 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108872514 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12447503 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094889971 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099953051 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148193821 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110881083 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091770328 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092780675 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.148050145 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073055446 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148781102 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09115791 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124734 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097615275 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14006416 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096309173 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087491522 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10782796 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104291447 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090767115 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103746546 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08743982 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115295006 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093774016 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105672148 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083342195 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095703373 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088195682 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099565739 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07638141 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10541364 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116818744 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115747123 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076069016 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109538534 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088091314 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079209346 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093535022 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140290087 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085497429 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077643768 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153474907 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094355619 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11997536 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11315259 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.086799283 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276818596 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136690561 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094431943 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091321722 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078828566 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159312627 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077722333 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122869436 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084948612 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106835683 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109594001 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132997635 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139457937 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096528785 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081191093 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096714807 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.108436431 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092812376 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088025403 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079188185 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110032146 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136068242 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.108247134 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084548933 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095121928 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071060987 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116260335 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077616889 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084425813 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097929591 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.089244741 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091581641 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144376038 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.088944779 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109666799 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101273714 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068997425 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093563539 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154976098 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085375009 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.113781445 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127067109 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087003676 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070026006 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096839015 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075182804 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110706341 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.09526297 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110467672 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080190897 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109603858 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070159593 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075845203 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131137796 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103323453 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094455123 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134728078 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108620443 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091139642 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.105856231 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098375864 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09654141 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10425093 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.116582592 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260249542 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.075390762 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134591819 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09314647 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079650491 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089141663 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082209815 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080660038 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102764486 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116831132 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091236935 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10469555 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106078564 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09201464 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.113641037 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091085079 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08158589 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136194305 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078726424 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077142889 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089869211 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107457624 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090771584 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136668563 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083048813 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13825197 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098059177 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083990559 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11721555 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069987784 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071457442 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082638925 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094283374 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117793579 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081336593 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079898824 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127638491 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135704239 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102420441 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104440259 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069296707 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092227059 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139181461 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.119274536 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083203625 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112655302 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086926225 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132285116 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098423294 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123428283 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10732667 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112129514 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09290685 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.085076995 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075830257 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092708878 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113447074 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090847382 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083801822 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068932144 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076275033 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095079984 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091185415 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113640508 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090249608 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136536927 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076073207 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103602776 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108028757 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260415892 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093216125 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101331623 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096275659 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094213948 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097132446 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099026972 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076301741 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139863589 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108990995 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081438871 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094600611 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096249863 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110746064 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112457862 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121226094 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099149285 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110451491 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127844717 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10289906 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085589217 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087483514 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.095207226 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088427403 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08325642 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106297762 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114098628 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102992656 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111049815 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.098486743 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.094954686 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109094685 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095350287 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090584986 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.131378239 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156591127 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.104983078 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107389277 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087541179 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109327769 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107528131 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116158701 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112337801 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111443718 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072619313 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076791876 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072332305 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1093309 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08109247 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119367581 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078660821 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11066927 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099810843 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08353589 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068758807 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104813193 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093014618 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.085133934 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132893799 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.118950884 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07530316 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091007172 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110624111 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087277721 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138499847 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104618087 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104932861 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074399524 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094059128 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07630532 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271645551 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104926226 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08038866 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.078177037 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072663155 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1082376 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08659041 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121359422 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091911045 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105444937 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125168624 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134817856 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088957681 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103122919 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129412718 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117515795 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.085268155 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116225242 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13804422 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122728184 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083070001 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.086734743 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108197065 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107591262 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103609046 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078798685 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08224936 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11100424 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11593298 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069797134 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087182405 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072576741 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089323088 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114757771 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097299449 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084867988 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128150599 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077108983 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110293087 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097717324 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124225584 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123954354 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147596304 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100855675 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09093852 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078654321 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135346969 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072947124 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12768705 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114283381 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089368591 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072672479 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086973864 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102464732 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627281828 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110318761 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078471868 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13822797 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090111779 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11922453 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08772362 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119659912 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091962754 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105969045 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09321817 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130653613 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236790763 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113442081 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.185437477 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111803236 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110612305 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076275083 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.089205381 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077026363 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.082019779 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08392093 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090407788 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111319662 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087099867 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107900352 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.083595769 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109935747 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093440805 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091688273 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.103060747 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085251643 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142002499 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090860767 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124809172 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110113604 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081708337 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076828026 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.089220878 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105085896 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083081078 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097807343 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081337917 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.078520788 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156115114 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103361162 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090514777 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106008156 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.094932741 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088239209 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098565787 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119486187 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112908379 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075588271 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.090469049 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107963578 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081559557 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077409013 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098597512 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071386267 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090173327 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100718253 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099218081 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092454383 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104018328 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081780617 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090297136 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112536383 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088325252 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079729399 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078586818 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07856508 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.081435329 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107387787 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11144034 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116868696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111468539 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096591378 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096186407 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.081838477 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.234392942 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083602318 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250425488 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.107105993 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079112599 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.135932717 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091386312 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091690252 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099598824 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106649119 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157329284 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076883561 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113225967 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09444557 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121534998 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089005008 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110224778 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101671019 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094936511 seconds)
  done (took 52.092518318 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.09256653 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147590449 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.161599878 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080344006 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.096879675 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119167189 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209086238 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192080792 seconds)
  done (took 2.91625159 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067009316 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083705821 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103741911 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084614453 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067701094 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068371661 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.203408523 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082963601 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067401412 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107895617 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077440795 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069073387 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.374008828 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066624988 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06741254 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076157043 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067953706 seconds)
  done (took 3.533832562 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361095584 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599868226 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.326986853 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075661725 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.982308678 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089966705 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.26910739 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138390482 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080361688 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559961755 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369504532 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130386805 seconds)
  done (took 18.799236321 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074269069 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075631087 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079907012 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078932601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075065137 seconds)
  done (took 2.189785575 seconds)
done (took 102.859098196 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081012568 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.173093746 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069030718 seconds)
  done (took 2.083571335 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082011703 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082611732 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082378645 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.080457407 seconds)
  done (took 2.142218022 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073214125 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076654692 seconds)
  done (took 1.957786552 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246688732 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166908704 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093821963 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081808707 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080730502 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08181583 seconds)
  done (took 2.068257216 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070552106 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073034781 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0729339 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073221324 seconds)
  done (took 2.101468392 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066310554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067469061 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069055138 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072617477 seconds)
  done (took 2.08957703 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082547659 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084338778 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079560814 seconds)
  done (took 2.060170152 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102345828 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095502796 seconds)
  done (took 2.011875948 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078996182 seconds)
  done (took 1.893976377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087813106 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.096225625 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153514304 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114071335 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.153561566 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136870608 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.079364624 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.080199024 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074651235 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.073502954 seconds)
  done (took 2.86552685 seconds)
done (took 23.67009139 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077578858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373430391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360377524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088872762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672702403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357764283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996163146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092521369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.100632291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069206926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086501202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649423778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987957733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327676596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97285886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329876891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651167438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069115044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068366702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069603307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981417768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068439576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069397545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069030032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651764934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374640176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070302411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329485799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069168272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071271446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357301629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070976342 seconds)
  done (took 16.37217415 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068755758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122745086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074235097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085232483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071697404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071147636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072675507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069659421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111186134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069398221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086651808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069093564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074275731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071403711 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090606529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069949548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0715318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070354085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069915877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070918325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088448502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0695836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070407059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073731676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071152144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083310557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071336359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069798466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070208191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072854178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073446743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071864058 seconds)
  done (took 4.277814024 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121830442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129213686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074441216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110599098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121889589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071424503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154032068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093281649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116565775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070133987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087028074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069873091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105957307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071851364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091436995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070487684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07184042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070757265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070239188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071063682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089187254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069575629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070652246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070566519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070706952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085178601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0716073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069863752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070132106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072570066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074203831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07156239 seconds)
  done (took 4.562262429 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068396884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072996146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081556032 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081996917 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067753802 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069770566 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07081215 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067900089 seconds)
  done (took 2.417899356 seconds)
done (took 29.460324758 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07748405 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068820901 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071952815 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088428911 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074459742 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07177571 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065414607 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07447073 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071554351 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071571885 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072937549 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067620259 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07085293 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06605912 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073319207 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06743259 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074213137 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071653504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07277787 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.073681141 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069959053 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072830543 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075591019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072748904 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072807003 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072529529 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076624993 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072944085 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067905244 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070242432 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069490321 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078519404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074563716 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074248228 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067478618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067713894 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07193463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069680914 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074244732 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076743324 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069289508 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076387261 seconds)
  done (took 4.841081643 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082588414 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091894007 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083653822 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083999989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102673236 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084788225 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088153515 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080713464 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079102936 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087080717 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074916064 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082660053 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08074192 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073576254 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078854782 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075608995 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081966884 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075142202 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079817251 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079618499 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088467076 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073236971 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080335436 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08169832 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075558022 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081364529 seconds)
  done (took 3.968257741 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071642291 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08868641 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093054283 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149442508 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112581345 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082953359 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082651244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097041842 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101034007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068708286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072889836 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094194902 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096402915 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075317323 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109111581 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086595733 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08010523 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07024385 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07586159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102105785 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090507361 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08742961 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100790403 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08789265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06803228 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071037779 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075194384 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083437471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075756649 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080741712 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072563929 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071760961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06875128 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079804844 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07256784 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066755959 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089820263 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080870636 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081512084 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108374254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077492652 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069486055 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097470583 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133990009 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068000565 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07102787 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071569881 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080309752 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069017547 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096447533 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083310639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067505254 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068118341 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069039597 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069230186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084067793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069262759 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070466051 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080042297 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073660035 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087672438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072716602 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087748745 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068019752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079129542 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069115299 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069482985 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066623624 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101990448 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075175926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.119480466 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069388871 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066460528 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080208015 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079488139 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074369302 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067786988 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086574406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079615795 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07175003 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079471895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071201253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071249379 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102455758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068175519 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067082858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066325869 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070692864 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071150007 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068775787 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082178727 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067124126 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071320873 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082775726 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068003678 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068839222 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070952614 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069819181 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067253068 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081090035 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071746356 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069396495 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079989154 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06879491 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071631748 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082045829 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075845228 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067414347 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069645012 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071050385 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06941745 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072199603 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071003925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070016038 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073729639 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075286556 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073645976 seconds)
  done (took 11.106131224 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162608864 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156034084 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070573047 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146553964 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076797719 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073707383 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148512849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088733885 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068907969 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06990004 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068454049 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.097599334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.094028447 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106141352 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.074047181 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069968667 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091993777 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.102152499 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149996326 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14692182 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091765249 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076175743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071143861 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070323715 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070319405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077260581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086645779 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077364583 seconds)
  done (took 4.56372373 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075943904 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09443214 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072944763 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.080725566 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088462253 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068912975 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070823204 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070437447 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082823658 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077133921 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068821443 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073323576 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072336601 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071671049 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069545 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074713053 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075602999 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067400162 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071901595 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073798661 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078942634 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095693279 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073121168 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068738296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07082762 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068624977 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077172124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080297761 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068551071 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.084192235 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065777598 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072951777 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083254761 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069490554 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068457218 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068758655 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06896193 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069025837 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068727965 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066974184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066729549 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073719975 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067276931 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076150535 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082871443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075921194 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070307325 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071460375 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07105681 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065474979 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071249038 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071579139 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07112036 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07627517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072382799 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070552231 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069834779 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094377844 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074914025 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067872096 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067586543 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069800115 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069868563 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07839257 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085242997 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069875179 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066949539 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068970321 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074136165 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082372009 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067861369 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073450711 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065430545 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068997481 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070752011 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071404977 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069652796 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066751412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06797525 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068472933 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068575935 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068563386 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068365227 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071246089 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066442093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066811462 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068831466 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069740359 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075995304 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067239916 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071949861 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069802489 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067405846 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071071483 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074111512 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071668316 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083038855 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078905931 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06917038 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066361998 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082423997 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071167367 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067861106 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075262255 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073143209 seconds)
  done (took 9.513986408 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08992327 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070180925 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.0882885 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095369314 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079017954 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074357715 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079532829 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069536767 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085464852 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068191806 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077945927 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067435004 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079468279 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078275299 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07073414 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079196664 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071715206 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088489703 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083535513 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067755755 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077509968 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080906206 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081428364 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085494744 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085145652 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086189346 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080811454 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071554777 seconds)
  done (took 4.10453966 seconds)
done (took 39.928135584 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.909506442 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.083191642 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.910191214 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.077744214 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.999206036 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.917708645 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.172754152 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.902536825 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.012124906 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.956110826 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.190919297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.282452517 seconds)
done (took 67.314567211 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.95038858 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.068372809 seconds)
    (2/2) benchmarking "String"...
    done (took 2.13096113 seconds)
  done (took 6.040400341 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.077298844 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.505938788 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.172046845 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.900783969 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.907093769 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.365592125 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.681622561 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.348051332 seconds)
  done (took 31.721719191 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.070770278 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.138668083 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.598076447 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.642949319 seconds)
  done (took 16.335373717 seconds)
done (took 66.054193873 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.937277261 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.904948499 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.91649113 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.934390202 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.900468967 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.905111745 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.906049271 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.906236564 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.912284764 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.078922935 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.904967126 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.913602923 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.906753112 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.944136439 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.44774282 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.957912662 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.920755137 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.917768389 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.928324738 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.932513527 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.909120302 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.084536254 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.40828486 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.106106169 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.522711868 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.186378821 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.406750183 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.346219092 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.911241255 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.90156517 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.965359603 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.155532819 seconds)
  done (took 208.821306024 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.903629433 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.940277482 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.959604386 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.927146947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.313449449 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.081095258 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.982139912 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.348873532 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.909323379 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.913723897 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.036570692 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.905084504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.050337893 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.907436253 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.939620741 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.942931828 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.133868761 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.081887719 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.948206988 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.053587925 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.912767621 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.872292312 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.842630345 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.03844071 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.943310204 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.954665889 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.919901859 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.937529544 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.094567298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.110102413 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.915576137 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.951704217 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.087878149 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.774572665 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.919281632 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.928996221 seconds)
  done (took 174.325126651 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.103018947 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.911497854 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.905040332 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.963313707 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.029804621 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.911100937 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.568643454 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.9158002 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.274066748 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.913453211 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.905738957 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.904998539 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.906614968 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.905376893 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.988258736 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.919406546 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.909050955 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.920869883 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.907340035 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.931314243 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.905567211 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.904753019 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.905711705 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.90627502 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.908154982 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.905465816 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.906098143 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.219515723 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.147735155 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.909266194 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.908067158 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.414753374 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.918724756 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.148441526 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.909898589 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.999236234 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.966164746 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.01675577 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.906594245 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.905935209 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.124784916 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.981120853 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.909982639 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.907331265 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.97125606 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.919218025 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.909200223 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.910749588 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.913050311 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.971559642 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.148755231 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.90770029 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.031834627 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.387890582 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.90773804 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.907469846 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.908089716 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.496981855 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.912398989 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.908596903 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.914890787 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913716258 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.908339875 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.908816746 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.294279383 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.97970976 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.927269971 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.147666489 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.909817674 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.278593107 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.988217972 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.908242891 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.908697125 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.907629756 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.909734952 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.90856038 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.908071178 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.911302838 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.030301172 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.917858167 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.030095451 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.994457033 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.032308395 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.912565581 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.92073741 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.737314938 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.982184335 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.947249957 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.738379297 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.912545596 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.281810283 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.697890175 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.91326791 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.909797661 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.922279468 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.9101139 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.909365943 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.910556166 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.990459486 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.910296267 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.031683354 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.640610527 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.080842411 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.911082387 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.909636225 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.918352311 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.991491437 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.031818131 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.918029772 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.910527765 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.976907255 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.916337274 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.912259312 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.01909444 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.911949032 seconds)
  done (took 415.329571815 seconds)
done (took 802.480349021 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.480259342 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.453316515 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.544136317 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.469505904 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.441095127 seconds)
  done (took 14.237461287 seconds)
done (took 16.08449866 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.926170668 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.917043098 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.967636032 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.993375699 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.927504892 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.929160374 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.99009674 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.930580426 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.960100907 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.964980237 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.993730638 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.996442661 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.935744516 seconds)
  done (took 27.281901581 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.92007124 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.063415221 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.146083217 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.951655428 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.921525782 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.147138639 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.976321338 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.055204479 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.060988546 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.151508829 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.151792234 seconds)
  done (took 24.398758315 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.919960257 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.065337939 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.159985882 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.955146069 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.922256737 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.154772226 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.983715892 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.05811555 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.065395371 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.155361306 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.160782679 seconds)
  done (took 24.458832484 seconds)
done (took 77.986966623 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.916848404 seconds)
  done (took 3.768272015 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.936671205 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.079142464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.918397692 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.914563907 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.917121811 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.918287656 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.914520965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.917544027 seconds)
  done (took 17.367969166 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.915308139 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.91562592 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.915870286 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.915571295 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.91616784 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.915643665 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.916833177 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.916112293 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.916165799 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.916253123 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.915804019 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.916578728 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.917286361 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.915709115 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.917330208 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.916315607 seconds)
  done (took 32.511373497 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.918648492 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.91567451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.916369698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.917022607 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.915533706 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.91700515 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.917120236 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.918125452 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.915971369 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.916688998 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.917182078 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.916072177 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.917128738 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.91705808 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.917080102 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.917584913 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.916922952 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.916661091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.922666372 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.917601427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.917735802 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.916877123 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.917725399 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.918154739 seconds)
  done (took 47.868229902 seconds)
done (took 103.372769494 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.609819038 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.72467522 seconds)
  done (took 10.187788902 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.917752329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.91895065 seconds)
  done (took 5.694379207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.919106248 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.918828459 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.91898398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.918426899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.918387378 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.918870176 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.918826438 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.918845884 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.918562216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.919132399 seconds)
  done (took 21.04267278 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.918570526 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.918395613 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.919228688 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.919207669 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.918751757 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.91828788 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.919402114 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.919971316 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.919757979 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.921735039 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.918659675 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.919254617 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.919644467 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.919523162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.919757329 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.919280456 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.919506695 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.919198151 seconds)
  done (took 36.402634476 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.919629634 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.919991733 seconds)
  done (took 5.694058775 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.919642571 seconds)
    (2/7) benchmarking "second"...
    done (took 1.920376902 seconds)
    (3/7) benchmarking "month"...
    done (took 1.920677921 seconds)
    (4/7) benchmarking "year"...
    done (took 1.9221625 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.920060685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.920103151 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.920023888 seconds)
  done (took 15.298136376 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.921392694 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.071797426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.127406919 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.719264504 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.922367126 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.923710751 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.238951057 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.924931794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.926237462 seconds)
  done (took 21.632116909 seconds)
done (took 117.804211444 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.702934738 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.922402364 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.152794097 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.973332144 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.942194207 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.222031618 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.95221016 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.573666963 seconds)
done (took 43.2985258 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.019476916 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.918309445 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.949267749 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.949505218 seconds)
  done (took 22.674232801 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.919951136 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.257753911 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.959598204 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.765123201 seconds)
  done (took 22.779595648 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30170372 seconds)
    (2/2) benchmarking "read"...
    done (took 2.263739411 seconds)
  done (took 6.427227176 seconds)
done (took 60.757037813 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921925823 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.922714326 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.922621865 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.922658492 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.921330452 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.921469976 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.922479323 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.922908048 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.921985218 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.921631054 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.922556585 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921887794 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.921882482 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921300222 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.922166077 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.922501736 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921886168 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.92180256 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921871342 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.92253255 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.922956976 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.922641373 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.925978322 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.92274303 seconds)
  done (took 47.994927135 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.922758878 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.922811514 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.923260133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.923063513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.923100554 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.922771464 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.92290492 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.923195516 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.922924406 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.923975327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.923984095 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.923707188 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.924492846 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.926460226 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923602864 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.924623328 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.924285166 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.924899453 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923301375 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.92501536 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.924395209 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.92542276 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.923202593 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.924055334 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.924290119 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.923988351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.924361224 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.924361901 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.925438503 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.925052938 seconds)
  done (took 59.57910836 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.924992489 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.924108711 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.924308043 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.924948451 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.925529967 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.925412052 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.925555475 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.925332793 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.924312279 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.92526723 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.925560254 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.924401287 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.925218823 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.927936037 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.925634736 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.925462128 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.924314299 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.925236698 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.927015229 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.925575047 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.924741338 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.925588789 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.924972755 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.925758205 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.926438135 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.92561082 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.92610662 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.926613716 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.926087327 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.929626456 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.926460581 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.926137575 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.926419295 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.927180696 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.926853966 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.926949581 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.926608156 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.926596448 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.925832577 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.927473898 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.927393709 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.927462923 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.927662081 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.926686366 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.929502376 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.927543241 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.927212628 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.928080659 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.927710301 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.927608017 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.928116793 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.92740333 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.927672832 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.92696848 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.928234446 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.926949884 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.927057383 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.927087313 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.928496542 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.928427272 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.930476852 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.928120651 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.927530356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.927931095 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.927872431 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.928173726 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.927873093 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.92828065 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.927898817 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.927578 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.926481475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.927811544 seconds)
  done (took 140.586809754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.928212023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.929762996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.928116694 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.928136466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.929148392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.927978107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.927662782 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.928971105 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92839079 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.927647602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.928955118 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.92819774 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.928346354 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.928398011 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.929266988 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.929208715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.930050006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.930358667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.929828362 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.929781144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.930312666 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.928937747 seconds)
  done (took 44.300132897 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.9292422 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.930323289 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.928818264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.930532435 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.930006344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.93061367 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.930445771 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.930149438 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.93050771 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.930405632 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929745484 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.932374758 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.929856802 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930219989 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.930153526 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.930051247 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.930991259 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.931087668 seconds)
  done (took 36.611310332 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.930249918 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.930238017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.930580398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.930188356 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.930893663 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.930385594 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.930076255 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.930820237 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.930506819 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.930612956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.931562877 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.93107509 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.931337053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.93185404 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.93042596 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.931582831 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.930175448 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930896477 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.931543201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931661886 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.932126526 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931502837 seconds)
  done (took 44.346664164 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.93436863 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.932740479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.933012889 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.932757251 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.931559053 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.932423253 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.932770628 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.931540606 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.932089149 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.931760365 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.930952506 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.930831573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.933186544 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.932037434 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.931639862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.933136836 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.932798416 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.933770953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.932410966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.9328753 seconds)
  done (took 40.516266993 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.933959336 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.934163691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.93483136 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.934404786 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.933712854 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.933253319 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.933711227 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.933758236 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.936240323 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.934483511 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.936429104 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.93437333 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.934310392 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.934244986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.934221002 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.934704268 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.934436968 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.935193368 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.934389432 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.935361615 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.934641727 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.934797941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.934229583 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.933206662 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.933689255 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.934593765 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.934517571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.934709543 seconds)
  done (took 56.034178899 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.933283072 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.933942193 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.933813736 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.93509926 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.934875179 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.934525593 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.934969741 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.935405498 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.934501646 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.934960216 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.935430911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.934464568 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.935124331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.934898025 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.93548598 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.936331131 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.935020783 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.935743024 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.93551108 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.936699233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.936026072 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.935341682 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.936069933 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.934984628 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.935488543 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.935822155 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.935280964 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.935247622 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.936250954 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.935342557 seconds)
  done (took 59.926361467 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.956868598 seconds)
    (2/2) benchmarking "in"...
    done (took 1.956568274 seconds)
  done (took 5.78384347 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.93592625 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.935181197 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.936220186 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.935601457 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.936226935 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.93662914 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.936709815 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.93612124 seconds)
  done (took 17.359972601 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.937200879 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.940737835 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.935780619 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.936676864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.936171275 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.9458946 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.937583919 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.93909619 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.939339771 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.937615705 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.942338288 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.940576239 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.945118927 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.942974962 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.937818416 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.938828083 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.941241869 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.942596495 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.940182385 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.938029565 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.94201284 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.938359242 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.938166741 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.938449809 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.938806009 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.940760589 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.949064172 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.939562443 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.940733958 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.938339654 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.946281334 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.939534939 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.938881013 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.940849026 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.938880399 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.938940607 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.946710571 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.939092794 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.939052201 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.938020121 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.940717329 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.941570171 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.942836711 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.948493435 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.939619489 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.939653183 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.938552393 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.941002795 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.939328814 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.943191428 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.947517556 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.940777343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.939215623 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.939065629 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.943129648 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.941038432 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.94004765 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.94286858 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.947339966 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.947556312 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.944817121 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.961544226 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.950382703 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.940719904 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.940743463 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.950763877 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.962701249 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.943538592 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.942966331 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.940912355 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.948645674 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.940989859 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.941024654 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.940951346 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.954935442 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.949672086 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.942385714 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.940795751 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.941836861 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.941468167 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.943255537 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.94280687 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.94219869 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.940769662 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.951933442 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.967489239 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.942052469 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.941963556 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.943846312 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.942601021 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.945772226 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.944789712 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.941192053 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.944154113 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.943892449 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.94443205 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.941462724 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.942255777 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.941507449 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.952269609 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.94254012 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.943534061 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.946117821 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.95034998 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.942134086 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.942599998 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.944010165 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.942909377 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.953305947 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.944640995 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.942612456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.94276429 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.943883457 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.947573718 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.942358387 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.946957241 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.951191818 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.952106628 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.945056064 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.948726148 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.947748089 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.946097526 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.95410169 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.967427154 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.946870828 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.948628342 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.950052626 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.956328751 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.949432124 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.945301292 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.946315752 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.944435979 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.944078133 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.947515492 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.944337385 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.944766549 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.943886239 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.944395294 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.944929378 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.945527292 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.947135417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.946328857 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.946784435 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.944615002 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.949408964 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.945606525 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.948180452 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.954857751 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.945808239 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.946058794 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.944715097 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.948312382 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.945532101 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.946699954 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.945866092 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.946759388 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.945377765 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.946059549 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.948585358 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.945745422 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.945640667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.946576224 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.950253773 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.946298647 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.94636496 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.946344602 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.946846069 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.946397969 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.949220885 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.946801035 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.952578834 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.946850548 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.951446511 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.945376287 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.946649856 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.948169162 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.947466657 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.946636765 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.951400691 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.958771887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.950617342 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.956697134 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.946985221 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.956575916 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.948005321 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.9490888 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.950462991 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.948060708 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.948533266 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.947224214 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.946927385 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.952536446 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.969868238 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.958698718 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.951855231 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.949493135 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.952791899 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.951313403 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.952944066 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.947932525 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.94920732 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.954650544 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.947782366 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.948858409 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.948959756 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.952200745 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.947597539 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.948453562 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.952195369 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.948586671 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.948108255 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.94976454 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.948847372 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.950870093 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.947942343 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.947834689 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.949024506 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.949242008 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.957708518 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.951750844 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.949063649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.950935653 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.95248505 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.950645834 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.948772177 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.952846764 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.955203841 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.94823248 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.951597651 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.959736653 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.950212674 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.949135512 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.952143297 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.950306678 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.952147818 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.950452538 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.954698104 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.957629503 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.954016729 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.950926971 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.956006612 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.949536456 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.953604395 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.950304993 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.952403158 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.949917101 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.952173459 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.952632261 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.95138234 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.959823818 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.950210233 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.951882122 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.949431978 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.953679282 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.951998877 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.952876604 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.950683685 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.955215852 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.95838278 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.958569175 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.951321259 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.955332313 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.953968597 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.953746191 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.954727544 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.952647014 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.964627952 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.961798619 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.951316309 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.95086138 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.952390644 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.955885262 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.95268661 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.951921043 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.961923287 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.952745328 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.953766813 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.956513485 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.954956511 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.951681266 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.959506291 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.953119162 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.955190149 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.953651125 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.953654955 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.954480683 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.952927783 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.956068225 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.952928934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.955968689 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.956026106 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.952710307 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.953572795 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.953800085 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.963890095 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.953802802 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.954124235 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.961934599 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.954695174 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.952496657 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.955126902 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.953176199 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.955586043 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.955817921 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.953048925 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.955608955 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.953477338 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.957119876 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.965735271 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.961279451 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.961766318 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.955967394 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.967157469 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.954895467 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.953250101 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.954066652 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.959201764 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.961975197 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.953794872 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.954860767 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.962962212 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.958157062 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.956235501 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.959843929 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.95693235 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.954912831 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.955355788 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.955891095 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.960453709 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.959143973 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.954790353 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.955704308 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.954701633 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.955563808 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.959970062 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.957730379 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.957724632 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.957094641 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.955224378 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.955563619 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.958116665 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.95621638 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.956145835 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.955138634 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.954760816 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.964116388 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.955871414 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.956741538 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.960252812 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.956573731 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.967034863 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.956870097 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.956727178 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.957176213 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.956161396 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.961318857 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.956412276 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.955733012 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.956254821 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.956888423 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.957241347 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.970029132 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.964766656 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.960490223 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.958465233 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.956986857 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.958604503 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.967232289 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.979562257 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.956372059 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.961722539 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.961701594 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.965060155 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.959809389 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.962533908 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.961932811 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.965406086 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.959455299 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.957566684 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.961484031 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.97129759 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.959079109 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.95782504 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.957498947 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.963092913 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.960970474 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.961910254 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.959690733 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.961803315 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.959419064 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.971693904 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.958103165 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.958819365 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.959382079 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.957598696 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.95817462 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.957756175 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.961384652 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.960308057 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.958569001 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.958999711 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.962896647 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.964130644 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.956882588 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.96322356 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.968217617 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.958951157 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.958220322 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.961456364 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.959424263 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.961010902 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.960151187 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.959277973 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.961132204 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.959441887 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.959596575 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.963999916 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.969401885 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.961458512 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.958758842 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.958414503 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.963950871 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.958793765 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.959660679 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.962107715 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.970219164 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.964859157 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.970975557 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.969780005 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.960162595 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.960600133 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.968800453 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.969603485 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.961206897 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.960565515 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.961350519 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.963862629 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.963734751 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.962496459 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.961788715 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.962291153 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.967761828 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.960786216 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.961230625 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.961884522 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.960832013 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.963081533 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.965356603 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.966574549 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.960690673 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.960250683 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.960797558 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.962264556 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.963136109 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.96564559 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.961698184 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.962196973 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.964986469 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.964228451 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.965387595 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.961466957 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.961623115 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.964490811 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.962009025 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.96193472 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.962594033 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.961771253 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.962249421 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.965833132 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.969351228 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.962765562 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.963911636 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.963119319 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.967695017 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.96255427 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.964018001 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.963043847 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.964041908 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.970985111 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.962418026 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.963067302 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.963689277 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.963547729 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.97013109 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.965454589 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.96889029 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.963610308 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.963606114 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.964813888 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.968750949 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.972492061 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.968298802 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.967665455 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.9714406 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.968584835 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.966033899 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.963006109 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.963621363 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.965033563 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.963427986 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.967255322 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.964359595 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.965815624 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.963645906 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.963782228 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.96221382 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.96387695 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.960971733 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.963292078 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.966804643 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.971640149 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.97354324 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.962772724 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.963027219 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.962586547 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.96602607 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.973602302 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.96279316 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.961997569 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.962401674 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.963892723 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.963417913 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.970511142 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.973634409 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.967626543 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.96368493 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.968410362 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.981428426 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.965234989 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.973495112 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.996319433 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.964608526 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.962881477 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.963992176 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.963599038 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.962955905 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.966509871 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.96335591 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.971769333 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.964443631 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.963686691 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.973185078 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.96413294 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.964151985 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.964071157 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.9651784 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.971008975 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.963882921 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.972828834 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.964014071 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.964397243 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.96414961 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.966567827 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.963614456 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.965851339 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.964113936 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.96733655 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.964180787 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.96462139 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.97510521 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.965332159 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.967229183 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.979162314 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.976577357 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.965715863 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.965929937 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.965097241 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.970948132 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.967621117 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.965521815 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.969822313 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.973763376 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.970312323 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.973813041 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.966839207 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.967246452 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.966172277 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.96581481 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.965945338 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.980471444 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.978040506 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.966081057 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.967500594 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.973864818 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.966738495 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.974131972 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.974452154 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.967129259 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.969031942 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.967658449 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.967343309 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.967660457 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.966888429 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.971450576 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.974741397 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.967698751 seconds)
  done (took 1167.461217453 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.966523113 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.966116712 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.966153842 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.967451586 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.966162196 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.967300636 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.966955675 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.967702137 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.966423545 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.965967257 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.966687188 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.967054176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.967671551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.966794456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.96728329 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.966438995 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.966567397 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.967256962 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.969015726 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.96807344 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.96665975 seconds)
  done (took 43.20725385 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.968074167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.966827314 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.967461674 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.967209992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.967900169 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.967507351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.967467608 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.967717179 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.967854605 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.968168257 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.968238788 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.968452739 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.968853331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.968243668 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.968717115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.968623512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.968666468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.967933544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.968788855 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.968472502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.969353215 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.969126244 seconds)
  done (took 45.202468989 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.968499411 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.969034827 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.969831431 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.969728717 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.971009667 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.970058977 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.969782266 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.971134864 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.970055145 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.97116562 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.977703002 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.977421368 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.96983128 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.972614914 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.970019716 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.970013677 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.11651334 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.970622823 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.970269704 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.97156626 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.970113243 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.977626312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.970746637 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.97040924 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.970743584 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.970655561 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.970792452 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.971450511 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.970427545 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.972295701 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.974947451 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.970325413 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.972926371 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.97422177 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.974336973 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.972643102 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.975341151 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.970291352 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.970886202 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.971138792 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.979925914 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.994602466 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.971540561 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.97156162 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.981839312 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.972440923 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.972294817 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.97571873 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.980617286 seconds)
  done (took 98.714459977 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.973079133 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.971722121 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.971303917 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.972786155 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.97139595 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.972663607 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.972657608 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.971698498 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.971901018 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.971892823 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.971276399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.972606974 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.974221268 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.974721549 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.973539979 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.972640803 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.972666539 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.972585641 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.972470885 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.973121242 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.972948736 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.972556093 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.972644492 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.971922588 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.97278129 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.972482167 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.972485163 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.974051941 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.973685497 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.973290452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.975745184 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.973806305 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.973540049 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.972613717 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.973165164 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.974024494 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.973199791 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.973935645 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.973847713 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.974120301 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.973617904 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.973836511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.973193261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.973224805 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.973622788 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.976290241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.97450387 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.97346382 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.975810358 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.974057228 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.974113522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.975465224 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.975078606 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.974486519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.975058184 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.974946046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.974241158 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.975557936 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.975158217 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.974089641 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.975479988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.974354287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.975044589 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.973947759 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.974096848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.975051805 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.976251749 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.974508711 seconds)
  done (took 136.114403823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.975819661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.975192967 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.97536797 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.976112856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.97657153 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.975336093 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.977259747 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.978656289 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.976204583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.976068887 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.976752324 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.975637858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.976770404 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.976030683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.976633556 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.97642907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.976890646 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.977164182 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.976590041 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.97729983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.977078717 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.976251372 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.97780724 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.97746049 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.977767143 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.976984851 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.976948222 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.976966855 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.977288772 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.97677383 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.976990863 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.976761807 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.977051022 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.977922359 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.978945576 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.978145481 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.978186841 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.981047335 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.977317211 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.977435581 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.978277476 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.978060256 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.978270789 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.977728155 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.978377402 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.978382267 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.978258395 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.978469349 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.978159589 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.977501555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.980457866 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.977708674 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.979287624 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.978366645 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.97764089 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.977877734 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.978988841 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.978540923 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.977690732 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.978240914 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.97833193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.977816517 seconds)
  done (took 124.514373752 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.978653478 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.978154273 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.97952736 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.978784626 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.981451288 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.979795329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.978562089 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.977920104 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.978079393 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.978249302 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.979306155 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.978831877 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.980116612 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.978365677 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.97888468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.980907944 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.978938131 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.979338514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.980162317 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.982268359 seconds)
  done (took 41.499049793 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.979148923 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.980691666 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.980631215 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.980626041 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.979790615 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.980046851 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.980335743 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.980461384 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.981006014 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.98103745 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.980537817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.980670227 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.981286766 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.980195157 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.98194288 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.979597773 seconds)
  done (took 33.60241536 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.980406971 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.981071868 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.98073016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.98139592 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.980352604 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.980139142 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.981187017 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.981308777 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.980868869 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.98122568 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.981453206 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.981583095 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.983364773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.981865219 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.980360891 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.981427727 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.981576614 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.981805853 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.980650352 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.981979201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.982292106 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.982140258 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.981239742 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.981602497 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.981083152 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.981747332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.982646397 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.984513363 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.981815728 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.982572049 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.982462173 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.983121838 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.98188153 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.982528252 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.981981543 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.982263423 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.982626837 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.982844916 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.982529966 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.982469227 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.982568795 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.982605999 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.985454603 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.982429369 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.982675308 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.98301945 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.982205287 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.982434694 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.98255319 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.98249288 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.983517402 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.983733317 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.982882436 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.982532701 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.983045121 seconds)
  done (took 110.931489354 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.982854178 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.9837885 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.983246626 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.983458116 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.983354737 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.983293899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.982779505 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.983518695 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.983905831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.983172326 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.983254036 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.983484616 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.984598217 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.983382276 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.983981964 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.984231385 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.985471924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.984718405 seconds)
  done (took 37.623652476 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.983700951 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.984497161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.984198915 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.984703377 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.984796544 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.985384872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.985034474 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.984979849 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.986191384 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.985469352 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.984567293 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.985702942 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.985816851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.987219987 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.985958145 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.984756097 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.985129222 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.985459553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.985417632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.985064497 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.985648704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.985313588 seconds)
  done (took 45.593121612 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.985819793 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.986200305 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.000456729 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.007003937 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.005001447 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.020978093 seconds)
  done (took 13.924469352 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.986103154 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985515897 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.985623415 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.986438122 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986379312 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.985817299 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985851902 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985843183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986946179 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.986192935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.986056884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986390971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.986093913 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.987597284 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.987101512 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986701236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.986873365 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.986729946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.985494181 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986343291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.987226327 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.987588907 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.986665972 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987541253 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988927899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.988128061 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.988112173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986751538 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989947584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987611385 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987380176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98736143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98793194 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988696537 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.987378237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986759776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987672007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.987786571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987152455 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987254873 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.988240467 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.986843062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.987647578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989072757 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987876136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988313389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988204401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.987977391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.98821678 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.989415135 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989500523 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987998176 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988518085 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.988353559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.989536479 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988702765 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.988795381 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98910709 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990433345 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988874894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989154698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.988327647 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989015827 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.98917425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988392179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9891516 seconds)
  done (took 133.106152813 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988893577 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.989628908 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.989330288 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989031898 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.99001855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988977573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.990186375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989308677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98905952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.98847408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.990582415 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.990082045 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990026579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.990029055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.989824892 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.990151421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990247963 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.991316584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.990526328 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.991008513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.989708556 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.992003784 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.991068332 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991406916 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.989499223 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.990383055 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.991371578 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.990912218 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.990804546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.990254808 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.990460823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.99045185 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.99094086 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.990778227 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.990685831 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991148396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.991745361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.992391646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.99167652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.99083759 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991204514 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.991850571 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.991931446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991977346 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.991699443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.991496834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.991735906 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991108951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.990828853 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.991486428 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.991340722 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.99231719 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.993648853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.992116416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.991827016 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.992282187 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.992274487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.991971334 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.993240052 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.992065803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.993290777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.99523749 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.993316498 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.992616089 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.992197049 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.993448964 seconds)
  done (took 133.338372453 seconds)
done (took 2719.736222931 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.05937811 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.242119402 seconds)
  done (took 16.228655401 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.160289845 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.111654525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.995794762 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.020104496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.996626075 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.001774559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.997593261 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.995299479 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.99486533 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.994601376 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.994744132 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.189419108 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.998765405 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.992660472 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.992171982 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.087050279 seconds)
  done (took 54.453184979 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.997967434 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.998195236 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.008476371 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.999920302 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.995990157 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.014799014 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.029829602 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.002060895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.058590426 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.011998559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.118486767 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.008332739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.995889153 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.065146861 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.007866095 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.009370572 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.09092826 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.079256807 seconds)
  done (took 38.416009073 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.074527619 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.009227183 seconds)
  done (took 11.012264065 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.017633442 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.005231693 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.007800028 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.988697583 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.994875629 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.022637935 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.005735161 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.002303469 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.01832975 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.009200748 seconds)
  done (took 71.996812548 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.994142764 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.994011458 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.994950705 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.988725435 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.988036929 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.993310097 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.990184055 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.992114334 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.702570922 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.032123445 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.000507525 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.99780707 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.989093494 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.991439808 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.988294027 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.017309918 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.098224481 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.985678873 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.986263107 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.996159652 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.989682722 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.045547084 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.005223639 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.991941073 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.026493142 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.695284988 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.002159793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.995600152 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.095756383 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.987925609 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.991527725 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.175021177 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.995680476 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.44584278 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.273087211 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.997253103 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.00131219 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.998116597 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.987950449 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.10070754 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.991899748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.995923346 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.919056937 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.244093196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.087847787 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.03726551 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.342383926 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.99359714 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.991258352 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.025894019 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.99508059 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.99249083 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.008050376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.504144538 seconds)
  done (took 139.574299655 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.987910496 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.336881421 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.153406124 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.989362129 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.272043146 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1935961 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.990822805 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035056782 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.9913591 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.219607951 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.247825554 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.093091312 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.990486947 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.988961998 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.989533878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.988019439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124183848 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.059923449 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.991855378 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.987758463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016953435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229412043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.110176226 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.99230946 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.014642816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.198424491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.112798736 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.092432984 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.761141891 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.987897776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.051086942 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.990845043 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.992421555 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.987612195 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.141776374 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.083257324 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07542935 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.99353181 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.989043044 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.989589874 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.73889574 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187491998 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.083801262 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.109808898 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.242176953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.194833684 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.767252101 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.98936907 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.721032494 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.150383393 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.217393738 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.223959187 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.109369807 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.992397009 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.328217306 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.988688303 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.990829114 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.237218788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.213997792 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.088967195 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.994728253 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.992838557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.989454129 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279198915 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.995585572 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.085171624 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.993530397 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.992996078 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.086717541 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.08847298 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.219257138 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204353994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.020489725 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.339425179 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.48836901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.235898303 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.056473839 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24232875 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.994549751 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.992287065 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.068413454 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.831057193 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.243318072 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.273501436 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237099728 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.025804003 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.713009461 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.991636991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.216757529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.215621248 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.242076022 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.238363429 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.23145939 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.306921817 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.992101352 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.992938613 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.249600325 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104879953 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.99632709 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.333524094 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.221734144 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.543172482 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.018927339 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296388872 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122221852 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.99632094 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.628043943 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.991392987 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.215687616 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.032750275 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.99521925 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.992173271 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.212016563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.964802295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.996428185 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.664616807 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.05357199 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.996069363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.228306323 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.996127123 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255425336 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.998467386 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.223539911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.411665572 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023693454 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.166571367 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.240372668 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.997347997 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235662275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232597682 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109598242 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.215438017 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.683988979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.993813266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.282361395 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.997744801 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.994221446 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.163770383 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.996415078 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137268514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.998673723 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.277252532 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017768747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.223220676 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.998557025 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251594843 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.027450516 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044851616 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.999694227 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.124378584 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.995723972 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.924313026 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.151270956 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.997791686 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.996796073 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.554781182 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.99727099 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.144279526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.219774757 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017269014 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.067099104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.657849311 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.995303274 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07394434 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019059793 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.39238332 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.99842654 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.24962575 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.001167487 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.996242342 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.996255107 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.280297283 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.17908398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.001106884 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.996405003 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.893432162 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.997289471 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.996677798 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.17854367 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.341993689 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.996126799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.19668204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.000738149 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125112152 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.001785633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.063352897 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.331446293 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.997333428 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.997044542 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.997141046 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.99699556 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.997407271 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.208190891 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.02570971 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.515591101 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.134291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.264818305 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.307999248 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.23682737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.041435327 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.003086993 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.257237985 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.002188481 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.06001382 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.0009969 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.018191751 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.228585385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.003759386 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.206398026 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.268519833 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.848137729 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04581788 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.004939662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.001964716 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.998365673 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.139650744 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081450829 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.001350184 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.999106565 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.114311142 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.121479612 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.209883414 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 7.000833632 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.082901385 seconds)
  done (took 930.685867303 seconds)
done (took 1264.292710907 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.000569049 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.000086757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.002859951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.003250611 seconds)
  done (took 29.940235143 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.003399025 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.000720825 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.002007959 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.001573534 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.00306628 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.000943327 seconds)
  done (took 13.946556688 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.064140648 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.00084556 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.005045996 seconds)
  done (took 22.003693966 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.078299822 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.426808916 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.152142767 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.444000744 seconds)
  done (took 11.036814981 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.002258543 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.002177604 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.002134529 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.004358183 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.002940775 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.007253955 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.002462371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.003834382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.004372914 seconds)
  done (took 19.967917894 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.069181647 seconds)
done (took 102.896734647 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.260928322 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.108251648 seconds)
    (3/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.126828882 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.0978355 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.071807745 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.387518474 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.105131675 seconds)
    (8/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.01756104 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.002188935 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.856842261 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.072405125 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.244730958 seconds)
    (13/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.788020784 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.111162231 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.640643061 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.310778012 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.027863539 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.702874308 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.88346647 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.399736253 seconds)
    (21/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.703539567 seconds)
    (22/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.327561039 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.009917785 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.179168571 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.103295953 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.229361568 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.02791825 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.262654388 seconds)
    (29/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.467618412 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.143195333 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.013866835 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.104422153 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.093712659 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.131949163 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.005127398 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.279824355 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.005079486 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.382309501 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.980588347 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.295608072 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.281455652 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.237717607 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.09532213 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.015071039 seconds)
    (45/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.100775756 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.004603962 seconds)
    (47/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 4.742842687 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.42469144 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.221016707 seconds)
    (50/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.317679438 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.031132873 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.11695534 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.666657902 seconds)
    (54/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.481192584 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.193879331 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.258667813 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.004176896 seconds)
    (58/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.413890849 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.1595348 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.026272003 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.006826108 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.131036756 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.008670782 seconds)
    (64/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.148966089 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.005188211 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.766515504 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.262639111 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.18889651 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.182890161 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.853635 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.109926012 seconds)
    (72/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.224475006 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.785391922 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.283128893 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.120775879 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.346004373 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.252398069 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.148466468 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.014919417 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.021815492 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.75526336 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.322392327 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.324783083 seconds)
    (84/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.185155526 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.149634891 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.093367905 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.021588411 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.858308342 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.427931371 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.316801234 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.556490231 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.420919338 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.485170636 seconds)
    (94/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.094326156 seconds)
    (95/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.167954735 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.323218832 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.74613911 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.132936961 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.400739367 seconds)
    (100/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.405656578 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.313843379 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.024742267 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.1033316 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.12649062 seconds)
    (105/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.160495642 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.327487305 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.365268212 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.285461141 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.417570962 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.208512627 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.302572926 seconds)
    (112/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.525716312 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.028142566 seconds)
    (114/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.897779076 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.034995044 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.023983839 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.331068933 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.121143976 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.102842879 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.857116653 seconds)
    (121/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.280652485 seconds)
    (122/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.011060722 seconds)
    (123/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.022699549 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.00644808 seconds)
    (125/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.087618442 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.105522786 seconds)
    (127/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.021941263 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.033760267 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.25461367 seconds)
    (130/309) benchmarking ("sort", Float64, false)...
    done (took 5.710590192 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.885617872 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.01260394 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.177222205 seconds)
    (134/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.160769392 seconds)
    (135/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.08290314 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.262763544 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.279067164 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.221978836 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.204956849 seconds)
    (140/309) benchmarking ("sort", Float32, false)...
    done (took 5.677054579 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.009151703 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.330922005 seconds)
    (143/309) benchmarking ("sort", Int8, false)...
    done (took 4.967514457 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.666492185 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.046693117 seconds)
    (146/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.166285139 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.154926529 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.133249186 seconds)
    (149/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.005501126 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.559574757 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.006558311 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.879589407 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.048058773 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.021402216 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.604323365 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.360483429 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.030352684 seconds)
    (158/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.011223041 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.08575321 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.091050385 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.06851529 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.006160309 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.668132699 seconds)
    (164/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.764155216 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.146102041 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.143965722 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.329560337 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.01532524 seconds)
    (169/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.270267142 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.013122099 seconds)
    (171/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.166938995 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.104679655 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.036341294 seconds)
    (174/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.030825281 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.006473861 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.330437637 seconds)
    (177/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.980130521 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.501273066 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.036279604 seconds)
    (180/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.086713697 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.477331361 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.015709849 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.011336127 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.086880108 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.010714824 seconds)
    (186/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.516834295 seconds)
    (187/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.21387234 seconds)
    (188/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.087850533 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.173797446 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.220129966 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.332174313 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.155259458 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.014500392 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 4.031299851 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.009070261 seconds)
    (196/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.541757189 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.009620567 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.167595825 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.073575748 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.406999462 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.237077533 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.109479061 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.964632908 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 7.108365914 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.249021317 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.140228098 seconds)
    (207/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.299391307 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.018240952 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.194745929 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.329354576 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.763344704 seconds)
    (212/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.329419135 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.00979496 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.161642606 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.009656423 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.951648372 seconds)
    (217/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.795698101 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.509384721 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.0346478 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.418210882 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.034621995 seconds)
    (222/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.764476784 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.887656509 seconds)
    (224/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.720991943 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.256426391 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.140064387 seconds)
    (227/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.096743356 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.195117684 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.935896091 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.429818138 seconds)
    (231/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.354044426 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.37882693 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.482651337 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.195406411 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.01619102 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.098293486 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.616247807 seconds)
    (238/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.103057588 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.134205799 seconds)
    (240/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.142108949 seconds)
    (241/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.484597443 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.113335307 seconds)
    (243/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.049066248 seconds)
    (244/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.460351756 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.233022677 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.150040275 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.046158645 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.426101129 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.020412981 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.335232669 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.734844164 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.185534688 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.110246506 seconds)
    (254/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.225780814 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.118988701 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.078647716 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.115332535 seconds)
    (258/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.035075074 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.120251535 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.15283828 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.011396722 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.94525482 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.106119134 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.203375405 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.140083699 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.111170727 seconds)
    (267/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.399356065 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.087491442 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.274743136 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.018289066 seconds)
    (271/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.145269363 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.022622716 seconds)
    (273/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.228540492 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.129400117 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.013140291 seconds)
    (276/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.417563608 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.306159359 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.092032843 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.147891744 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.012435268 seconds)
    (281/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.16975241 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.415022893 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.362048845 seconds)
    (284/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.654789964 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.117528111 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.354985495 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.075925488 seconds)
    (288/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.488229577 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.932224845 seconds)
    (290/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.144969731 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.181283364 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.423562731 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.998547707 seconds)
    (294/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.145174749 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.143497742 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.696483211 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.108175182 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.28971969 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.016710887 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.414473135 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.084688883 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.043412253 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.014056855 seconds)
    (304/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.016568485 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.313798292 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.076670356 seconds)
    (307/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.334899201 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.9117205 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.023839364 seconds)
  done (took 1056.940122387 seconds)
done (took 1058.940914111 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.220160172 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.039836994 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.020269366 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.044349993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.135225018 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.064727663 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.034021226 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.024936946 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.071827142 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.071414624 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.020312501 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.062336548 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.022461284 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.021679015 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.022148905 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.040504987 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331464449 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.056188206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.04478508 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.034889745 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.04020533 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.020170283 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.07215816 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.061956557 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.027763565 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.027741948 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.025306634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.041017599 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.13592702 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.026167267 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.027525535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.037927718 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33431324 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.054487266 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.021149245 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.042996012 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.035194873 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.036279158 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.027280486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.056715961 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.482981115 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.030188392 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.024833627 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.024729387 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.023890225 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.030761494 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.024849452 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.034472993 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.039431548 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.041498236 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.478021347 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.046827293 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.027162365 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.024755248 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.037598401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.024077794 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.028961537 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.043196025 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.044001015 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.042815668 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.321020796 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.067234005 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.028601177 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.043658936 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.03487419 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.513378911 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.030646106 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.032438992 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.483392178 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.039394418 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.514429942 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.043091129 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.027995605 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.041230376 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.059139569 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.334058496 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.055031082 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.024932529 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.035702726 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.02493015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.038883986 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.042065689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.03168099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.025153652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.042661554 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.068456017 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.0390038 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.02845518 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.039163258 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.04610848 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.038388546 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.039348528 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.03056742 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.025957883 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.04168885 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.031552521 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.030463505 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.029171687 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.031714025 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.041230835 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.483198133 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.052466958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.024779521 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.024181918 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.028581495 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.043270958 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.482577901 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.035647515 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.049091089 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.07731459 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.028610629 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.321728756 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.063096133 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.045739395 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.03942793 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.03002728 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.026265286 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.323332107 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.515915263 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.051691905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.028134848 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.026902609 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.045811102 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.029426223 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.025610894 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.337453896 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.064033398 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.046855125 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.151581245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.043086446 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.061800762 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.027033049 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.033173012 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.076620107 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.046914 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.06358792 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.031917656 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.047182996 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.047188617 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.027001173 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.042746677 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.043189086 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.029049836 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.037994068 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.02849056 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.07409731 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.044988504 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.046447759 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.052363359 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.152931597 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.028179542 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.325238501 seconds)
done (took 320.036290442 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.107766693 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.025905781 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.143208378 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.0261397 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.117062385 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.096998565 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.027274759 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.026043929 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.027219689 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.521024223 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.026753848 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.033326625 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.026707527 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.024824043 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.096749853 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.025967986 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.026158993 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.466246566 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.027792497 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.107564838 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.028032322 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.026338403 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.028260337 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.526177177 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.027256415 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.026039949 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.105865543 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.026937532 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.471740755 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.025992348 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.025335457 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.472861308 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.106834186 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.053775898 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.036137129 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.032254078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.114772362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.039248601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.09428971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.096480433 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.144632126 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.060442825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.027562044 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.027618935 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.03103635 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.029125021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.027813213 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.060189172 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.029039222 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.033527246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.46866392 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.035508582 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.033081532 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.029185779 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.02910804 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.056396466 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.029543497 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.029349079 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.109068124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.030297906 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.096116231 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.526665495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.523474907 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.029382215 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.029689086 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.029224017 seconds)
  done (took 195.858777151 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.094986505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.101305635 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.095193025 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.034144145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.078075453 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.098414987 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.035427578 seconds)
  done (took 16.49717169 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.036328928 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.029707088 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.078749628 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.079149006 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.029233175 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.207803972 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.041915802 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.036368309 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.058333291 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.029848708 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.681883981 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.07917813 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.03768229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.030241302 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.042040604 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.085417217 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.032493155 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.031926485 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.139381363 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.179650777 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.035189687 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.039992816 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.057046982 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.042898636 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.030391377 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.030746542 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.03077641 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.0373864 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.030323873 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.030878619 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.030160529 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.08381679 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.032404209 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.031661692 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.030701292 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.032684215 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.031279295 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.032203901 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.030515555 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.029680711 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.032033876 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.031412392 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.032003661 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.031781663 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.03339388 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.055001793 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.031371051 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.033096157 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.032182775 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.032352153 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.057468238 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.031518662 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.032105374 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.036462164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.074795085 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.039537984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.032296255 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.032888345 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.033299154 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.03371313 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.032808213 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.181477731 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.082046623 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.033602618 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.083133203 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.185238943 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.034285716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.033316063 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.033584896 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.122402862 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.032960256 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.082203571 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.033639587 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.148256639 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.035798805 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.22046558 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.057282291 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.037098263 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.037431234 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.033981973 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.041451127 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.033655123 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.035456551 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.040203534 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.038411337 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.034705923 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.034451562 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.035487269 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.040576691 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.034303862 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.085836088 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.03409427 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.034267802 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.168204567 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.033683434 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.143534356 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.061213265 seconds)
  done (took 221.88067033 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.04100789 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.041747448 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.039437432 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.049187194 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.03561597 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.035133308 seconds)
  done (took 14.206059321 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.037760766 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.039228291 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.035821054 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.0355787 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.036296602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.035837179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.035395025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.038095981 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.040513047 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.035399988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.036871685 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.038181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.037751627 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.034998405 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.036002201 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.03498085 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.038115864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.036761152 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.037567379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.037749353 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.248087912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.038123864 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.038211378 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.042031652 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.044806019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.035549246 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.049900903 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.037951536 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.036532951 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.046165791 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.042851031 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.03966471 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.042765916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.045752275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.043380489 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.042093155 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.042233845 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.040209315 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.039140323 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.039386709 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.040670471 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.038721948 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.037956669 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.040632483 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.040795936 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.048189462 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.045270646 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.051446704 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.039531831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.040321432 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.040890221 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.038688955 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.039263863 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.042420244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.044156343 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.046301284 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.044840552 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.038790167 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.040331413 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.045394643 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.044344693 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.040858737 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.041938073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.043678941 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.047916897 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.041425681 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.043941741 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.04502152 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.041850487 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.038615487 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.041894868 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.039808638 seconds)
  done (took 150.097641182 seconds)
done (took 600.513334347 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.322413173 seconds)
  done (took 9.293061521 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.198333866 seconds)
  done (took 9.252300293 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.936820858 seconds)
  done (took 10.909449481 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.046534519 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.082036713 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.061115481 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.043023343 seconds)
  done (took 30.216323074 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.284148216 seconds)
  done (took 9.25502216 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.052330451 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.039267746 seconds)
  done (took 16.128975377 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.103078258 seconds)
  done (took 9.07466933 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.493189869 seconds)
  done (took 9.487047389 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.043758461 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.071757518 seconds)
  done (took 16.108306573 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.042385216 seconds)
  done (took 9.012107239 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.588824979 seconds)
  done (took 10.636631498 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.057984192 seconds)
  done (took 9.076891975 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.048806352 seconds)
  done (took 9.020516896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.194946682 seconds)
  done (took 9.166568846 seconds)
done (took 168.60651554 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.052391957 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.039810477 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.040588877 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.039953689 seconds)
  done (took 30.145602849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.077250935 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.076194776 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.086008669 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.075680204 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.067370758 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.067043769 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.077334772 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.076915084 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.067976755 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.093608656 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.076913256 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.073792268 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.076697847 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.084880994 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.088230817 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.073784607 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.07690065 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.077481781 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.068242199 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.085035199 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.074533262 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.076729646 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.043416012 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.043032854 seconds)
  done (took 51.757788808 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.230043744 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.10895762 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.197914609 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.089486732 seconds)
  done (took 10.59927118 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.042736728 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.106988118 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.094384117 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.093696013 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.095187308 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.146829701 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.09634843 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.179881255 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.17147405 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.171394239 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.051509748 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.06569201 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.069132336 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.099948215 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.147251748 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.04434167 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.044171601 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.160368739 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.105803564 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.221326947 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.044260056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.099252638 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.095166185 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.096644436 seconds)
  done (took 52.518282235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.047243313 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.052685539 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.054701931 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.046646254 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.045588773 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.047595758 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.052517036 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.047426289 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.067067164 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.04840436 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.045608984 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.046479871 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.052446817 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.04593996 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.045565189 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.058413764 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.060423898 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.047888375 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.052806915 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.053583497 seconds)
  done (took 42.994519615 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.04477434 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.890830941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.390609215 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.296908106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.044788497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.045069654 seconds)
  done (took 32.688208587 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.058687132 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.052177599 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.045352534 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.102868986 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.185688289 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.052976859 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.044740939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.056961482 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.092438566 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.114712757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.066561332 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.073971215 seconds)
  done (took 26.924979543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.047948969 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.04927569 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.048995033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.060052656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.057145569 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.055698408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.05319821 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.04533546 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.061716808 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.065993525 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.053763477 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.058035089 seconds)
  done (took 46.63731193 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.750544617 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121831085 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.046442729 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.919061782 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47740479 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.584647669 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.940306 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.749111913 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.514788749 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.970953251 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249616828 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.045982619 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13093858 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.046674828 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316228133 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.338009412 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22225235 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287344069 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.622698142 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.086858988 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.248291667 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251155402 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.324422637 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.046422908 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050950434 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.048899493 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.558077031 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.806842252 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078433057 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.239541601 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299807673 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995456862 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103470816 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.049135422 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.059781042 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049721745 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056152277 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319812419 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.056513626 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190203261 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126658531 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291684212 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054513371 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469362659 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.757000836 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.277821671 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.147273297 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.049184489 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054050817 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.051199148 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.976238263 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131292746 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.053600084 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055392742 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.749604859 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.052193356 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125671197 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.051736029 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254133129 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.857970383 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736366865 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.052684662 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052723009 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.610758432 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.076032808 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.158894958 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755305905 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409089167 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.460892418 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.149034065 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.053236023 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052782899 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.260887168 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.027617575 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760657491 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085719448 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186598153 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.069423367 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69257514 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334786426 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.394528905 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.596763774 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971806921 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317987695 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.66135607 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04852855 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266826822 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.93793514 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.98047626 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251660234 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073504306 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056599915 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.316609169 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711087556 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161143151 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.064632485 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487937698 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064422719 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058946631 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055289191 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265911359 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270334602 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.091906361 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170684645 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070390482 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138160658 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979511219 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.067903806 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.055879784 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.132459209 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.058065158 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.054754074 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.099431945 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.54301122 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103826176 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.99210582 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057464418 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.087753314 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091557882 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001506951 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288194136 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.336435973 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.69056309 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.070550648 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.186364706 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.349948383 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263828644 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.059067382 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269085549 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592926193 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.375689328 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.083945407 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334010819 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.102730756 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335611499 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473111656 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132493808 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.772199325 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.679490165 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.273604232 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06869184 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.057735411 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059006471 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061020884 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990867225 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.717708062 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.353790814 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.204537972 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270089407 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.602433691 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.047321107 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.056620396 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360990634 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192368331 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052127632 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.69528574 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.328248276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.812187312 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.078708582 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259568082 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302710292 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.02688218 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070248714 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134016478 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074378878 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.109666586 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.288530778 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401879181 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.05804314 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.057983722 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004430796 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.058134682 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.060411572 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.592373553 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027437484 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.061808435 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.069325828 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.931408644 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131448301 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059801701 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059348071 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.59942816 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.565930364 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.064297194 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.663093255 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.071590802 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14167372 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317379816 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.336876755 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168831282 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.759241502 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.394579004 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.153141657 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.759372626 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9855757 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.058669633 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.997269959 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061485761 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.063585458 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064421862 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.248617355 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328469563 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345785142 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.499387936 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.110487805 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262585167 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.76562632 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010156195 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.063007187 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063853987 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.061523781 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.059437374 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.577943759 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.29904046 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.08977821 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086196279 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065848414 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190951569 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.071548807 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.985881929 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.061297878 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063070368 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.552495371 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.095977686 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.01032332 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293335028 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.819529942 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175332836 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107538997 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.070852985 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066410161 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.766265991 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.100120969 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986869454 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.542413527 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105628619 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.765863872 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.546859853 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.624021843 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35012119 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360051631 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.366850668 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.11915399 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278043987 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144046262 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116121027 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148137827 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000380394 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.987999346 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.700601888 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367033752 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330168844 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070458067 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27405669 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726153551 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286917127 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092270625 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.537806057 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375702199 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029364573 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076729106 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.626873868 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179053402 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143605944 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065288314 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.010586188 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.375543709 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089618332 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.764373169 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075492209 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414193748 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.557360448 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.13869313 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.357903607 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25403961 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.067062644 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39619283 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.317960672 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108897549 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068633971 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.058523874 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.278961401 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643840424 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.941738286 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068353505 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269983786 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360341007 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.95759833 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.066114573 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.26281913 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330938665 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.064336688 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.340053563 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394964872 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.15677602 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123173714 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289855454 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.652296008 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364453138 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.606855334 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.555117984 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.068195251 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.990909927 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.765819176 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.267106027 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.071010375 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026628754 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250676029 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286617913 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745163071 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283160401 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306294131 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.076747948 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327722068 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127732501 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.162370088 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.31049477 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.450471462 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298990437 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291805251 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605998983 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282190069 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507571746 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.220306951 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.068150072 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271427994 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279556437 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.280778863 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.374331654 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221648112 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.777452428 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.071770762 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.273636515 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354705897 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1186985 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.36750183 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222700743 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.149321336 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073375814 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131443548 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072136664 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074835161 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.367068414 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58344368 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.082589303 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144718697 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105209499 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.577280385 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.071113759 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.072125357 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328825457 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39788392 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384351534 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.041298808 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.067539364 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.068476466 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195131065 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.993370048 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071821107 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338007517 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.071846097 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269377239 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.221041498 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08454926 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.308525039 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.440215994 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.653516626 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.037479528 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074767829 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269258131 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345333025 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.297791704 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189241108 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340640586 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381684239 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.088982425 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.376684237 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294637975 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071984596 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.272937006 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072463749 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19616744 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.272264298 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332191918 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.62952948 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726894918 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332303994 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921424638 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072613869 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.727278813 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333774316 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33181489 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.111415883 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13486334 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075874332 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.568813178 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.799397847 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203933216 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.943366627 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996675373 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.08165157 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290124865 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.311111877 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.77878075 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073469554 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340688809 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35907017 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335608428 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.112136822 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.943332461 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285083264 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074137556 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.198010196 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28985945 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277433237 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304815571 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074133898 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.076557228 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.879402087 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997042092 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.072858827 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126094367 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297816017 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092455736 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.5861943 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.77180908 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343403602 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107834701 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075619165 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338395592 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.554056979 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.620720218 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078872705 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260897756 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.091641422 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367257337 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.075150614 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.562556323 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382681839 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.073663684 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.273247105 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.329794874 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329465872 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006100469 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081142646 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28687083 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.94312753 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.075951755 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052842276 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575155137 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311364288 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.810075512 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630047839 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.076550532 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.075791718 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.609265773 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112427044 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.574761532 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.109502042 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089137952 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.594621523 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.773201691 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.361627714 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314612757 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.279578028 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.693021735 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.074863913 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.073898262 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.075248474 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99232285 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258659056 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.263607806 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339264489 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096133002 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.569415062 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115120581 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.384922442 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175974207 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283016982 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119437257 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.599537733 seconds)
  done (took 1730.283273567 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.120265696 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.10522234 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.166229591 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.090142989 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.142870684 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.184469532 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.176145532 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.188989403 seconds)
  done (took 59.182290985 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.077633403 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.094130212 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.081750385 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.079105759 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.092428083 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.080166203 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.237142803 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.09051447 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.096523624 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.084058111 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.079867186 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.08180202 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.372077997 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.099478014 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.080438925 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.079210847 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.082671409 seconds)
  done (took 77.910227584 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.080065252 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.303428289 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.137779741 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.081278586 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.038144969 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.083222129 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.072724479 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.090230384 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.088648054 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.292256853 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.377346874 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.085717505 seconds)
  done (took 92.739775862 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.087579529 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.081333189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.082263795 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.080310372 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.080118612 seconds)
  done (took 12.425841053 seconds)
done (took 2268.8486374 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.381476481 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.138077538 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.180628242 seconds)
  done (took 6.327244064 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.229632026 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.273117827 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.386739318 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.146770568 seconds)
  done (took 11.053994413 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.33657427 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.447987495 seconds)
  done (took 6.795491353 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.450748816 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.094345374 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.460161823 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.081979702 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.086766756 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.084570364 seconds)
  done (took 23.267886044 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.083516505 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.083680547 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.084381394 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.084351765 seconds)
  done (took 10.349749077 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.079687976 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.805745446 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.083221832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.097093503 seconds)
  done (took 22.076954192 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.23402972 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.199057827 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.225940533 seconds)
  done (took 8.67024386 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.233985949 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.925825722 seconds)
  done (took 7.170688222 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.226011513 seconds)
  done (took 4.237543254 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.11122897 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.354337477 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.569578136 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.008225518 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.764379246 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.158734471 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.46332109 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.341928023 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.497946328 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.53996377 seconds)
  done (took 27.820913057 seconds)
done (took 144.165753118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.620363293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.118053437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.284741624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.484143656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.31471272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.287456063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.302200545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.46958779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.162085139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.140456534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.507598634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.313682748 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.247044255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.104383664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.253627963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.107913514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.308810038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.477026258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.142361114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.36111219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.309218475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.102883577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.302848019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.120548278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.309008311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.238532458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.645786991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.109434484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.280266315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.662620022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.238979802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.497733451 seconds)
  done (took 175.840850483 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.081675645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.082022637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.084487822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.084206264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.368021764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.084135134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.081192697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.083302578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.312629401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.281895245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.083140492 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.356754786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.085594612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.084482689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.085245066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.082722197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.443990392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.082494145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.081939854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.084297547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.085576141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.190047465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.085903989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.205942397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.419382919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.083771186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.083739601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.083949662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.084851845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.084156372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.084531246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.085050093 seconds)
  done (took 214.604593593 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.084135878 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.085587494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.085652552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.085803571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.085058515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.086058833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.087322755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.083574646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.825916465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.794242097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.08370608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.08458422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.086448172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.084229955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.083747509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.085872394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.08637865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.085298994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.087010396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.085076224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.090104108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.874146083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.083312456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.884999496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.084766091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.086623449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.085693199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.085894538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.085727231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.086124327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.086279211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.086388473 seconds)
  done (took 227.789929101 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.326585224 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.087157602 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.090481382 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.098586937 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.0875835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.087215642 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.089798336 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.334915289 seconds)
  done (took 21.217514652 seconds)
done (took 641.483587025 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.475314441 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.313243767 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.265766431 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.109526624 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.371151285 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.154484399 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.105038541 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.170159669 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.953516351 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.185317661 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.783558518 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.129986637 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.877116692 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.133987068 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.229103812 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.163377255 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.671540661 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.770207264 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.249538669 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.185443478 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.287821913 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.057454536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.189735716 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.98767856 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.816742612 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.104000943 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.213450492 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.68025481 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.11724975 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.264792241 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.790360879 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.434794944 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.123787863 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.107550003 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.158238773 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.138491928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.406534566 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.122922355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.233580653 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.855679567 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.199363489 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.85111305 seconds)
  done (took 112.45518896 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.097557455 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.093391906 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.091937934 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.093436428 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.105555138 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.092259432 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.093679107 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.094095075 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.093848519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.097509559 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.092945136 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.102873464 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.093700477 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.102089217 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.094428787 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.094640461 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.093762746 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.103226947 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.094264138 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.09425938 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.094535722 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.094902911 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.091795385 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.09605405 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.094670015 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.093512494 seconds)
  done (took 56.51828547 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.090981789 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.243189326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.338274838 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111115015 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.092033206 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.094394455 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.109105841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.095405479 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.094378128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.094259766 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.181728791 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.097461532 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.109487609 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.337494901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.108485633 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.090188824 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.091145396 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.092369147 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.250398683 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.106886245 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.110878817 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.097303036 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.111197833 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.105695716 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.096923265 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.091643543 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.09531679 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.558095549 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.101828318 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.183174335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.166708788 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.114979161 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.533582633 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.345661862 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.148243063 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.099796636 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.092641301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.188205582 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.099995314 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.092796033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.109895078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.097957407 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.340798682 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.623487178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.108255723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.095461238 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.568567029 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.198717653 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.135676323 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.102820199 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.34399669 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.112132914 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.093941941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.094357313 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.130877842 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105106451 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.094307057 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.463217862 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.107108647 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.111504691 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.099029775 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.095299156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.259622446 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.10341919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.249062171 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.104183611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.102986553 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.095143577 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.341701394 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.111210269 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.64115549 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.10839825 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.09497717 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.185862945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.250667393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.592249662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.107326735 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.263736757 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.550606004 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.120561211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.103554298 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.548452273 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.123243529 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.101941744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.096441197 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.09569183 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.096213141 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.141154403 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.111400654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.54935572 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.633090931 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.483896213 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.124289492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.107143408 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.0969633 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.466194906 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.104354085 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.096504188 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.333649293 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.646967926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.111711295 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.102993026 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.613652867 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.11225167 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.114923628 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.104527786 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.350057784 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.112933787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.141299255 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.096392935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.102002439 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.099428789 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.114477048 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.10417469 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.096550971 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.603618806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.205675726 seconds)
  done (took 259.049615501 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.098147684 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.096223559 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.09391557 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.096004341 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.095312501 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.097268859 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.095815158 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.095614128 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.098800491 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.097546953 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.096425879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.096819771 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.097010541 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.10531378 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.140752297 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.09825767 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.598276247 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.096763768 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.096566166 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.098322436 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.683809255 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.101649754 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.095641765 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.100021069 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.098396497 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.096840296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.099165342 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.137119494 seconds)
  done (took 173.929196652 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.098618449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.211618086 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.120800745 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.128200568 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.107201811 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.101646227 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.198917247 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.118123735 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.104564232 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.099900249 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.099768408 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.159290455 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.109779209 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.199406741 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.133628879 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.209004568 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.208214871 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.108861483 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.101550315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.104764357 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.129047081 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.109099778 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.159931168 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.22202742 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.117967277 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.213211953 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.118929255 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.100208046 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.099980096 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.213291134 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.118282855 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.160445005 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.128661747 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.121189321 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.21875915 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.217452719 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.20819991 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.208679419 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.108872032 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.101299835 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.099710733 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.100563912 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.212982934 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.117370615 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.101448915 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.217056983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.117988173 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.101523803 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.100872583 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.100541951 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.114384065 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.119086729 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.164761371 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.229435452 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.136257297 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.124432575 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.199650255 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.230800793 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.100419496 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.199019148 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.111693075 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.217744065 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.120160986 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.102869027 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.103283584 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.105894482 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.130838757 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.208883846 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.209972784 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.110847931 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.199708201 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.140604021 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.107450174 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.102219042 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.103152261 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.219302581 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.219692371 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.140962693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.139437589 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.133539452 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.112011524 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.102307201 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.105048529 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.119598878 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.108525048 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.217644684 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.220647441 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.110777162 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.103781951 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.105476979 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.103733416 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.127822684 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.223820311 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.136615499 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.208845398 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.172642854 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.176210015 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.116625081 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.115734099 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.106661399 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.165678485 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.116352616 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.115507722 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.397213956 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.163473491 seconds)
  done (took 227.398494046 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.511865587 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.14919665 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.161069926 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.428972213 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.489567779 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.096839898 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.149207843 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.153332944 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.185903874 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.378988292 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.223499213 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.169313025 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.13806453 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.12746291 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.148554652 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.186032897 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.160261161 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.493742015 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.359157224 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.66589113 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.140546885 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.448984726 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.501609611 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.748900849 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.202744564 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.546841359 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.77528919 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.316205871 seconds)
  done (took 70.097419116 seconds)
done (took 901.461851609 seconds)
SAVING RESULT...
DONE!
