cset: moving following pidspec: 3546
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363234187 seconds)
loading group "string"... done (took 0.658470083 seconds)
loading group "linalg"... done (took 7.897181556 seconds)
loading group "parallel"... done (took 0.169299491 seconds)
loading group "find"... done (took 1.184538262 seconds)
loading group "tuple"... done (took 1.930463727 seconds)
loading group "dates"... done (took 1.291576641 seconds)
loading group "micro"... done (took 0.246464398 seconds)
loading group "io"... done (took 0.966247677 seconds)
loading group "scalar"... done (took 39.008318933 seconds)
loading group "sparse"... done (took 12.536634756 seconds)
loading group "broadcast"... done (took 1.002272447 seconds)
loading group "union"... done (took 12.782853546 seconds)
loading group "simd"... done (took 4.721538332 seconds)
loading group "random"... done (took 9.475059699 seconds)
loading group "problem"... done (took 1.871449657 seconds)
loading group "array"... done (took 21.843655284 seconds)
loading group "misc"... done (took 1.720672353 seconds)
loading group "sort"... done (took 3.51623874 seconds)
loading group "collection"... done (took 18.135443811 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52606011 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129270096 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132077259 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124437333 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152670282 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118397575 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130633854 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090069143 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.820148247 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15533246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122949859 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441724459 seconds)
done (took 5.264024676 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178261642 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087055428 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087440532 seconds)
  done (took 1.311211094 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069686242 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129612565 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070166455 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070054544 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071235075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070487791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069771204 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070087499 seconds)
  done (took 1.689186742 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076258442 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072720808 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069214301 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071319217 seconds)
  done (took 1.428148079 seconds)
done (took 5.820322678 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813466262 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216999217 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193328486 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41859587 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132736307 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16409166 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649255396 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317642963 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19286597 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080531332 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113635532 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350355744 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113425254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640177201 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081634334 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094275585 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141691621 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.408336298 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071199207 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086066185 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092087258 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133000104 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091327321 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078151613 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149762725 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072388803 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140236851 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083777539 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070763775 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223092195 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176169193 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678948239 seconds)
  done (took 10.448357271 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103320866 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104932393 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072449437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129106245 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104096837 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073340601 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079043365 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070986349 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094389623 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135874596 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096741728 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107442375 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069542391 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072218661 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088810238 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210213064 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084726136 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085906176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074696006 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081527351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111895312 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082396725 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084626101 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084540592 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132319016 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186705994 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103382576 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103238771 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0708211 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086683062 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117631826 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131663293 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069336082 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069501369 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131321937 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097667475 seconds)
  done (took 4.775061051 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.046696865 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149010934 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094330649 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139670681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068973515 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113432056 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069081147 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085249553 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216083324 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.403581958 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117266144 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.633892085 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114617739 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110424231 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071304365 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071958466 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070888187 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.573768052 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102483214 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112786385 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085899535 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07465247 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072894618 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37143824 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072055601 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067901421 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072487057 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060305474 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12891125 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071584108 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977014724 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168946374 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070647562 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1039985 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.293717017 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094236651 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148732223 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07300523 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068435801 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161408759 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074734932 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071012473 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088789181 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107973745 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123074385 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070052667 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070526289 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16949887 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068662958 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083966325 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.110290003 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158894631 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081357213 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068473509 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263332264 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09360565 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073972584 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068314535 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.212268796 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132735202 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071113484 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070132366 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071794651 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073382468 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40814428 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069345764 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.871436757 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07407455 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080710582 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073696256 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0733698 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076806654 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075794514 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093920754 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067908859 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069760065 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078468421 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069231864 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070161957 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07042249 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086479242 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403429973 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070296622 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071418808 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068524526 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068159623 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092804358 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100022573 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069884931 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.173213088 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103968449 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073615299 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070385317 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113177202 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070694228 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086906381 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072696202 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116184098 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070446376 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068482928 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099240123 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07261688 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100630975 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074460308 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10256418 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083814971 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072392834 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.452687846 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070010118 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069571179 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073082249 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069401269 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071568637 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069975702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083210243 seconds)
  done (took 22.291130487 seconds)
done (took 39.698003875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268100225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076783712 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076666743 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076910205 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077048384 seconds)
  done (took 1.807720241 seconds)
done (took 3.019234331 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127954213 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105039895 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068319137 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101886289 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068224879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106171509 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105698253 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08134217 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106741532 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068163083 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102231421 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068515515 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068122872 seconds)
  done (took 2.410686153 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088228933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088272064 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073335708 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08800193 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067122809 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087620566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085949905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09401014 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085822424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077196024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067526338 seconds)
  done (took 2.107695791 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087287765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089067582 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076569232 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086354811 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06736133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086763469 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086173207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090502994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08624345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078719351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06769207 seconds)
  done (took 2.105192376 seconds)
done (took 7.822630789 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081556592 seconds)
  done (took 1.275187997 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.601022466 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.116904547 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086385018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115389841 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197725107 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122006781 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274240219 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090030681 seconds)
  done (took 8.983685451 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094296015 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086494941 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076278412 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076137307 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073204862 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072447528 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073596079 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072472616 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072000733 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075643348 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07469074 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074590389 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074826096 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071666963 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071671984 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075946096 seconds)
  done (took 2.482667654 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096302635 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095892648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076995437 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078136895 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076058616 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075397794 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076938527 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077086245 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074255832 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075930737 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078113014 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076851501 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075182465 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068475998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076841772 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078197581 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073947669 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076967895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077950907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079298726 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078085622 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067528947 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075211866 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077158051 seconds)
  done (took 3.166672205 seconds)
done (took 17.110242459 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109421806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070816211 seconds)
  done (took 1.379129072 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084461256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08648815 seconds)
  done (took 1.378457512 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086219925 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068791924 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092062311 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080755019 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069164476 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069183512 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090001025 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069105967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068928908 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068841911 seconds)
  done (took 1.970253896 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071363152 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080912414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072512618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085153792 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076512518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067379375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075027139 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070852769 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080307723 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066378618 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074288368 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085767998 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074616134 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087778398 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075247992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07147897 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073423169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070830852 seconds)
  done (took 2.570512034 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068935168 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070179172 seconds)
  done (took 1.352372475 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069276089 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066866394 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070679133 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06942984 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066757964 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065710524 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066441736 seconds)
  done (took 1.685360948 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390750499 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119718825 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323900421 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074489186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085554056 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268903588 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069417951 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074371426 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074469547 seconds)
  done (took 2.737525497 seconds)
done (took 14.286371276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084402699 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090880692 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100293525 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392418743 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095100053 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069428816 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117158541 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191940652 seconds)
done (took 2.365979281 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21724271 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.722424514 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.446700444 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218622357 seconds)
  done (took 2.602940247 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355830746 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095354082 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064407617 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071234759 seconds)
  done (took 1.813469457 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070656236 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073103396 seconds)
  done (took 1.366503731 seconds)
done (took 7.221860898 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070835081 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090965753 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069588076 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06991761 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066716069 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069899369 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067006834 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067305247 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069632916 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069540633 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067286013 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069225918 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.069329694 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069184856 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066800046 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066503538 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069310617 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06775378 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066720077 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066669869 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070478109 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067135855 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067135097 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066820643 seconds)
  done (took 2.920632995 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089091852 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070412222 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075882017 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075441667 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072690719 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07456526 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074629083 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069170446 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074700179 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071496461 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072471553 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07293413 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07170378 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072851112 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071793962 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072331296 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074547501 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06892016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07148453 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072929534 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.188419458 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069111697 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072210411 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074299198 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072095714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071990547 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071746781 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069019756 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074788347 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072546933 seconds)
  done (took 3.537787352 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073445363 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067474387 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067529118 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07381518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067402117 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068453839 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06692859 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067533171 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06745536 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067470981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068259279 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06659406 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066691729 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067678309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067125286 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071827685 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082945143 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0675484 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066324196 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067025005 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070209489 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066329081 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066587346 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066303927 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066592991 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066495504 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067577624 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066677526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066996404 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066647028 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069733751 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070810361 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066523022 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074538609 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07098668 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066537107 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071040276 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066690244 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067985001 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066466597 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066478991 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066540373 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067094577 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074113921 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067100279 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068546077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066899868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067949403 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06728839 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070099583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067157684 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066948742 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068908442 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069096314 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070981809 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066875145 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068016666 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066970984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068115434 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067181561 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066642903 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066896611 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070094222 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067755697 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082676918 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07420467 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067070357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068023532 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067913755 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069752822 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068382923 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081389464 seconds)
  done (took 6.187589972 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093092001 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090709024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069207971 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068135535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064740524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067724909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073141143 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067545731 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068978418 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085671543 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067855966 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068481144 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069335495 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070970318 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067500073 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068966383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075936545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065082234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068176081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070635083 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067638275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072409729 seconds)
  done (took 2.82684028 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159182694 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073849138 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109821799 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078460122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073299796 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078193561 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07294676 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07299731 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07354578 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070714133 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071149778 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073165689 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073044331 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070803238 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070902826 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070740079 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074308482 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070717836 seconds)
  done (took 2.675985646 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080540247 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06849814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090811972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069817847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068701181 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071699393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073374238 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077429198 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071799225 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069401916 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076753031 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071429268 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071764103 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069033132 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071424271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068816139 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071800965 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069254034 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077266255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073351239 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073348437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077139538 seconds)
  done (took 2.852748593 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083530882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071140971 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084582549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07120609 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064611475 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067672691 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073759409 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068763855 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073359288 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0713958 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069260399 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06730141 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071878198 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068535451 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071818885 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069275244 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071409281 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069201468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071462593 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064794427 seconds)
  done (took 2.666107368 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090444241 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071648575 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072358137 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078936853 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071316063 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071602527 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078211646 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070973765 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071765558 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091630603 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071103502 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07138233 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078091032 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075729466 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07119078 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078862144 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079160503 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078851818 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071134086 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071536358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09203194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071312812 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078134892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071283371 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071739983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071957105 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071002308 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075674157 seconds)
  done (took 3.361003514 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070844598 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069877439 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067915155 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066828061 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067251176 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066586264 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067274084 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067358244 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069854559 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066627493 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069272605 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070053226 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069471569 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069435971 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069866608 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069762284 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069731051 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066803149 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067233132 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067200495 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069772018 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070047545 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069405347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067373804 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066896866 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069822986 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067180292 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066966478 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069491656 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067280983 seconds)
  done (took 3.298470453 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079517444 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076425864 seconds)
  done (took 1.402269668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066262394 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083890599 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066494437 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0741035 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073627468 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070062301 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076826851 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072807567 seconds)
  done (took 1.827070056 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086740809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081842724 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071893923 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083489039 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080727289 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08756768 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140854821 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070216127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076206647 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067881919 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086447773 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069347263 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076451188 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071037021 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076014323 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076898273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067526042 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075576487 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071664365 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068845337 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071011564 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078706272 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073006568 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064905971 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071180161 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093356229 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081507284 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06946582 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073380342 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077188487 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075887442 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063480796 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070159923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070364018 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067449112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081101029 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084724471 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072500894 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079109272 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070593893 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079363906 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064206209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075399921 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076648646 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080873667 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070243276 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070370452 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064971841 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067550217 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074300009 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06485998 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071004067 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064314097 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077415812 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074050426 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080476424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06890328 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071836488 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072869589 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072847971 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077899575 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072215057 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072872766 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069653604 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080473023 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075617514 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078695209 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065308466 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064396913 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068108796 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080491377 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093633456 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076116203 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070365259 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071371386 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067741321 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073161029 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07081019 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075946297 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076463784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07007827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075818645 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077708638 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070733854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072808185 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077926553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06834621 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072538723 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067656583 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086728212 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069101607 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067818047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068291436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080179026 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0730843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069754443 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067704827 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076713538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063245566 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069405091 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069955662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070104055 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079588423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073483311 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073588129 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077324095 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076756684 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069160362 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071613984 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065654769 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069682987 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068265632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076259539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063030972 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072497315 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196165945 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071802929 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08037641 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069267688 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070656959 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078214518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076095413 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070090679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067390921 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07392535 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070551219 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073652614 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079043382 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069107569 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064970282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065092036 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075298513 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070221094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07390338 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074875085 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073246689 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064381284 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068241265 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075586732 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079252904 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070972996 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072314321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076526473 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071464984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071149008 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078332014 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07353715 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069571041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076896949 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071414247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065399099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073073175 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073034398 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068774069 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074828748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073224332 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073029787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071975819 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06957056 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077091498 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0712317 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069867815 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070626925 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069235049 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080371903 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072414436 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065180949 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067341858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078720481 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069102778 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069070031 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069611156 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072699386 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070594894 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06839218 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069937481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072115336 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080019199 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073124021 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071018711 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075357542 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081818473 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06941948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072705768 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06949373 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070432173 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070224385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07938729 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075533334 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07400577 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072578289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066563059 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075336208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077682567 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069231708 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067983094 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069065943 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073977219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075699798 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073826132 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070513931 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068326161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071400579 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073643126 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073523194 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069647656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069556813 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076073586 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067716243 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076477261 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070329527 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081107323 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073343648 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064108137 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072217678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068038901 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075767799 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064478316 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067578653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069166806 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070095637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068290893 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071678296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062416086 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075402482 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076017147 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068981857 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068007776 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06838137 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075765558 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070405307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07207993 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072678628 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.201777352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082004539 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071019828 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074735191 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082718057 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070975739 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065244705 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075981381 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069716149 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0699963 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071235192 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068633713 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074321501 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079024088 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07817497 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064543899 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073202361 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069296195 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069648229 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065544556 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075525974 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073732985 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072287111 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078008548 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071865221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071639652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074672306 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070432435 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072251928 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071651311 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073613342 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070954581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072411071 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070568991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073440013 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069102724 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068676609 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072267105 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070146369 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070870382 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076228363 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070246311 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069796985 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07361222 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070284183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071499574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071175806 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069271207 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073034093 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071417285 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070874278 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073449101 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065442841 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077477028 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070254469 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078870894 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070295491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067497758 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076516106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072784494 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075478011 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070787526 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070511117 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071272881 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069771913 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072650448 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077670967 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068002643 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081074028 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078823144 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071863063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073243914 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071171237 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072222047 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069846311 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071588152 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071127039 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07042449 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069971871 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075170413 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07247731 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070594381 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07243875 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071102518 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071020754 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071323397 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064196298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069893123 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07001939 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.071975099 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08012281 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07051012 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069677349 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069241676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071697083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069410596 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066725655 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078428893 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078619849 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070628505 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077024114 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069256943 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07133101 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079992445 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063390751 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067903572 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067993155 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067727111 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076564217 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069761201 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07879616 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069140203 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068513893 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065796616 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069371812 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067516448 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063022696 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066590052 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072047688 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068367298 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06800639 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068786517 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.202625645 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072392857 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080288391 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0708164 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07300539 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071455824 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067871914 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069360469 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070231638 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073911848 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071859174 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067949756 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068694253 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070552956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072091193 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071962893 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070627566 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072520785 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077738265 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070181375 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074053057 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07237816 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064631876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073910964 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071299229 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07077535 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070147736 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074559752 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07461256 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071252611 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079239641 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070981458 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07153939 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070291096 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068478119 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069841322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070831865 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069988562 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070222726 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070963341 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077237397 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067947434 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074002761 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070525358 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071159621 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0781291 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071262673 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073919184 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076282683 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070608929 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072572596 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080020697 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074472131 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074135707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071535309 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072921804 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076262932 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069631333 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076284885 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070987982 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071240844 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072417395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067800033 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070404552 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07019172 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068829774 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07715037 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071038952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069344249 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069458996 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067165948 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071659725 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07337997 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077501198 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072732663 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073799194 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064611347 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067861958 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070445366 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067964139 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071892654 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072802156 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076372466 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07253447 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070554983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069065388 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078970313 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076110982 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074495423 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068148909 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073587782 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070536815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072385679 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071970362 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07017471 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071432379 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074111538 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072174891 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069532104 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07729034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073671531 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070884743 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071636131 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071447463 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070691163 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065138559 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069904067 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071796213 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074877481 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071957435 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069589359 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080468422 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067376412 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069566367 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071610962 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068281701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074048597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06359707 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070560961 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070162396 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069293367 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063841866 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.199011556 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070124657 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073288908 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070524437 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066964782 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080973016 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08027843 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074862228 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069576192 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068697317 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06563145 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065971861 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070639661 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072223405 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072339501 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080420479 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069920084 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069253285 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064708276 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070895935 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073830866 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074453041 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067435946 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064944996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070219989 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073646493 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076119175 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069130886 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069588021 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073854786 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072361917 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068869963 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073253883 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067093632 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073909983 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083484584 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070805675 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071835144 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076904471 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078812115 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070426288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06571862 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071354835 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073654588 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070768161 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071782934 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071207083 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085332268 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073586567 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069395919 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068922554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073185224 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068985559 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077962839 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071487445 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07025936 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075856749 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072547433 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078405954 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073680756 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077368934 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073101829 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073639519 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069554582 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070550913 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068582398 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068538098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071552303 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070602606 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074464524 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07788418 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069087874 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080339367 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07905043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071852752 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066479268 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068942837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069547785 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06522391 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070922125 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067860594 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068289932 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068908003 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069360695 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071066317 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075051631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071472481 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070181303 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069868431 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063792502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073010355 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07234022 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071231011 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06721124 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070356505 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070676958 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074594385 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073954975 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068154092 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072412644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07196492 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070576901 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064671837 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07628548 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068901053 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071512115 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06924601 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06981065 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07011734 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073120719 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073739576 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070104273 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071534854 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072680683 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070486958 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066192334 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065947664 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073740238 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066673728 seconds)
  done (took 44.819784754 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106298308 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066764244 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065368663 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065749432 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076263694 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066583435 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065882069 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065830758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065981678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068062159 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065098793 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065293382 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072978937 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080060284 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075737422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070193379 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065400855 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06644109 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066179335 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067621248 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073985528 seconds)
  done (took 2.83306383 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077301412 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081048773 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078740636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085338598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074625487 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0735841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07820313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073679468 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081127943 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075640482 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081138058 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073768498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075245101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075844417 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07549991 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073239621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083988045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073769071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073761814 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077811678 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077757424 seconds)
  done (took 3.015785065 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07056378 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070059112 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071102247 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064523569 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06871803 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064577055 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072492072 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06728852 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072008208 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068889474 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068938627 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068128798 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071065334 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065248847 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069330821 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066826546 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110741859 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072435883 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069004836 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070161645 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064493475 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071384739 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064687684 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06473539 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068428969 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072577212 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070161984 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067680786 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069397775 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068129629 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069811324 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066937113 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071056898 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070116981 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068824197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068308211 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068768193 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069431622 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064377129 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067027035 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070035719 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064902866 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069629285 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070386794 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067068639 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066642013 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071595734 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068966716 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064192664 seconds)
  done (took 4.725698719 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082432383 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113200026 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070779842 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092344166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083377327 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075468454 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072956078 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093761379 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066255948 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067063542 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084089769 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082355872 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068283669 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073155621 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075199806 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068486515 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069404464 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067500303 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071962752 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068178204 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072409625 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075592973 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082547659 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080933837 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072319309 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067341786 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068365108 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07388798 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080317085 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072571459 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07321018 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073654736 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083125414 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07025625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067484808 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071182849 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084154499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068767362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070925588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066180421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070883757 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073077513 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075869521 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084364968 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06867484 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073748333 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068581122 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066490064 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080917248 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071504804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075758617 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082715187 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072326538 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068858983 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073020153 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08291505 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068673551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066779753 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07158566 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079710306 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066247389 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072172522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081723924 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070760325 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075543876 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081752913 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074158229 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072187316 seconds)
  done (took 6.561221962 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079700312 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099685631 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086644418 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085476549 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078281199 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079280688 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078672232 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078663076 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078665895 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083020918 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078658054 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1198178 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074218126 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080862806 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079158541 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078831842 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078806622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078678239 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079052181 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079029906 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078764734 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085375537 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078859385 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085790126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090584353 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074217941 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078588201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078728905 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086295987 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078498789 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082294647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079336342 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078707291 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086176724 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082124583 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07860658 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069662156 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079240983 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07916832 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079079992 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07489914 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085922449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078680629 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074382157 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078528281 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078307632 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085774252 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082464056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080857542 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083292942 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078915943 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085971369 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078249083 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079091961 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085900611 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089278299 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085786947 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086108479 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079176923 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086232925 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086041527 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088530595 seconds)
  done (took 6.423397483 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085603301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077412928 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085897496 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065113564 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067475787 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074908478 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06807059 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067315082 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077258846 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077393104 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079456665 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074835563 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078050991 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079602164 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074994319 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077477665 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075253377 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074964237 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077095845 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074875034 seconds)
  done (took 2.858916881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078425011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086278059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070131803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074721662 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072569528 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074457895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071862289 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072713777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070295898 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072579244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079074516 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079733832 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070696264 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074496942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078755804 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074924304 seconds)
  done (took 2.540897576 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087007889 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076099313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083312386 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069814943 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070098525 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065272168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068640736 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065161014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065892956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081416687 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069000006 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079964185 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069217758 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06814833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066637214 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074413947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065514042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066452757 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069243931 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081988329 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073045816 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067590456 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07244306 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0699558 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071521801 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073591127 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068106679 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069703349 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066816593 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069469188 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072611157 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072709926 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066480677 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067181046 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068036989 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06645196 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069130958 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069563216 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074922727 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069253863 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067481088 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071270733 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06951188 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070695415 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065794829 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069612895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065536703 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070968638 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066648275 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071379936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069471516 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072212135 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069962015 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075799784 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072027647 seconds)
  done (took 5.230799598 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083002962 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07322931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065280895 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06814832 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073001778 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070758278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072812549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071124154 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070730959 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067321797 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070417817 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072252079 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070660795 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072772037 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070676087 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073162609 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064824087 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070956932 seconds)
  done (took 2.633055229 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075397222 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0703301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077482973 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06929225 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069872009 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071788909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065254654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067989566 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068185199 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070123619 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070039238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072656736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071267535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072723887 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069420031 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069123885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07209685 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068149549 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069575106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065524584 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0716039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068698424 seconds)
  done (took 2.891845395 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099349982 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087339727 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143465171 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083307332 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09011816 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076007884 seconds)
  done (took 1.926534889 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09573773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105763792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069933436 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072651156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079231667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073027264 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073489364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073515252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082601642 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078486441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073284403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081586569 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081475716 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080622695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078858591 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079117779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074087018 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073447886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069643715 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08653338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073944131 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081418279 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073389758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072970404 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073454359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080712927 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081584687 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078734661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073373598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081224614 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078918605 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073573869 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081599435 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078926738 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072759779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081545492 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073375654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086747298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079031621 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080318213 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07246503 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079388311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081652176 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077698922 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081474873 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073810039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078150802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073663537 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07352021 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088617607 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07902893 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080514681 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07890425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08203662 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081763512 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088365507 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079471952 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08040424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079027236 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07916274 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080778643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079684319 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080634119 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07886336 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07858918 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080383894 seconds)
  done (took 6.56003356 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108228011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070489348 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07458795 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079605336 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080802796 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073832243 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073845106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074171257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073546316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070359174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112515365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07417362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080733777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080560906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073418298 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073476062 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074256966 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080313568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070461099 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088036015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073343789 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080442393 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081045052 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080443304 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079309945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07883565 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073893719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073460017 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073650906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073158287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077732856 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073420941 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080604671 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070368397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080506028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073343568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073385297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077955978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073248623 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078862623 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081000342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086654038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07330143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073509134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078797862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073099586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074028324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070379214 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073725845 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070197525 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07904852 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078264651 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078618077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080209307 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073339543 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073410254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073306259 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073315232 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073376764 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078590173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080542767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07372931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088316651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073229696 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073974157 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080757494 seconds)
  done (took 6.467611834 seconds)
done (took 134.265498311 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193204506 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173151128 seconds)
  done (took 1.712261525 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073036161 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103414167 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080949324 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132477713 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070998243 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103850559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103081572 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081635151 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069500106 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070267234 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070273984 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072309552 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134980394 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069545189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069528776 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072422728 seconds)
  done (took 2.735963395 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103601166 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169658429 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107254934 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069645048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103370365 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075947011 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06911841 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078717921 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074386104 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069522538 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076357066 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07414744 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068728426 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073949922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074523647 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076023296 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069189755 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076160274 seconds)
  done (took 2.87019019 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102834256 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095580756 seconds)
  done (took 1.559799792 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158446798 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.142723953 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207771424 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357291139 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163621277 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151913967 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147580512 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146249331 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116934666 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142279738 seconds)
  done (took 3.093243592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104801107 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158140885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278046717 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123177005 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07729787 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096925416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124011876 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082514122 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08359313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083563915 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084030475 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080815291 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103561287 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07723764 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078188092 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079595344 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107727703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077023916 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078165669 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078714877 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105929889 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069521281 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076771576 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077098201 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08062805 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080597305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069535124 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070867929 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079409001 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078497285 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07990651 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095713545 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080908691 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10968018 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074911192 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110417761 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081011141 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076764631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078402484 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077091702 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081759628 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081328189 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076812348 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08014737 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069509594 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079992493 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069732064 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069669881 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080717285 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070451333 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080963243 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079726721 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109652662 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070481941 seconds)
  done (took 6.197153669 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108263641 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111932895 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074959852 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118349072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108422131 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075773098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109078582 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101996095 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110072214 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073673155 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072116073 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074635638 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08551147 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086298169 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121705838 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113040494 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077677632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075020601 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112242508 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11169428 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072451472 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103033676 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096781126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109847196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071135738 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074194247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072116507 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07362657 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080595591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081043275 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074208966 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083550896 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087765948 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081353673 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070898743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072144044 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072129832 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083391023 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082686731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082114823 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080995539 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071916608 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072326473 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073671542 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074391874 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07174913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082449542 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083773993 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082355697 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073486529 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073999328 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074804884 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073907581 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083369092 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081086084 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084253112 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083621698 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072288187 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072769029 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076409145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083336294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082388977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083047974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073078008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083030048 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072200325 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083973198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087553574 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072314832 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07361058 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072402478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073864461 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073240772 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080935584 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080990697 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073549061 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073187558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072330787 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083190804 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08162648 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071659855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081654321 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071395083 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071673107 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073942796 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073733163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079938408 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082722744 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072851312 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071392516 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072818557 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072096062 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070629172 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079340009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081514874 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0815923 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080293808 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072837633 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08100036 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079988161 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072574646 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081222377 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071489122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072489686 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072108532 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079570974 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078630149 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080840098 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07206031 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070677286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078908641 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082116831 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071108904 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079027414 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081783875 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08057226 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070077113 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082004727 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070862527 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080658226 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072290023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081154471 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070939308 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0798453 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071010997 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070820764 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071137869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080600733 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072960056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07097022 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071730176 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071743593 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079878896 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08336794 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072592218 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079168424 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079375135 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072488915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078091007 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070413542 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078546019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070917876 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071115943 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068549688 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081963403 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069825809 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069996654 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071370502 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080741072 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070432016 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079384631 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077326721 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070063631 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080347093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079916127 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077914304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081186756 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071361471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06992478 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069649003 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070488213 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07768754 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078925326 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072357798 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069998799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077698332 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079645111 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068918827 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078101505 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078641869 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078552162 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069807544 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071390577 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080324684 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080957011 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078854897 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078215795 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078307912 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06983191 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076807557 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078332989 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069355836 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084094376 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069003445 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082987884 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078860339 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078734316 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080439559 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08098652 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080019439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083661544 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069832143 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069209941 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079104289 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069700928 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070437628 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077779562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071642072 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071418744 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083022423 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070230137 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079782933 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069284046 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079191512 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068770855 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071309669 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320472649 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074144035 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075196841 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085253368 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076552207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084663543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087091497 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084477923 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074862426 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075772758 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086071728 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084144267 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073903508 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073984626 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075366127 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083847109 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082517242 seconds)
  done (took 19.234209006 seconds)
done (took 38.77057162 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220161755 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162246808 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180026642 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125011156 seconds)
  done (took 2.179810129 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12260453 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107689234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09774302 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070222668 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10436724 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070577706 seconds)
  done (took 2.000305184 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319872909 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217737298 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.19496746 seconds)
  done (took 2.156214034 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218381561 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200986441 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463106843 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28233271 seconds)
  done (took 2.705392255 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149527414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092922882 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072254834 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089198132 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13842314 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164941693 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104380029 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130382767 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083582193 seconds)
  done (took 2.506847783 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153721281 seconds)
done (took 13.131937535 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.221618399 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.105850579 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087627343 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.180959862 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.130888155 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.25588178 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076735327 seconds)
    (8/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078307245 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100721884 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225364452 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069997394 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109329416 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087427511 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211432241 seconds)
    (15/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.162106364 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083220622 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084425278 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.128659209 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.080079252 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.191428621 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078769231 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07975573 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.190240129 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088001493 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08262372 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081929266 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095928998 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.171178369 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.210407481 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080569351 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094723791 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111230166 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175983746 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.186218235 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076840351 seconds)
    (36/309) benchmarking ("sort", Float32, false)...
    done (took 0.140103713 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080166255 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098134359 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180240751 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080669512 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118170009 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.165787122 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081624716 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078178915 seconds)
    (45/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117920239 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22561722 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146940659 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078663531 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.168845502 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091336098 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057576133 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.094214402 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.083207942 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.243180522 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080539263 seconds)
    (56/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.088191286 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.113266846 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086545367 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096396923 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072321163 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0953405 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097690729 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.358477704 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 0.137081444 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073585038 seconds)
    (66/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095652544 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073699076 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081520093 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071072573 seconds)
    (70/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.162203789 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082155527 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06760408 seconds)
    (73/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108799861 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19650993 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.070070525 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096261054 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076601428 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093838564 seconds)
    (79/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06948742 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055860829 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169223245 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113176403 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153923058 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078770304 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091728585 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.235821487 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133249702 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070315644 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.119977905 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.172542095 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098671613 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173290943 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189565193 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076690667 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072359106 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059114239 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148728443 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.119026322 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069585145 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054705379 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126529412 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179086719 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07617077 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077591845 seconds)
    (105/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.117722032 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075573733 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079578999 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094298964 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201995605 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091930204 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093454561 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054739556 seconds)
    (113/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073399802 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215968892 seconds)
    (115/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204407426 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072579396 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133672754 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152305143 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054450188 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161807122 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.15365369 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.149101678 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078451828 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067862386 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190844829 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069949427 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055160723 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155139592 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080001303 seconds)
    (130/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203356913 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055344221 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.146523926 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.0784649 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069452973 seconds)
    (135/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055122261 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081017651 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077794267 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186901286 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077763733 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073189518 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076943567 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076724327 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08970722 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078103847 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071362882 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076527213 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.181787006 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079339984 seconds)
    (149/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081359614 seconds)
    (150/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055544756 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076516433 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055539248 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142043899 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056119955 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071209707 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072436367 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077697671 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071195768 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099150315 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076612231 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077164176 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104441013 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084183675 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077890773 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069070842 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10712661 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161694165 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07046875 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054610333 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098325699 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070944116 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075798287 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193267211 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072458321 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054387975 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119503261 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086280119 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190063261 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077441194 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056578459 seconds)
    (181/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.120491575 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068675883 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083230684 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190036242 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071045444 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159580482 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064618396 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080611464 seconds)
    (189/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054033837 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075189535 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07578964 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068617551 seconds)
    (193/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.235282403 seconds)
    (194/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081069672 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081799338 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20799459 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056105311 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165298152 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096873761 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096668222 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057034912 seconds)
    (202/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072619381 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081465222 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06846622 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069915029 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206786448 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07498943 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054514781 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069662777 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122171849 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076525983 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080027243 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081945659 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077749398 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.118597332 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054777868 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056040205 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194250448 seconds)
    (219/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071771375 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070004715 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187674923 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055138785 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054793873 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070239939 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075815214 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101565258 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108624878 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056266621 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068707171 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057838882 seconds)
    (231/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05549622 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0700304 seconds)
    (233/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076831061 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054554914 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078222128 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148341364 seconds)
    (237/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083584003 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068772896 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068943637 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078575115 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070886179 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16305137 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069913956 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14850581 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054643226 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095179406 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056028574 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141526647 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05472018 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069654229 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057076739 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069417196 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093825754 seconds)
    (254/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06750029 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076716956 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058333482 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095542306 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055266027 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075588966 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076914924 seconds)
    (261/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056022341 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054357402 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054660107 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078450645 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145650573 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070749052 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054562824 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069413212 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054596459 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056245631 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054889647 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055863021 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055551042 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067636258 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 0.14861153 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.180391273 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054697538 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054728784 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054804281 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069930528 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069556061 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077792847 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092024549 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070094259 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068259691 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071182932 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188204222 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068034273 seconds)
    (289/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055053088 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076998447 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054551383 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082437599 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069190405 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092439016 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055709438 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054249403 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053971133 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066639659 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069094127 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074894082 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05439409 seconds)
    (302/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092691609 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100187235 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054277326 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104995572 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074347861 seconds)
    (307/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053921317 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090190783 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07421773 seconds)
  done (took 32.718413928 seconds)
done (took 34.156903116 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089381818 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097333876 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079805846 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097828958 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085723476 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079924243 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077464834 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082265098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084126874 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086182778 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081739412 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058549599 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079040035 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078464632 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079368045 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095409032 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083038374 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077259398 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077674059 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06909973 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077008506 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069043783 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07156118 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057636522 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082890528 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07536644 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07656957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077972038 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06923779 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069954457 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073898198 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077665157 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06906441 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082897828 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076765712 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076909865 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078641342 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08073123 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071059232 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069371188 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07844688 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069090656 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077688984 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078416692 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076388593 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075103015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07742119 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080789845 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094656165 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071287315 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079200864 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080938142 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079386358 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076945826 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073454943 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077286245 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074916806 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095233371 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077092286 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071180144 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078077019 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078232743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074893477 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077339933 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077508003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07951723 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079534248 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075614762 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079281401 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076043602 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069167504 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077187775 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073501461 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06960369 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080216212 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082349188 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06793098 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075717128 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077127724 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075467755 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069113862 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071384567 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073610251 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075982752 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07125514 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057712096 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07352098 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075830665 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06809826 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077809635 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076085181 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076876051 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071087701 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079590337 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068729787 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074443386 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069406108 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068983966 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071064283 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073653644 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068584745 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070897576 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078977516 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070883128 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075898492 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082262384 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068838885 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07598947 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068032509 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06784645 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08244721 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078413984 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068973537 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070826845 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0675296 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076274075 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067514935 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068913517 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068833192 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068741252 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075161438 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06876115 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071098007 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076339996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082052097 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069335158 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072454859 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070661853 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068996883 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075061406 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.20386008 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070172233 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072343593 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067121017 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072135306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069550387 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07741899 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072004643 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077761395 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071377961 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078131314 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075210558 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076853819 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075242643 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069115744 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063316595 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071504027 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071763632 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071417942 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069736364 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071645167 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069657937 seconds)
done (took 13.108028311 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070415723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143957886 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100665163 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10088935 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090058208 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070601458 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079504082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103539359 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071586614 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104753458 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09234934 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090047431 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1183843 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068062385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070230177 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074048469 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071052327 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085037172 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103535353 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090868202 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119636547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069152017 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096489266 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093831256 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092141171 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09863266 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070993084 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073532966 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073792914 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106126225 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092766628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074025638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07059938 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102242165 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097614309 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087530081 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069967572 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086830043 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070478348 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069383268 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071575123 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102896813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083637804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084683509 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073667824 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080499374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070981113 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087371678 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09353913 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082307257 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089807012 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104407583 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072506594 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087972172 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068197413 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090263445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080795695 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072532445 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07011136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078567538 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069851233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073098178 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08444471 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084508051 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074252695 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088951335 seconds)
  done (took 7.133319543 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087853138 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096753614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087118594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087963816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06958698 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069745746 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069548599 seconds)
  done (took 2.100173446 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070467595 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093084234 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093921591 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093741696 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086211276 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091915244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080268427 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07012373 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091841432 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071626071 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09202791 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105276528 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073887656 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077739798 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094908047 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070332437 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096136897 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069929876 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073484 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095520496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072972873 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100129714 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074000954 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07057158 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085020775 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07038687 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119137412 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075109118 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072128962 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074238323 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068613853 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112483092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084675023 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078090205 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071236956 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085466593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085643635 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068861859 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087444874 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080011557 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084434946 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071201606 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071358236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068674847 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074621429 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081899045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07161656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071227213 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073223444 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090800774 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071559295 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08385752 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073465762 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07621762 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071762974 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076809984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081292836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071758142 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091113143 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071940628 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087564253 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086560646 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084940269 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086520625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072613762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084176198 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084509362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073004368 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072348725 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074401185 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086905957 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068971759 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0720461 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081711273 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072325446 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09457824 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094349995 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072858803 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084411981 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07182338 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071126433 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070853008 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094360788 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075759516 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070298442 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075073936 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073578386 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068933901 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070066553 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074463895 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068527628 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072444283 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073556371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073787704 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073171096 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088709095 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072754972 seconds)
  done (took 9.253050386 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072094124 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072535034 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073134367 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071625388 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071848992 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071808405 seconds)
  done (took 1.988263537 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097295429 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072814261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08459212 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075478283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109727194 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091158439 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091340129 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081425573 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087768924 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082654051 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091144118 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092053675 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096051349 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076148897 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091173326 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075264065 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091330064 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078332592 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082624783 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076341958 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089628773 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076188285 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076400972 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086022183 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079508988 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075487146 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081799908 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082307634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082246746 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082406223 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07589782 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079674301 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073831244 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.0812117 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091291074 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074027214 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07539482 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080519109 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075201907 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079847701 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0922349 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076287985 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078297547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080847628 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.0819294 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074579278 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080675107 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082998541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091528003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080695156 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080471492 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074378186 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078964019 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080742932 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073901982 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081941652 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080850594 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091452497 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076356372 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074008281 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073181337 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079575786 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081313157 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079648362 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084370544 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080656372 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074376449 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075969753 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076827214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074992103 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080761579 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072120313 seconds)
  done (took 7.403381282 seconds)
done (took 29.394953486 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539016566 seconds)
  done (took 2.06039007 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63709159 seconds)
  done (took 2.181497516 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.51904555 seconds)
  done (took 8.063685859 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401684748 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.509112916 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753118338 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139356927 seconds)
  done (took 3.388018881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723866975 seconds)
  done (took 2.280260531 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233606629 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220080507 seconds)
  done (took 2.02037034 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384109236 seconds)
  done (took 1.93099709 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.150163004 seconds)
  done (took 2.695243996 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26639133 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184130797 seconds)
  done (took 2.00035184 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497288641 seconds)
  done (took 2.044859358 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.901492322 seconds)
  done (took 6.453487304 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221305435 seconds)
  done (took 1.818014216 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246471899 seconds)
  done (took 1.795699494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739062083 seconds)
  done (took 3.289012053 seconds)
done (took 43.571736481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087026919 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089780873 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089218017 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084654477 seconds)
  done (took 1.889152969 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080150378 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076597879 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079991342 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077249442 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080319218 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076207876 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078085192 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078842617 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076331534 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076526672 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075895626 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076130013 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078426876 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078084683 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074650879 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078544647 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079822365 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076376803 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079215385 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076454804 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074128243 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078227023 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079083366 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075478452 seconds)
  done (took 3.412472093 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082637236 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077234284 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079268318 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075569836 seconds)
  done (took 1.874133529 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081917738 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096502377 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09395664 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081797458 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096565503 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090046037 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072855107 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072919435 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074047059 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080954237 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071631944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09976035 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091961948 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082126798 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083558063 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069373804 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071916223 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091472953 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082299284 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082473588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07451342 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082004795 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07221698 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092324569 seconds)
  done (took 3.545041587 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090211475 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109064902 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085062043 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092988805 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094793055 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0687036 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09188948 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094663777 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130812223 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068692542 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074533159 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069122729 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077096491 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068977446 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084805747 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112348546 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116328099 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07290001 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100894565 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068889066 seconds)
  done (took 3.339381088 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07644107 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073328761 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071251419 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070221921 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082193544 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076172471 seconds)
  done (took 2.017998832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07167014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072259734 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071457366 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070448535 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075897663 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071071792 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06925289 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071534806 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07178309 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071290668 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071120565 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069943949 seconds)
  done (took 2.421644412 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203950918 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072284556 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073222483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070256596 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074039571 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069746342 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084795275 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071482256 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096027617 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070420731 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070618273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071976184 seconds)
  done (took 2.595075808 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212379296 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079703072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243116266 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155426397 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114768145 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120022744 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117475064 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117790465 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145589651 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104300493 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171205257 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17066183 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111591794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140473923 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093019374 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103062194 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157755742 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167360021 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109260902 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169218311 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149411382 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135087443 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151399366 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105847425 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109915875 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125859168 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074857289 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083951342 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173039892 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137640566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147656761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1150709 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095513236 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180789211 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175375504 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144374369 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151417695 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088808143 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105779582 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137271441 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203385973 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09283697 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165326953 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25183849 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08530447 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137726439 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123927929 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122233008 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108653983 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093876105 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151920372 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187631953 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141525531 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092040897 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128697059 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118724829 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119375816 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117808028 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185413666 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167160861 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130781454 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075374701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113331857 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15556208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137005876 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112539598 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12911186 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095344525 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138824105 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157872763 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127167781 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147545992 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121257655 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09249565 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121407554 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14333367 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13062357 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16443128 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126754971 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075847812 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125998908 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105361382 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08406639 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152628196 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078988358 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17858852 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102505503 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10913062 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129020699 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112213628 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112188925 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161264004 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146645088 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106305272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.210827166 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10973206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124747567 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14971465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091865374 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113420696 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119801148 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081515238 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141363925 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080140873 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127226723 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079113222 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12776783 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132540451 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082125371 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126676889 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108283895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103780097 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136304624 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162657436 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091425107 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085345435 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172451325 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125328033 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107016923 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148245656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160851151 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10231308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104754734 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153210606 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181785306 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09319429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165527018 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109600651 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087173866 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090962382 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126640577 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115106372 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127103456 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08498186 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120119169 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17109954 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078347699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098900481 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137328793 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08176889 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083827749 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108287199 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107989331 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099085498 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102578764 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105752125 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139309723 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125346977 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107346384 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125780314 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24660308 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177312597 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091702225 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106195365 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107699432 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074434668 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139412806 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161277326 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083504748 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167573907 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126158687 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121867417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123102465 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087416563 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144155504 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08317069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074063261 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148688585 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113837097 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112920798 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153705222 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12044412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129523407 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125039909 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136959908 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135522169 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133009959 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108922906 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091271775 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114659778 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129984539 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077361649 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094058422 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083029736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10826521 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09892625 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086488288 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144959873 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127176044 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114433291 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114249222 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100139697 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150132762 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079614813 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131457824 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122598268 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098451224 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153939278 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153639489 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133855 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101982211 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139628196 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073448899 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07665386 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090541559 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124465173 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231817751 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08729629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120272574 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150991641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133248047 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141616486 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128817879 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124503774 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159160085 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073308024 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123861745 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150336585 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125222787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109346074 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094415525 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102780754 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145681573 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111463775 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186381093 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116735953 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126956932 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156956861 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104348779 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083394728 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106136956 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139072035 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10688339 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146154523 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102112863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091901046 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113025991 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078767431 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101372607 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129778987 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12159645 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137292856 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119113678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135792292 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081327217 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118579448 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12464675 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124686452 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067555108 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123072702 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161723238 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09855233 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120620096 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154519822 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08200161 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138763319 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175605573 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291735962 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089545655 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113485055 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124454274 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132017431 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123600163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144491427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110879448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140509992 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113539198 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089181806 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091304507 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101278601 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10876039 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098691096 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10865298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11694379 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09917077 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137504774 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106709214 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113482093 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120841365 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103439885 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0950138 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10127249 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179475067 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122418859 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174362472 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102975893 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147987645 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166343912 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078928543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082278748 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081051806 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143461062 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087449562 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13313702 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111278837 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121391634 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126440441 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146117258 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098415502 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072328481 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114586916 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135922906 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129068392 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102447127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106995351 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164622544 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103366173 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082518626 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117097787 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120601284 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106113067 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172303169 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064830155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108332158 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079638416 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22894687 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131583644 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157580266 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084068167 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107350877 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121952552 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115163023 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131627404 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10700072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113902973 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131569631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154924753 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131166048 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093920722 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11573017 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131167989 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158988331 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108538492 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100233746 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175328873 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154335983 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162271772 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091681833 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116631385 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115601975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111011 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140042482 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087284967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165614591 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085156208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140103583 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106507816 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091698812 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132040364 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112641585 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092140833 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150660583 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120533061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085985286 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081258239 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121256438 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121874253 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109440906 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078263036 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140920722 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076413324 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134056475 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16134342 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083779732 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106987383 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099201057 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08195102 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255156495 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107666417 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091839663 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1028314 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173914343 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089619038 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153193129 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137319005 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117345141 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137707833 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105211886 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643560064 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081359857 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156226702 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120337385 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177130177 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104156592 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120440164 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112588526 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125272592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150506041 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107556096 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188060142 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13582916 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119232565 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083013168 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10560535 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10644518 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091477042 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110839444 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115482719 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118672527 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095861942 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118982434 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126424023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085944996 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09932658 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158411592 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119939737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147107123 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143813119 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089558961 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120141287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139691698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083594462 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122943888 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155042474 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108424842 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102989666 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084313913 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103466511 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307106511 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078890934 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164941381 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123744287 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112927924 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115176101 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114921662 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133442991 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110823338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125678357 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09659361 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111972874 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118225637 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085802122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080801937 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111711354 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115616969 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101578902 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102097342 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102356262 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15298738 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075207578 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102236588 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118998974 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147326488 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177930132 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091849548 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086604731 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12257042 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117852543 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116001844 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124080718 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083112415 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085134871 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083160299 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081416653 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111825079 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11585042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117873431 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112951228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166038384 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086751261 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239561983 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099002597 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108110273 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073450705 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081896283 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099619588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101880722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110828678 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114377028 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162704066 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098661855 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092731256 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09410808 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077651799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087138807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129995074 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111056102 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265377096 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105671588 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066429738 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112203426 seconds)
  done (took 60.752438356 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110291209 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086307476 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100309031 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147977424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12614976 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204936421 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154654772 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192644859 seconds)
  done (took 2.794051514 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071474786 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099351753 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107045015 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088181723 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070765769 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072778299 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234073161 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084875996 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070296343 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100596547 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08220437 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073329235 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43957538 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069744353 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071204056 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065634605 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070624147 seconds)
  done (took 3.535055695 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407041153 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619665816 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.3626266 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079566947 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.921858611 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093578271 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.14082563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13857959 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082104428 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528621372 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408492792 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136626697 seconds)
  done (took 18.594319187 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084845577 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078050226 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092493972 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09359349 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081040095 seconds)
  done (took 2.102137851 seconds)
done (took 110.459160011 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084900147 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.61683247 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05635738 seconds)
  done (took 2.376678616 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08689826 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088219989 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08864878 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087705681 seconds)
  done (took 2.033561939 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076760538 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079912098 seconds)
  done (took 1.832873794 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239564848 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171358495 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100050835 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086929555 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082540037 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083313662 seconds)
  done (took 1.935976143 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076279475 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079296332 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075485173 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079511204 seconds)
  done (took 1.988913181 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080442383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055594725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057824994 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061022052 seconds)
  done (took 1.933430361 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092142005 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083679083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081686857 seconds)
  done (took 1.93777093 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106372076 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090428152 seconds)
  done (took 1.876039965 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085529799 seconds)
  done (took 1.76575785 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098596775 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10433342 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135857684 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114507288 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143336302 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112946003 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087825353 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089715878 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079750498 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089748419 seconds)
  done (took 2.736479324 seconds)
done (took 22.684376225 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083255738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378480915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364263442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093558754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672644393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359796696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002881596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09728565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119304028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071506917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089033273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650680469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993629888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327954646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982393498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332099034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652206302 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071428917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071196409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07151678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984279949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070823712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071645518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071978423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651654625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376486022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071456421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327241392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071765803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073601807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358690261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072068432 seconds)
  done (took 16.351282556 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07387007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125933762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076897409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088511728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074130472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073537521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074683804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088887072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125181491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071683959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088542266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071214439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074972896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072084813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091001635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071829508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072189225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071885706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071694135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071818939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090714474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071204562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071646173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072302222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071611058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084284155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072055927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072319547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071930055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073549211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074089106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072366703 seconds)
  done (took 4.222576188 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119696263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128739369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078145425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108838404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115901981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073820022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148159701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097873809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13155137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072031776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088907195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071854963 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106642754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07223895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092183713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071534255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072491737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071716423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071713912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072489168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091989401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072008789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072353014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072756337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07218918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086185088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071980049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072360367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072904064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07378203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075493219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072640953 seconds)
  done (took 4.468355448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076801229 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07906063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087072581 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088911127 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073772384 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075698544 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076771001 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073215174 seconds)
  done (took 2.329923825 seconds)
done (took 29.055915958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082693693 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072074614 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076182428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086345531 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077549926 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082634642 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070794851 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079631841 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076349309 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076811268 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078466789 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070679802 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074921992 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070153895 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077518061 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071182901 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082997437 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075591809 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08272998 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083071405 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073734072 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077411852 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079309751 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082910494 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083262415 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08313547 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081296681 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076318932 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072447007 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074257323 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082048423 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088160087 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072130035 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083864155 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0710024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071759571 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075364806 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071543705 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083610073 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080173247 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073190338 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079951846 seconds)
  done (took 4.942493374 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091315494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096281509 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089379088 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065588551 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069946072 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069348517 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092888902 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063078192 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062699503 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091785781 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0588882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063174916 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067057378 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056702948 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063732115 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059957535 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065229499 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059086782 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063907734 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062908228 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093196648 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057067377 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082097849 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066793628 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059529336 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065073032 seconds)
  done (took 3.537650737 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078084591 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089558533 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094463094 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134917489 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108159442 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083411979 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082762462 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09938062 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093370644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070310312 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074584953 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096774574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093540886 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078296181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071457905 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089771552 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087741895 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073117285 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077010803 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098285213 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090710949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089857347 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099929675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087106998 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070405701 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073128739 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075231011 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084791919 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074095442 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080601478 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073801538 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074575807 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073034041 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083475711 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074352459 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072851566 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099462778 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08101939 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082900281 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071656704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079428398 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072088078 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09642062 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131248111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070923385 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077705576 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075199839 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081863678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.081893607 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092133757 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083157818 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070744984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074289668 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070062512 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070559309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074876532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072732115 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073447963 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080143046 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076918833 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096307761 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076374534 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087614909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070956945 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079222485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070178009 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072576835 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070000558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100030233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07274072 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115501103 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073483127 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072425573 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080840164 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079754214 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077703085 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071433464 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087510115 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081891446 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075084035 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079642547 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074413338 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074453628 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095335648 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073669598 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072973595 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072007415 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077762037 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073928032 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072886967 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084394111 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070515386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074364308 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088318205 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071091955 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072808043 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077082558 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075946607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071064867 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082886879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075403809 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072301787 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081415287 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071343742 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074203711 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084470776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078678909 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070399201 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075453633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077014578 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071496696 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072857921 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073878856 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073184803 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080900147 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078194793 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075657881 seconds)
  done (took 11.132225326 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169449957 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163063889 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073947505 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154624886 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081338511 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082785739 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157188443 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099328763 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071276051 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072529289 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07262542 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115270891 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110964101 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120521221 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082533199 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071911342 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088956108 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119865814 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158818482 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152669939 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089092735 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080640631 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07386846 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072866425 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074465804 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082480235 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089503501 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083292108 seconds)
  done (took 4.597174523 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084479133 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109905171 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078843008 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095980431 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094983912 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071512763 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073883687 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073333285 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085606336 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08191986 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071072333 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077094323 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078708725 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074673058 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072332903 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078438872 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078581305 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073342126 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074947854 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077257374 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082567292 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09659382 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07556287 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070863902 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076943903 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070787448 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066648779 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088599478 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072483817 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100290069 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.0693522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077714583 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087520573 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072662419 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071529892 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071489983 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07136806 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071424683 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07325248 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069967787 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070600107 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060638566 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070629192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082584175 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078520433 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060063887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076564361 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076941378 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077259062 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069499587 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074450901 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07463844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075072417 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078984334 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075837774 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076517469 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07243292 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077958345 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080933621 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071162483 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069123041 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069957287 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076843201 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068466121 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081035925 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075922284 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069715829 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07158518 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074165196 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078257168 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071575793 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076365647 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069296137 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073570162 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076216883 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073637091 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073073921 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069840368 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071317427 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071588956 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058826988 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071182478 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056576762 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074462547 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069678565 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0698252 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071403096 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076308046 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082655529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072745823 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077446075 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073261589 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07047208 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074611181 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064081305 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074531043 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082518622 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085535651 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07132406 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069500222 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085724872 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076315601 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071244534 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06006679 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075976157 seconds)
  done (took 9.631083175 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095319603 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074774427 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088725102 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09523558 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091491599 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079460653 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081315732 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073488979 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088052805 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078075755 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081187367 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071392924 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082239937 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081507589 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074323551 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082453745 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075661309 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088870428 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087722441 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072001206 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080261848 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085143084 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095286381 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086987887 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084793651 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086175795 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094943345 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081203968 seconds)
  done (took 4.078725069 seconds)
done (took 39.611295744 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.78154175 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.029631343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.774745944 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.129450657 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.850117305 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.937528782 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.864125523 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.769904129 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.872160196 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.80366315 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.035604657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.985292409 seconds)
done (took 65.543662642 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.81884786 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.910041841 seconds)
    (2/2) benchmarking "String"...
    done (took 2.012413732 seconds)
  done (took 5.627986059 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.989223287 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.366485086 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.021351974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.768746445 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.775662412 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.088319967 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.580679906 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.280804693 seconds)
  done (took 30.590408935 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.987890535 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.99510681 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.489180839 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.529356005 seconds)
  done (took 15.761938971 seconds)
done (took 63.579738658 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.782597105 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.771503674 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.772647962 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.755330261 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.832011505 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.781346057 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.87346743 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.016988838 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.771788491 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.763622173 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.774049766 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.252110536 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.77646234 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.890339153 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.77384567 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.776020221 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.799030461 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.200325983 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.930437609 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.782284601 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.783744201 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.819615698 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.77972589 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.770347262 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.82407389 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.771826714 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.162366743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.776556878 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.400360446 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.772448308 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.800417023 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.080760467 seconds)
  done (took 204.526154057 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.772134533 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.743598481 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.789375109 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.786582805 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.296414388 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.98608751 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.883339322 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.329201621 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.779345503 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.788202004 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.93330048 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.775480121 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.966423737 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.727084675 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.802675733 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.882371378 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.991283586 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.982323124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.811696845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.923505257 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.777660793 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.800615477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.753234631 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.926096342 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.784232388 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.775192272 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.778252995 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.939851643 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967059451 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.961235927 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.786015241 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.817073112 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.993647044 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.650763781 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.778327054 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.775193255 seconds)
  done (took 169.924352547 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.950518939 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.774026624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.773725014 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772788657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.784621355 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773411231 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.895593973 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901730721 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.381773797 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.398331459 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.776726375 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.824443204 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567472018 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.773506422 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841400815 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.787750337 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.773740055 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789078087 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.801210412 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773587134 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.774690338 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899566479 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.786772196 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.76541779 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.783290733 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.775172724 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779180973 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.147525525 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775324817 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780894978 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.032783158 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.775601286 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774424128 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620484677 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.364463253 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.867975316 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.777989039 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780404902 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.774438555 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.991707908 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775266861 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.775478173 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.777998269 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915793263 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.77514668 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.900577484 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774914443 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.263549207 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.775799377 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775129216 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.645749672 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.367822609 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.779912605 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.77554891 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.778337786 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775802479 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775952108 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.781531747 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.645196618 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.851590573 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.777256676 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.77851391 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781799027 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.776181368 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.805065498 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779380688 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.809311004 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.835762008 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.005929967 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898841631 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781234488 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84279234 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870052014 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.777159398 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.776232394 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.776060791 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.776829439 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.776533723 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.857475018 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.777069122 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.901344965 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.78419222 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.77830459 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.829589789 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.845322513 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.776565859 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.77778096 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618757565 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.781853958 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.778195854 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.049303481 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842643802 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.778300198 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.776973342 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77703571 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.916252307 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901253119 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.493461856 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781177582 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.77833349 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.624516138 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.781173863 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.9273656 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779855612 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.912349304 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.782405047 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859497418 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.784577518 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.780386959 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778311418 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.811956898 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.779382209 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.838269971 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.779086997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.153917687 seconds)
  done (took 402.20472656 seconds)
done (took 780.369115588 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417469088 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.384694006 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483740307 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.404273593 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.377410942 seconds)
  done (took 13.784059929 seconds)
done (took 15.499933333 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.868486874 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.875301327 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.804431547 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.870896142 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800703703 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.87054382 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.854548617 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.805065062 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84000934 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.804258987 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.841244967 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804955051 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791453392 seconds)
  done (took 25.549296806 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.041198184 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.009656432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.852617779 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.018436392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828104289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008413031 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943785597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.934569524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932818796 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.79855264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795317734 seconds)
  done (took 22.881680958 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008057998 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.019639572 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.85817931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.008206991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.83266335 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.013901778 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945035559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.936688009 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.935158667 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798162675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795868059 seconds)
  done (took 22.869924358 seconds)
done (took 73.017117691 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.791475966 seconds)
  done (took 3.509792346 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.818640269 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.98701385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.798110232 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.795027371 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790234504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790373354 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.794469719 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.791206915 seconds)
  done (took 16.284561592 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787097975 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.790251069 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.789848672 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.791024302 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.78717467 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.787606392 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787719488 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.786436804 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.786485976 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.791833716 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.790874823 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.790552794 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.790543236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.788098834 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.787877162 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.792055303 seconds)
  done (took 30.344492633 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789540202 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.787835049 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788106869 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788666139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.788735019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.789068935 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789261774 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787747589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.787844704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.788256634 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.789249486 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.78891551 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.78827028 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.788272762 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788795179 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.791026523 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.789336108 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788732182 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.79392904 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.789029634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.790113262 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.788806533 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.789476067 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.79027077 seconds)
  done (took 44.66162573 seconds)
done (took 96.518607032 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.522875527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.416476265 seconds)
  done (took 9.659723902 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.793981935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.793006819 seconds)
  done (took 5.361193735 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.792172886 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792059867 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792712878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.792054058 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.792477669 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.792372782 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.791956821 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.793250357 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.791947816 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.793581398 seconds)
  done (took 19.646209029 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.792553534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.792064921 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.789281667 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.791989383 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.792803162 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.789824409 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.792139874 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.793535811 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.792348974 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.789990941 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.7922975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.791589697 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.792349209 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.790489104 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.794783483 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790817267 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.790626132 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79034113 seconds)
  done (took 33.971646868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.792899397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.79340891 seconds)
  done (took 5.307828138 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.79061543 seconds)
    (2/7) benchmarking "second"...
    done (took 1.789936976 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790503073 seconds)
    (4/7) benchmarking "year"...
    done (took 1.791319299 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.790929603 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.790973961 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.790450598 seconds)
  done (took 14.257235866 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.795001262 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.965021964 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.022946187 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.458288953 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.796251554 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.798275416 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.768605302 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.799814993 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.800252918 seconds)
  done (took 19.926944529 seconds)
done (took 109.850849433 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.608617778 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.788018339 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.021924469 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838888861 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.847367473 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.128182298 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.80537611 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.105731633 seconds)
done (took 42.867393349 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.798611827 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.013458586 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.094472346 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.814070734 seconds)
  done (took 16.645414562 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.775056215 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.310361841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.826056584 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383133546 seconds)
  done (took 20.050832168 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.15875093 seconds)
    (2/2) benchmarking "read"...
    done (took 2.135544601 seconds)
  done (took 6.023228165 seconds)
done (took 51.243764647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795901696 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.795062037 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.795318733 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.795687341 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.793119155 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.795623342 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.79340619 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.793527213 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796632599 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.795900305 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.792757627 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.797155994 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.796627902 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796740138 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79371772 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794833417 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796167659 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.794004406 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793257016 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793258531 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797238448 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.793659162 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.79436726 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.793623311 seconds)
  done (took 44.802144631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.797384902 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.794696638 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.79785621 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797780933 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.794728218 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.79819385 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.798223263 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.794542807 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.797521941 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.796507518 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795302472 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.794566203 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.797381544 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.794767827 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797419255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.795019037 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.79724842 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795474135 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79937556 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.796171376 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.79915627 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795179932 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.79555297 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797215395 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.794815822 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795757687 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.798517137 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.796260799 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798172855 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.79630843 seconds)
  done (took 55.623626268 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803140344 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.807524019 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.798861661 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.799704533 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.799107621 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.798465581 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.798888129 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.799782218 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.799088136 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.79869532 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.799861461 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.799383803 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799096577 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799190992 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.799528847 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.801221044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.799445476 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.799409927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.798648809 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.799772465 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79971344 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799876109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.799801466 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.800421957 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.799458273 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.799391855 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.799286038 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.799246332 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.799808319 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.800290771 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.798989603 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.80138056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.800521073 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.80021264 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.79995356 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.800432982 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.804672102 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.808056641 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.801760066 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.800930902 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.799778713 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.80014974 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.800340641 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.801314853 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.800486762 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.800642665 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.800747915 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.800384188 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.800848743 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.800626798 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.800715637 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.800612864 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.80103501 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.801213898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.801850384 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.802184142 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.801224004 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.802209946 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801949169 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.801164667 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.800801034 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.800639553 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.801662195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.802108062 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.801705857 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.801840445 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.802325751 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.801746295 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.801169325 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.802518039 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.802091134 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.803338821 seconds)
  done (took 131.384365931 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.802298155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799924679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.799161364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799390699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798634692 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802014289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.799947345 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802212084 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799353359 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.803410717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80167874 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.80005039 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798989158 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803334467 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802461812 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.799979106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.8037651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800906614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.803710766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802942854 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802761223 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800112336 seconds)
  done (took 41.35863302 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803383509 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.803580912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.801164608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.803601497 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800777703 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803537056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803644212 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803714545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802368068 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801246309 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801590885 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803541596 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800429639 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800299905 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800150137 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80135533 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803608414 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801365667 seconds)
  done (took 34.171184544 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.802714149 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.802432471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.805449138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801777923 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.801279603 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.805124233 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80210496 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804978566 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.805144346 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.80204998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.805014367 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805538574 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.805807711 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802050752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805205387 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802422092 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.805789786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802075007 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806496186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802101051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802244944 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806262439 seconds)
  done (took 41.417455558 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804744189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804790139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.801909397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.802582499 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803537017 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804878625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.804847887 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.803036574 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.806778157 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.805805315 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802399985 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.804932406 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.803376718 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.805001669 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.80348587 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802284476 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.805843275 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803171165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806107551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.802871623 seconds)
  done (took 37.816722398 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806129184 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806609543 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80679385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807249412 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808015437 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.807844244 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807937834 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808001335 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807860141 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808921664 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808394646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80799812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808068938 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808670245 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809179999 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809254099 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808345279 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808569448 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808353545 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808361217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808674587 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807994884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809040907 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808597182 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808874167 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808485737 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809046446 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808900057 seconds)
  done (took 52.365919939 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808753505 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808128802 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.804303799 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.804714335 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.804793013 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.804765825 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.805409981 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.80685145 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808815918 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.804743597 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.808090919 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.80774093 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809063705 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.809076973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808764879 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.808352793 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808480717 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.805963911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806942871 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805363477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.809198748 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809405787 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.808326022 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805540417 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805970655 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.809168046 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806766319 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806194674 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810622782 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807118344 seconds)
  done (took 55.954215605 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.826103501 seconds)
    (2/2) benchmarking "in"...
    done (took 1.827442843 seconds)
  done (took 5.390850824 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.80636529 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809454739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.808709134 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.806575814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.807113072 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809509432 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810145047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807324497 seconds)
  done (took 16.202746652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.807789931 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.810115526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.809585718 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.810794566 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.811355563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.809570389 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816076461 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.810554315 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.813805075 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.811078062 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.817079065 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.819253387 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.811698391 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811718512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.809865136 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810977907 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.811344605 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.811443396 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.811116514 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.811558183 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811746287 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812353254 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813804718 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.808017467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.812550323 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.822586893 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.814248719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.810636247 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810559063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.814922733 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.81038112 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.808278771 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.81187275 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.812620985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.811452874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.812116865 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819039476 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810905658 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.818206066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812632016 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811688834 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.809839042 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.81151876 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.813531247 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812710185 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.812742376 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.81256503 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.809837832 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.813140352 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.81658229 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.818229267 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812244607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.810299819 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817815971 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.813441438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820193518 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815381728 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.815592845 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.821555016 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.825014271 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.827773139 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.82004924 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.813883372 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.813696279 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822128966 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.836124351 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818928004 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.810742911 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.81044582 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.813381288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.821870279 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826030864 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.821809922 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814264333 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814514973 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.813650987 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812700083 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813411095 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.819465315 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.817949734 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.814123137 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81531997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823089989 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835915655 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.812546652 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.814483512 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.814806727 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.814623856 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.815045346 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825463118 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.815799494 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.815582605 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.813916245 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.814276866 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.814558471 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.81617798 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.812664217 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815989744 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.812054628 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.815216516 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815983321 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818007862 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.824079804 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815863126 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817338192 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.824167152 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.815377471 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814132725 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.823035672 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.815487658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81613969 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.816036725 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.821415682 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.812703956 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818420295 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824247458 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.817092031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.817505843 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.817179283 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.816733363 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825240205 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.843795001 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.817304288 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.817382432 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.821156401 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.828747873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.817270568 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.82083693 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.817716442 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.813232459 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.815783701 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.817835538 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.816791201 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.817472579 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818175473 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817103822 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.81427275 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.817788818 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.818459992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.817800949 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.817727135 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.816948499 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.818367316 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.818325066 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.818019958 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.818177644 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.824342165 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.81743445 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.819204375 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.819310832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815038736 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817752303 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.821574313 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.818894164 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.819679672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818838154 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.816872842 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.819039446 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818859976 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.818402703 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818679862 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.81911861 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824026133 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.820229737 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.821628598 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.817047969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.815792545 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.820046228 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.820019929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.818529519 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.820530115 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.817362395 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.8226121 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.828149761 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.819636336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.820399649 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.82054202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819791895 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819759661 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819379204 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.821221454 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.82716697 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.819894163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.827980053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.820483707 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820676746 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.819139826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.818452322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.819006671 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820278705 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.822027622 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.827408227 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832724408 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827443001 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.819878614 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.824240052 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.819975828 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.825527907 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.82298976 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.820896237 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.820949819 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821023017 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820261771 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821270402 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.821072497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.82192646 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.819357143 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.821196788 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.820643616 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.821883309 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.820643545 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.820859617 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82172544 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.81946228 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82143555 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822250461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.819963274 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.819195976 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.819573412 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.820214395 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.821205191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.822850047 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.829981611 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.81836993 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82137391 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821943996 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.820036639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.82091124 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.821768273 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823175674 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.821620002 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828706889 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.821374779 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.822466095 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829224898 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.821986986 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.821052641 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.825986793 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.822851429 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.820056981 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.823833239 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.830137894 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.822457548 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.824170085 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.823089061 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821501077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822594892 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.830536414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.819615129 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.822152064 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.823430746 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.823051133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.821008039 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.824510738 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.823545573 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.824187607 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.824361015 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824036623 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.82371883 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823184194 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.824386175 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.824781915 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.82386517 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825520079 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.832409259 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.829169101 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.824426235 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.825024475 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.825165906 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.829093158 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.824548668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.824837079 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.823535862 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837502302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.834076358 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830186542 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.828353459 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.824693267 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829423131 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.825771548 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.830434916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824454913 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.824709947 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.824270917 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.823511948 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.822799777 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82494633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.825469236 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82622964 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.827127558 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.829338604 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.825083745 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.823328498 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.826139409 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.825797598 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.824698463 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.824587266 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.825899906 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.827473437 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827587163 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.823313 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.824728383 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830471942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825007492 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.827952522 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.824326283 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.824937152 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.824042595 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.828383122 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.827318234 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.828057737 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.834826471 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.828415977 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.836884559 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.826541088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837806188 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.827013563 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.829092338 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.836696036 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.824254489 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.825107683 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.826740619 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.828560315 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83219406 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.827917125 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.82704373 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.832371026 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827722641 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.828630252 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.826899139 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.828200943 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827307011 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.828534089 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.83581171 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.828418825 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.83191375 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828461099 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.825254433 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.828573143 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.827189327 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.826273274 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.832611626 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.828911333 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.828061434 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.826442408 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.829019973 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.828054761 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.828997066 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.828316166 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.82509799 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.827800832 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833504396 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.828891046 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833296456 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.828618444 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.838748609 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.82854554 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83487605 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.830224639 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.82856013 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.82961335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.82880937 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.829436079 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.827639163 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.831741501 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.830627691 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.830093481 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833951499 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830838118 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.830660353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.829764131 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.830371201 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.828360116 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839087568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853863986 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.830005926 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.833740459 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.826590308 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.830824494 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.834211071 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.829872715 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.82905527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.831519263 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839602891 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.8379826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.829861113 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.83214345 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829570313 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832111238 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.831295855 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.830068177 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.830909594 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.830772923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.830170432 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.831051001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835001669 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.830748411 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.831949054 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831608833 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.831265017 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.844022172 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.831547982 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.833416283 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831367142 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.831634448 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.830285923 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.83014885 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.831776419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830658841 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832154482 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.831612947 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837646408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837316545 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.835425876 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.830883555 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.832841024 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83187513 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.831217699 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833200311 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.832380742 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832771096 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.833007918 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.833521953 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.831894486 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.829884298 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.832032145 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.830758629 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832500074 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834260191 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.838889121 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831763914 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.829685317 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.832473996 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833164319 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.831182712 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.831973874 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.84305771 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835599016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.843683825 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.841959203 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.838453764 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.832698728 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835891829 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.84196191 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.83167949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.833694806 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.835342341 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.835649981 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.833788937 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.83650506 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835441294 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.843503028 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.833859543 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.833548527 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841109435 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.835048094 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833846254 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.83449521 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.837293446 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.832532094 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.831171691 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.833568077 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.833379199 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.84056974 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.836530495 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835483787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834952577 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.832057598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.834937389 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839885202 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83524938 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.835612199 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.831286905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.835364768 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.834416839 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834975863 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.83156977 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.833594905 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.833717361 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.836632363 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.841669901 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.832496453 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835702204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.835081588 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.836210048 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836056685 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836028376 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.832817399 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.832603084 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.835451139 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836412378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.834997328 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.839546146 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.834479465 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.835680525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.837490299 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836690904 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.838029796 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.845560213 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.843641357 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.833982439 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.83592984 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.836680405 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.840048447 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837057805 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.838362775 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836444785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.838159428 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.837234799 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837627424 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836762666 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.839193083 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852403295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.836864661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83638809 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.836834856 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841820659 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.837144978 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.833624509 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.837317892 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.838355778 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.839103412 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.845671797 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.837693366 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844043981 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.836291952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.838597394 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.842827686 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.840844061 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.847003533 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.842665791 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.839715432 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.837939152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.842943229 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.855767611 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837516102 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846717829 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.867177658 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.838150703 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.841229104 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.839241352 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837163745 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.838566285 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.838794443 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.839707615 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.839464606 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838264604 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.839894377 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.83883942 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.845283898 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.840246731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.838627957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.839305675 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.838709121 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.839491647 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.836404076 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.839377095 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.838476529 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.839587208 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.840177483 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.840919814 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.83830054 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852325612 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.849422377 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.839668872 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.840872221 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.836535623 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.842699668 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.841901776 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850516562 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.847367809 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.840753611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.839819522 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.8403101 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841004467 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.836554858 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.839156161 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.839570459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839172125 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.837314207 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.855315873 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849775218 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.846104989 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.839757649 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841385813 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.841465498 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841229756 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841490762 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.840912937 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.841643248 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.841475543 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846001752 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.840957725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.840654024 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.8436143 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.84921057 seconds)
  done (took 1090.888588896 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838996878 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838444641 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838711586 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83867561 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839253214 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838246396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839776252 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839414679 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838918944 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.838779902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.84006356 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840322372 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.839319191 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840227564 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839530941 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839518329 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839292637 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838518265 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838940712 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840253848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839603781 seconds)
  done (took 40.394186731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.841946865 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.839356069 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839116625 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.842135994 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840351242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.842272802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838979725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841675579 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.841929765 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838318534 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.842499912 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83983515 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.838461029 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.83819554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838013383 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840675467 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841345954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838025486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.841395274 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838508019 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840764688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.838934106 seconds)
  done (took 42.252698166 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.842513996 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.841923687 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.839678393 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.839420653 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.842412378 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.839088054 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.843104638 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.841909652 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.843040517 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.840083182 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.83984702 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.841360341 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.848088746 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.846339567 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.842608539 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.841461028 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.984765433 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.842272822 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.842976692 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.843220092 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.839210399 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.846194504 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.838590805 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.839740764 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.840794177 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.840200321 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838863424 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.8378842 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.838518359 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.838491997 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842834968 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.838112689 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.837386955 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.841764504 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.840754892 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.838478448 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.838590094 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.835019951 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.832170883 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832986383 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.843089157 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.855491174 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.834031885 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.838567332 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.83229203 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.832911132 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.838489186 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.836656617 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.825824533 seconds)
  done (took 92.069827776 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.828128011 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.82763673 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.826334321 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.827478972 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.828149322 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.827904631 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.828558145 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.828180803 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.824707454 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82546696 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.827411834 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.825562381 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.825686913 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.828979687 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830134631 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82563783 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.826083285 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.826525293 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.825436986 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.826390788 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.82691885 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.829141019 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.82879087 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82699873 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.828419173 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.827112787 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.826806379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.830501399 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.827171056 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.827867807 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.82914892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.829397927 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.829004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.827384991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.826109978 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.829771835 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.829044811 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.826175634 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828678091 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.826118235 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.830870304 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.829699558 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.82863262 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.829123014 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.826175738 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.826486987 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828575092 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82629002 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.825682215 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.829009069 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.829709223 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.827897554 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.829110698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.827374642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.831071576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.829392601 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.827522819 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.828476126 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.830364005 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.82704555 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.826570522 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.83073166 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.829032308 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.830412059 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.830818693 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.828179361 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.828552312 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829957226 seconds)
  done (took 126.062357384 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831629935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.831081997 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831397462 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831616865 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833018791 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.831003312 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83098015 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831762072 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831920879 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832586431 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83159119 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.831468283 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.831332489 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.831039517 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.832632486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.833065643 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830590857 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832882634 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831097479 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832335617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.833026985 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829544721 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829774324 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830827153 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830786663 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831463435 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831495463 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829695678 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830252162 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830226231 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830731997 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.831268216 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829912032 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830278931 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.83086711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.83000254 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82990781 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831841551 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.82998977 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830212183 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.830167401 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829886232 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.830692784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.83036029 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830784209 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830550244 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.83131512 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830787246 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829256376 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830286017 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.829889277 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830086817 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830761505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831621387 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83004964 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.8304693 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83095952 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830395141 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830957916 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831041179 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830335384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.830146582 seconds)
  done (took 115.280100315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829468692 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.83043016 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.82837289 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82787396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830239698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.827712842 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830474324 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830427998 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829907753 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.830404716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830896117 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827503964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829948319 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830213192 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82894272 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829496649 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827752304 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828041531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83080559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828590555 seconds)
  done (took 38.346562759 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827499303 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.830159662 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.828066638 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827032025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829840189 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.827561177 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.830718562 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831012856 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827675709 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829004973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83000337 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828892472 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828217508 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829768613 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828319552 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825856038 seconds)
  done (took 31.018972265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.825980496 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.829814796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.829314005 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.828427366 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.82503026 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.825100838 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.827390162 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825712715 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.824986731 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.8263631 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.827083296 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828462686 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828287481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.826628652 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.823552336 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.827050524 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.823855505 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.824198758 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828032428 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.827207935 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.823010346 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.821906207 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.825921134 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.827647656 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.819774183 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.820481875 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819197487 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.820625037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820156288 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.823686588 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.819504085 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.819331558 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.819503269 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.819987096 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.824932372 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.820835121 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.822147281 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82331088 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.822596169 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.822259426 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.822933206 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.819786133 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.821167284 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.822610201 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.819688067 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.824025528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.819027432 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.820317428 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.819377558 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.819655423 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.823360804 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.824060137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.822540031 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.82243512 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.82267434 seconds)
  done (took 102.051096402 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822574084 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821841693 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819482782 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.822192858 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.822245726 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.820088137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.82302224 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818859314 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819433834 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.823022707 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820344445 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824183616 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819842346 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822098651 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820081051 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823175685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820086455 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821134847 seconds)
  done (took 34.534115144 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820203372 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81965029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.822371117 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.821992939 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.818766118 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822193181 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819139446 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821334782 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822598893 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.820626968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817598067 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821286214 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820245825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.821140543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.820266927 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818389289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.821585455 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82091951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.818724934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818562878 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82222231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821377596 seconds)
  done (took 41.802463987 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.819659155 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.819647311 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.83570319 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.839431408 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.841010573 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.852537843 seconds)
  done (took 12.756710593 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817406161 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820717389 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815153493 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81769515 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818899233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816803066 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816980589 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814930053 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817892887 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815764615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815709003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817782689 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820175548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815474332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818265864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819283168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815741096 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817124537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815574968 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817969126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816134618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819299151 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815196232 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816370527 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814740556 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815927107 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819034739 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815342126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816918078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818471228 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819124538 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815826906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818613712 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815414999 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818659046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817222186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815200634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818287412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817562414 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816364335 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.817434326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81817945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818175611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814965718 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818273035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816578568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815160508 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815907623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816031941 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819197223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819006659 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814877055 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817720029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818141256 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819088732 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818438561 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817050633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814775828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81700001 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81406598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815273611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819447714 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814937341 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814841622 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817818179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814439783 seconds)
  done (took 121.672414239 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815221186 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814465144 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815059278 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814916706 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81446788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815458118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815762145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814036695 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815016233 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814907172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817690444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814823953 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814517708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81612023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814977914 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814606252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81502525 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815692154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814415191 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818646374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815863232 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814691609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81684451 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81616187 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81563674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817458829 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815064476 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815273503 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8158502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816039241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816279087 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81571109 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81553511 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816865091 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815402449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815181028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814312897 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816015276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816415468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817967375 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815452174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818168706 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81496559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815592371 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816986602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815281905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81584039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815383171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815448943 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815378036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817107003 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815951405 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815612086 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81585492 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815804081 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817195377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815818319 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815924674 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816251045 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819266898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816999266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817597558 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819716805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815982227 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817144699 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81559292 seconds)
  done (took 121.599229205 seconds)
done (took 2528.94209967 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.868157781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.821391319 seconds)
  done (took 15.437201844 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.988668134 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.943394083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.826747604 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.844708031 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.82669187 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.84852869 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.823907985 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.826524779 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.827087074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.828119022 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.826934125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.013439779 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.879080273 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.827581763 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82785516 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.922887414 seconds)
  done (took 51.797590807 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831386236 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.831395244 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.841428678 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.832878479 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.830039056 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.847277252 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.864625231 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.834140182 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.891613206 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.844555663 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.956873089 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.844407335 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.830820238 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.892840146 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.845489123 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.845771316 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.925080419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.908514946 seconds)
  done (took 35.256502882 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.909968325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.837439641 seconds)
  done (took 10.512551887 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.842241049 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.84224691 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.876467726 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.825742509 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.827477793 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.85567161 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.868417418 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.85882155 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.855369106 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.846490552 seconds)
  done (took 70.2590194 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.835379154 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.83148199 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.8341224 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.831092491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.82388925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.829044069 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.830699597 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830558021 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.508300784 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.868499634 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.840272367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.837145457 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.831369911 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.832466386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.829142744 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.854784686 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.922875803 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.829619591 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.827976865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.836295259 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.832153025 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.884221331 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.84515875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.833877489 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.860660666 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.509069701 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.842234731 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.83698699 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.92345758 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.828646278 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.830693739 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.832113933 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.833519472 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.207768464 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.141012076 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831274716 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.846409035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.83841639 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.830005472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.933058011 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832612801 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.838010687 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.478771129 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.121225635 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.943808916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.873595279 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.144799324 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851983105 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.83374337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.860779921 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.834994418 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.833534462 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.846277082 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.31792206 seconds)
  done (took 130.162256402 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.827161762 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.179964992 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998808149 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828688447 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119123425 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041800099 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.830537879 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878035713 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830057923 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.061503626 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.08580676 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941013945 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829058587 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.828823783 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.826287407 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82719304 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988702631 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.905187987 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.830359249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.828925672 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861005353 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075676878 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.957407271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830218127 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.860585747 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045107159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.955569767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938122928 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.617623712 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.82759393 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.895835946 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.832680843 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.830340318 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.82708725 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989846373 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928084286 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918945726 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.830334442 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827797619 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829292679 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.503370672 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034558218 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928568522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974123262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030837575 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040154638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.617263544 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.828745234 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.572187705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.997671196 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.063304907 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.062317644 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956027472 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.832980513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.152746544 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.828139768 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829375301 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082435895 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979736816 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.934318265 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832714992 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829814945 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829623252 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079119433 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.831978223 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.930095833 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832038418 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832048934 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931807854 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936383539 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973429847 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046700857 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.864440913 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.723765587 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.368945678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.082299203 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.9007546 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085019096 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833520262 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829400334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911729683 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.677912442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089347966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.084210947 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.087229798 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870313727 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.558744556 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.829656995 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.060809259 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.057755311 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084847338 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038718094 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.076092504 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.151617955 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.829578661 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.831576506 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.059773616 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970414556 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833759788 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.180348063 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069557525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.399876528 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856318316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14396524 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967894733 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834355262 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.477225278 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832908876 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059798549 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.876528821 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.832987437 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831075944 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056474369 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.808946965 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833541892 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.485351833 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.898629407 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.833812581 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069610746 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.835579987 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09834376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837784616 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07475653 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.41866457 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870239881 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011291184 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.037473818 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.834305815 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082754592 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.081570874 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952296936 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05859259 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.454320205 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833992097 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124657395 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834672382 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.832200651 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009321524 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834161421 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982580253 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.836765365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121752327 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861711737 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.073825574 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836558186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.091733054 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87178722 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887957181 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837386781 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963304167 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837446441 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.761102455 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995583942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83770015 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835622917 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39279086 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.833465157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993865083 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.070240597 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86026806 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911463239 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.510846759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834094155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927625495 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862635437 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.24904086 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.834708203 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.090071864 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.836105337 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.834475406 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.834983224 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.080227249 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.022605956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838967665 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.834821135 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.733842426 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.833831787 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835115638 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.022783514 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.145298018 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835055933 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043599865 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83719776 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968044931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839196783 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.912535008 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175351858 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835832267 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.834742694 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.835855525 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.83825725 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837903278 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049529607 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.865861739 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.373560392 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.978413291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106973552 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.151125832 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.088842809 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883925451 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838996854 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.102785986 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840405341 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.903233712 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.839246687 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862144665 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074170901 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840545776 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105457937 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.11881757 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.882715101 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88983663 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.839369321 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837313471 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.836052271 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986526874 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927009041 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840346967 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.837453126 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956206085 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.964340849 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05155934 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.838526859 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.883880335 seconds)
  done (took 894.576933732 seconds)
done (took 1209.750658544 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.837600592 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840082148 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.824921593 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.838854679 seconds)
  done (took 29.114359598 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.847831833 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.844504555 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.846897434 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.843445086 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.848427998 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.843317207 seconds)
  done (took 12.847407657 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.851601804 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840297274 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839860593 seconds)
  done (took 21.304541672 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.912015094 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.231082124 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.959122323 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269623422 seconds)
  done (took 10.145214665 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.848165284 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.847596862 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.847230231 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.848446582 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.849074211 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.849982802 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.847600747 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.850169049 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.850395303 seconds)
  done (took 18.413751779 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.342508456 seconds)
done (took 97.940225176 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.074581225 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.844396375 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.154416702 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.070395887 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.482053271 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.830647581 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.705397428 seconds)
    (8/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.94496666 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165527415 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.262678865 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.228321834 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.676065213 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.992503354 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.041278922 seconds)
    (15/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.963176592 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889815449 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.843374952 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.982896896 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.934794542 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.698194933 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.982181216 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.928207035 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.02669909 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.231497363 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.948905665 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.860826301 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.163014676 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.974537921 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.136649034 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.845889297 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.567081019 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.849011424 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.914909126 seconds)
    (34/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.090535445 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.950194163 seconds)
    (36/309) benchmarking ("sort", Float32, false)...
    done (took 5.553629905 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.846424283 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.087332603 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.907895755 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.005656695 seconds)
    (41/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.911786896 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.121326203 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.848372803 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.971911373 seconds)
    (45/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.87273812 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.828308512 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.967085836 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.994439149 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.845832851 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.09666635 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.828017225 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.816474728 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.141096953 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.820059866 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.261866406 seconds)
    (56/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.731620917 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.029969332 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409880081 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.987390989 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.875382652 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.871029509 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.845419751 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.114800682 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 5.675642881 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.912371089 seconds)
    (66/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.847150946 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.029452206 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.846304079 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.059198485 seconds)
    (70/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.956728162 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.935599402 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.074030021 seconds)
    (73/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.945587134 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.017240573 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.497035378 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.522159201 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.9951361 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.953990527 seconds)
    (79/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.852655524 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.933102597 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.946054795 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.772677662 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.850484989 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.871701627 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.799782912 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.046789676 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.832216457 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.928097238 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.040885854 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.373474023 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.647920987 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030796725 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.20347049 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.99465602 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.953872442 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.208428944 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.942696741 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.083519757 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231473637 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.046050198 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.849859479 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.139872964 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.119459357 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.877887092 seconds)
    (105/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.968826862 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.343809035 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.862902381 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.816991235 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.403765917 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.172719514 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.863497811 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.938488336 seconds)
    (113/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.959159523 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.522413715 seconds)
    (115/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.927000503 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.192414663 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.009147041 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.849334055 seconds)
    (119/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.951679973 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.947425503 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.133996777 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.942814398 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.873993994 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970523386 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.213426174 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.947611171 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.952705665 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852004015 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.948612157 seconds)
    (130/309) benchmarking ("sort", BigInt, false)...
    done (took 6.848632833 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.921872338 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.072949658 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.871657707 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.146432465 seconds)
    (135/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.921868722 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.962875801 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.102945782 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.84863463 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.876099312 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.913094901 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.06939782 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.947885689 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.098749538 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.875761999 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.850872224 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.009128345 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.850920125 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.956167653 seconds)
    (149/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.848856687 seconds)
    (150/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360440888 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.282712137 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.165699079 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.873307608 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.147894064 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.075262443 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.992598906 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.876427568 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.985861077 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.969375853 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.373852072 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.87616634 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.021210473 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.509275502 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.876212163 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.088099894 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.175007394 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.037708708 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.858142493 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.004252168 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.500266357 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.857512417 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.954384308 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.850917324 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.918882088 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.752609344 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.075622359 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.704332434 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.020107071 seconds)
    (179/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.876484191 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.837147019 seconds)
    (181/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.927866895 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.331317817 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.368112286 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.042958829 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.193689661 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.047440836 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.299928835 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.149708817 seconds)
    (189/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.937218992 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.94264714 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.878084495 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.094985041 seconds)
    (193/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.941143849 seconds)
    (194/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.863196862 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.885530485 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.433895352 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203923019 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957010373 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.660286988 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.958179408 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.837930029 seconds)
    (202/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.050203959 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.950732867 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.932990702 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.153885888 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.098786114 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.953494435 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.153187553 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.18771588 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.950955046 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292864047 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.70486734 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.129216073 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.065860405 seconds)
    (215/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310818117 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.149471624 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.932411416 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.85769628 seconds)
    (219/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.939133658 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.857955046 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.940134322 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.091017667 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.894708705 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.18879963 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.879066615 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.857619692 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93389037 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255078165 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.902445372 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.21274231 seconds)
    (231/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.078322757 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.199028946 seconds)
    (233/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.274865632 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.209155761 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.94344528 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.71599776 seconds)
    (237/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.37448546 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.976204419 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.953580554 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.880318705 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.85641624 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.581489487 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243918416 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.951144526 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.986516477 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.861801372 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.313866938 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.964168742 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.421032951 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.084231024 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.843252991 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.165306331 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.79307063 seconds)
    (254/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.110112539 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889886277 seconds)
    (256/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.841314915 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.365482239 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.96616448 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.885020989 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.882617855 seconds)
    (261/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.341767416 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.007473915 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.169322394 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.197148124 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.856386615 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.947218411 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.293293564 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.240662362 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.030787367 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845733601 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.914083896 seconds)
    (272/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.441783767 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.846370736 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.870076351 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 4.920896983 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.982433086 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.76756389 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.214646405 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.160726767 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.192563798 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.540744018 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.96921409 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.875116954 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.857740934 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.242635653 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.931080903 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.857141891 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.997556866 seconds)
    (289/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.861520004 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.558600965 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.149103145 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.563757388 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.249611053 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.819532554 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.85078281 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.602366271 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.054390373 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.39159568 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.860507428 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.325068241 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.219543635 seconds)
    (302/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.949684372 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.846413649 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.136325298 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.936059457 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.879528218 seconds)
    (307/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.092691744 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.8021988 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883382768 seconds)
  done (took 1002.895193659 seconds)
done (took 1004.731457019 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.891915791 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892511878 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869993199 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.893025775 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.988558875 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.899059081 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.881559361 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.873364915 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.919515676 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.920186984 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876378489 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.897879461 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879449929 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.877337766 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.872001408 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891643847 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.188886372 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.903086752 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.893941107 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882056896 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.893272436 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.876141074 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.921093587 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.897730328 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.876721223 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.873708515 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.880684216 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.897836696 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.989469919 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.881996129 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.874781436 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.889786616 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.186578715 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.895114306 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.866440416 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.898519541 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.889239349 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881334658 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.875515581 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.91062022 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.278612229 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.911510018 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.881165756 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.873617349 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872379592 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.877564637 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.880479615 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879656734 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891906893 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892145372 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.277542346 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.928805275 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.882745087 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.87444496 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.884049293 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.881130825 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877451866 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896382718 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.899643275 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895812073 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.181448898 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901650453 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.875214031 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.897454709 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.887017361 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.315143698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902532004 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877562984 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279792915 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.911798506 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.314743475 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.921649804 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.875289312 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.895316942 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.912397443 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189522821 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892488006 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873480326 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.887396263 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.87984965 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.884756173 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894936946 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.87879972 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875397388 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894165548 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.902316581 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.884702844 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.882235244 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884749822 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.902158611 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.888824389 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.892499018 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.878207316 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.871408788 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.883963992 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877673539 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.883688324 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.885325585 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880252511 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.886649806 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.278959798 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932416378 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.873249326 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.872376621 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.876191866 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.896770416 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.277524911 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.917937713 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89722757 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.923752443 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.877519383 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.182027247 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.911238197 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898688409 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.886289467 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.880338647 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872144642 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.184170822 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.304359154 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.929941124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877575767 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.880913404 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900346417 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878485995 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.87375391 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.191989337 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.901688335 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898036706 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.004216366 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.886746123 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.914718721 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.881883335 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.880307916 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.905466689 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899823117 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.91488041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879811532 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899997114 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.900133064 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875409263 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.894963288 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.887573731 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.879592853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.885347331 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.872030361 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.906357384 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897424327 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896124743 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.899232364 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.004949257 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875600712 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.184436845 seconds)
done (took 295.072343445 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948110596 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.870039891 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.976054906 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875360953 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.957759283 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.961301305 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.873088404 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.873623431 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.873268965 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.274987608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.872258864 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.873255709 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.874631067 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.872124519 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.958410597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.87575927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.872746409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213939966 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.876832992 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.947081689 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.874674989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.872827795 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.875782808 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.252040782 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.872009922 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.876472651 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.94754933 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.875575653 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.261907946 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.875769721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875548883 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216883638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.967871489 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.895394804 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887377714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.883387964 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95990838 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.879852133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.959977653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958717477 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.97569542 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.917727531 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.877174043 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.869022397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.879612493 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.878246733 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.87467169 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.904534555 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.871052281 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.873824687 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236812813 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.887788967 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.884042949 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.87446033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.874571894 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.899633522 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876499968 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.880044211 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.968441867 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.880351784 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.941342309 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.302482199 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.251433813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.879214768 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.876602769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.875373983 seconds)
  done (took 184.904369682 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.944107134 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.949765687 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.943737539 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.8804073 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.9275734 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.945395967 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.880505655 seconds)
  done (took 15.275622921 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.883988105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.87809138 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930625958 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930714414 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.878356391 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.027295407 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879197698 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.889981415 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.875824492 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.931218814 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880598183 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87965995 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886087348 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.879733053 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929402539 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.889997761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.996419554 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.880089524 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880090032 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029828488 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.877070497 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.88636928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933870165 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.89084725 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880459224 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.886038686 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472540506 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880968369 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879103942 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.880030477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876938544 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.921106198 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880411608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881438365 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876856477 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.995197763 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.880998115 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877419028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.880193894 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.881122723 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.87984094 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.880119688 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.880369353 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.877103132 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.880033488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.904045816 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.881953658 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.881083082 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.880966259 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.88240709 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.930243454 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882036614 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.877726625 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.878569966 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.936365116 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888435093 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.883436867 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.879757899 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882419704 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877900847 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.033386237 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.931608366 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.881309451 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931454613 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882117925 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882371319 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.882089778 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.882354446 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.978983744 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.881668308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932380846 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.879865132 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.040033376 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906116074 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88296555 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.88440048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.884493676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882104638 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.874349141 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.89203437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.882771313 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.887328291 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.892654642 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883946733 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883250299 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.997849057 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.993271086 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.883709088 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898789732 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.893037724 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.883418962 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939610882 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.886687189 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.884378811 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945456194 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.004480144 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.941803336 seconds)
  done (took 207.018316487 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.891720289 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897890606 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.888087447 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.902918639 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.886567333 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.886794581 seconds)
  done (took 13.166464675 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.889114736 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.887939027 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.887790484 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.887868095 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.889228178 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.889315581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.889913066 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888484956 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.891861928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.887995671 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.889046909 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.888031847 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.887969358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.887000463 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887735134 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.886644521 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.88739459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.88204426 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.886926079 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886557754 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.036980841 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.886645001 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888151314 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887219931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.892197936 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.88816323 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.89501183 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.88679497 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.885954194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.895061891 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.891126737 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.888456475 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.887832453 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.892744453 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892959962 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.888104359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890575237 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889645493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884839106 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.88892008 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888573246 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887981174 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.88702863 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.889985273 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.889552899 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.892154765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.893944755 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895073613 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.889701305 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.89031698 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.889966336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.888631919 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.889969361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.890633818 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.889517204 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893330884 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.894436742 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.890236897 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.889477887 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.889723961 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.889276638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.890030937 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889722279 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.894513941 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.894809633 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.891068295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.890946992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.893993866 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889262259 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.88895735 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.891217061 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.886182499 seconds)
  done (took 139.012414623 seconds)
done (took 561.189956099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.033422852 seconds)
  done (took 8.848717329 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.032890042 seconds)
  done (took 8.891639409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.222488394 seconds)
  done (took 10.043407124 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.894149831 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.896285007 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.892820945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.886920306 seconds)
  done (took 29.404278745 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.020056065 seconds)
  done (took 8.835098134 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.906645323 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.883056421 seconds)
  done (took 15.639847156 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.89537901 seconds)
  done (took 8.719690754 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.955482425 seconds)
  done (took 8.791903166 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.885305471 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.912685188 seconds)
  done (took 15.62697673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.867281562 seconds)
  done (took 8.683473531 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.50120122 seconds)
  done (took 11.412527802 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.892610818 seconds)
  done (took 8.811666428 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.959772771 seconds)
  done (took 8.776266744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.968972728 seconds)
  done (took 9.785460352 seconds)
done (took 164.085318226 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.899186484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.884987044 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.886628955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.88650159 seconds)
  done (took 29.372957799 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.923965381 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.924558354 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.926091336 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.935247927 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.927959035 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.925441407 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.916377495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.916417746 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.935669876 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.926925832 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926750469 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926629161 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.924705041 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.917039605 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.925949833 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.926659634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.936138246 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.927179362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.917080991 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.927790018 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.893219201 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.93617725 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.936039595 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.893360836 seconds)
  done (took 47.990874267 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089756831 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.964214764 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.046733149 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.944147496 seconds)
  done (took 9.863083338 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.943981273 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.946531645 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.957611639 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.997724536 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.019672491 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.955736568 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.918272374 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.913988688 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.9017561 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.946714476 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.021004124 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.941933751 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.0399291 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.892765082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.074831175 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.892697749 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.893056653 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.94496675 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.996465736 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.017842869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.892738335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.945221771 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948661006 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.940203007 seconds)
  done (took 48.762411678 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.891343934 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.899624541 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.898779239 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.892656113 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.892735443 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89344358 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899243724 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895012781 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914510423 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.894123732 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.891992667 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.89250053 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.892128275 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893131642 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.892269149 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.90569595 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.906938704 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.893082451 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.896762091 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.898817229 seconds)
  done (took 39.754431626 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.886511147 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.740559967 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.239188909 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.141429804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.888125784 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.890112979 seconds)
  done (took 31.606438176 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.906288677 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898348271 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.893839281 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.94887939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.02927203 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.898854321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.894007971 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905370611 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.939192366 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.953212887 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914225163 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.922542089 seconds)
  done (took 24.925789572 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.888931176 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.908448629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.890325758 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.925132024 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.905559103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.902314666 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.900998288 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.887482888 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.905895455 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.911500738 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.900693985 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.908129582 seconds)
  done (took 44.6581339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980132607 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.780789598 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.943159316 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612236923 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427946398 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104268261 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419462601 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229185175 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.896110499 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165131356 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931467543 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139658489 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145788149 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892799369 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.960462281 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342346698 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193509444 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126586337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921963743 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56658642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01566401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323846946 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.597644468 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0223696 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104329389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.024115345 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.152195477 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851417805 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033182991 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932059781 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903446439 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89421565 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165970278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272402089 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010011272 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903091542 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548039271 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.609522096 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.888243669 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.691889138 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.767910188 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.026353486 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90125426 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893114794 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828327785 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327033602 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233160666 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.898877956 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.596441833 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893949266 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904670828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984527153 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.898862556 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709984565 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844557617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.174477687 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.891705627 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901491442 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463521093 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980402484 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420570925 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.833356983 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.98769892 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584865846 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370029331 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.046533167 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.899711413 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900682779 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830043078 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.649070713 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019309287 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041251187 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.914149822 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545175144 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215057779 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.97013962 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979936056 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189334543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.590434567 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.833873037 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123221469 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852666845 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833325579 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.752286856 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831380393 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167513177 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934407996 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.533271831 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938481217 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.231969132 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907576649 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919183752 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904106771 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121013733 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.779198145 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89750663 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.664170231 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182575002 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91894499 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23256089 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831899191 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.902161693 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152569738 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.109180462 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.032644751 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347291198 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060182373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898082126 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.98463724 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.715137451 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909172179 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17855962 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958687129 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.977926492 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029368848 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858061533 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209191348 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927762493 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.072240657 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.892787131 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161567685 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.219604933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15229832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982345008 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903476428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898545383 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604321283 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.526385731 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.124101759 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.899994514 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299765073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9084432 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.900699538 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834535971 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.589268174 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906112943 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.0087711 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.125529755 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642049942 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282844247 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835379216 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045943723 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016245671 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.123816281 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.556192596 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98286406 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160378484 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.189011765 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.017967778 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001439723 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919068362 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993367896 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92214076 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.1060906 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249191341 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.90417947 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.904795057 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.605672791 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.973704408 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909592779 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.905594854 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699078081 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187619285 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928240364 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908622493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790053528 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.915089595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969015696 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906784082 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911731704 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.428628598 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654969043 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912027549 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.655066813 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161623588 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911644429 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.655656036 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097079578 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.985192709 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181665263 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964115736 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.836049331 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.605332256 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.604576063 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901815149 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837517423 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902155478 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911291374 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91346793 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.099125468 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.186011161 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951134973 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.655019254 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.018888536 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914023229 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.907952332 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903419425 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.407873432 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990462085 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318012276 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003954554 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039898009 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.917246123 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837994997 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907133609 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907986482 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903407721 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860985409 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956654054 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.579448489 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359262663 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164537839 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.55247494 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921102096 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.674453964 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.029889018 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.924338811 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675743353 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775733444 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.983573189 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967910155 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.910569699 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.658080068 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.671259223 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464292889 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232771502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215619873 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349080078 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.175316001 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.212393356 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239083025 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136376303 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429821927 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958996668 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24155549 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847303918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984453984 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.554769546 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260437528 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916818845 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127865918 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295339039 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.752126632 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061790906 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112290301 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935830749 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.621496711 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919790874 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.158025036 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055985347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.66856891 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12821576 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233268014 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66484289 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011826883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89887328 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.601716972 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98765337 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.612185063 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.262726404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373067844 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914128591 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393672159 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908346773 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347260104 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262141395 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.125794215 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.989948036 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83759021 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912783288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912769372 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.902369504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.901153705 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.872361085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.200771165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912819507 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137964531 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.072201788 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168353037 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.806264074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.907160525 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903341044 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211429256 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486179686 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133434005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.137292707 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.503721599 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920642453 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837429182 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836697804 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.605896796 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.903693228 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878885973 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130379961 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.013184418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85378767 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.203397061 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204152678 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158020112 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.917488298 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181445899 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181614388 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.638063824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931085836 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.003993883 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.662736975 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.62438673 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125994481 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139186259 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703613124 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135807491 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.947793409 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.874562414 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.90318136 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118872284 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.127374663 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908047245 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156398533 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629578077 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.916615275 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283979413 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964130034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883217067 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119281141 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.999068409 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915163457 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985644836 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914880752 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.916478547 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916403008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952115675 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892784716 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.041229146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.918782322 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996026104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983750553 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.528756782 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.926853911 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187090389 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283877039 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238665826 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96578495 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904617918 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908545516 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840719223 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044805777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3515104 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179058077 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.036076334 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.045726298 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930956208 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658626341 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.087763567 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20534986 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181478072 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.802935938 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906157237 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994193919 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.131193544 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917794703 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.118379179 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138683035 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22937427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378912355 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.950463026 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331326505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180159232 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.281282549 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907673341 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498667494 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.91231323 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668804141 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.950015446 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913782926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195593735 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917814163 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293315425 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930992192 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.102940985 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.425331141 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579297465 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272391818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.914653041 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972774775 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190908388 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303732277 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223397077 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976118333 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918660483 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.608413774 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045968226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.897682654 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.188112439 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909195177 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120843375 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620589492 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918675299 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192500581 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22200296 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.907256164 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.921742594 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971587325 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.918821221 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133785995 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175142923 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165181265 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919963334 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.911049859 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.729553618 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186407644 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969081371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845119338 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.913373261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007708668 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157277797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929401446 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.426916416 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.614270593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210087339 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.845355461 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932221011 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235315377 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334173354 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238346645 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448798244 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144213749 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470191067 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.660568089 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272444431 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.915405035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.230347043 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274850909 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.91540511 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.329661782 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009590652 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.182992002 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229308786 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.924847695 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.064071621 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.964836847 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136583285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509525235 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854671942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918107971 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.970588304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910039783 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039121735 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921020228 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.040134998 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960980183 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.731067674 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399819441 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.912357868 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.896838834 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.68492367 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.514346568 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028066211 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068198225 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912580874 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.614290492 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.204962616 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16804551 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.471785253 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.987128715 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.914486317 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911839494 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839903131 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.110439703 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.108661064 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20900101 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.306363498 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.030456291 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91631145 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.126437428 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122398555 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.815401812 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069298528 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346177486 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035259956 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.833118057 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.628929049 seconds)
  done (took 1700.544227836 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926242134 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.934852998 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.919516295 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.972720378 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933078839 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928705094 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.943861501 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004228211 seconds)
  done (took 57.408261596 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.910696052 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.129206957 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.920409111 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.91149226 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.941148602 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.911704106 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.118760877 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.926882471 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.933213559 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.920868115 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.913869875 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923151601 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.272597206 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.938743676 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.910504821 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.915846195 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.919835395 seconds)
  done (took 75.270301318 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.911592219 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.196872431 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.933649361 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.930168795 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.796563242 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.911044764 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.895021504 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.942868195 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.912822236 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.084696108 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.246210741 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.918218878 seconds)
  done (took 90.522894931 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.925344179 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.916792928 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.916047766 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.915823378 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915707051 seconds)
  done (took 11.438605796 seconds)
done (took 2214.022511186 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.181447857 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134640564 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.146404184 seconds)
  done (took 6.122289988 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.058311775 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.107753073 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.225206716 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.246243006 seconds)
  done (took 10.482153521 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.19759583 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.279781243 seconds)
  done (took 6.317115614 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.240635111 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.941342083 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.334408904 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910545102 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.909958048 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.91027825 seconds)
  done (took 22.57481001 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.913558169 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.91562647 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.912245188 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.914859614 seconds)
  done (took 9.495474997 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893440275 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.658873157 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.896298942 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.903936897 seconds)
  done (took 21.192457317 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.661512876 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.307234269 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.652430565 seconds)
  done (took 9.458631623 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.331869183 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.839677573 seconds)
  done (took 9.009156054 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.179599108 seconds)
  done (took 4.026729348 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.947555768 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.190546209 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.445903276 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.443011827 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.553893416 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.745408308 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.23976538 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.157395159 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.374734963 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.379328511 seconds)
  done (took 25.325928904 seconds)
done (took 139.542692525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.34023748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.945054073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.122781128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.272795185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.161852835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126543408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.109496343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.263969425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.797160828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.792251058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.276517036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146974222 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.072642025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.930663895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.082974647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.92852149 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.141776095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.354656201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.996952653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.196550124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.1403087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.919406102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.113871388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.932633507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.14236574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.064170757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.463035087 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.928454539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.130897023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.476570041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.067926424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.333692179 seconds)
  done (took 169.62115826 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910987251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.909506912 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910486058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910043638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.304356295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.911452575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.908947608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909612152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.982317343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.966133273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.909848001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.303657758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912448991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911781701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.912223644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.910443174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.13693647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.911735103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911497435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910604457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909928825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.104558851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.912041954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.127000564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.116569827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919917515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910602131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.922628914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925581285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.925730904 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.927230315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.912243996 seconds)
  done (took 208.811606734 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910449804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.913411494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912024145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.911733727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.911657456 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915452288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.911685942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909798991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405593045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438811874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925465542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.914544778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925489467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910489073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926745196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.910505803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.927579977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.930168466 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930716708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924440997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.927132189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.584759368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.927044975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.600664771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.92479693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.927107535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912478927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.931374685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.933921239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928491736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.93329996 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.908814952 seconds)
  done (took 221.667499391 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.101574753 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.913625446 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.91513211 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.904765758 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.914579195 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.915350855 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.919526344 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.09646439 seconds)
  done (took 19.545710116 seconds)
done (took 621.500413849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.394930502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.239942738 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.094903405 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.940977495 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.178326611 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.968500202 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.929211197 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.002830322 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.653317199 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.000659438 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.571520121 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.951624539 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.670135264 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.956293214 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.049160389 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.986904243 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.477338434 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.564152059 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.103358929 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.993246106 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.105491542 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.888457528 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.007073481 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.678184539 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.684135 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.932583145 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.099113268 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.473064813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.934542328 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.082128351 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.723618492 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322389213 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.934514901 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917623367 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.975020096 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.953460903 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.263645585 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933332301 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.044231316 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690928219 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.996729186 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.532116919 seconds)
  done (took 104.740829143 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.889480789 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.887103992 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.887685678 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.887122907 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.888752935 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.886522718 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.886145608 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.887207364 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.887667634 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.887495703 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.886647393 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.889195069 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.887030792 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.890816721 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.884028982 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.885325649 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.884765214 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.88658391 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.887888467 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.881680618 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.882128742 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.882143689 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.897117353 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.885883111 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.880411111 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.88065819 seconds)
  done (took 50.883891101 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.892533014 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.050135647 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13959405 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.912744197 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.887939223 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.891960619 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.909197704 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.90062372 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.888402173 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.889640094 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.998804252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.894106706 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910499288 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.128201695 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.903526547 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.885289759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.884241699 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.889976937 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.045357977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.900575683 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.902513477 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.891230595 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.903436058 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.900589056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.885023488 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884604057 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.887847192 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.373539163 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.894578871 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.99396032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.931162499 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.909514424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.29652607 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.137993418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.943212347 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.89430988 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.883715487 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.997195849 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.892422383 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.885479306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.904186885 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.892659219 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.126934677 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.385889476 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.902465912 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.885563692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.383773002 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.010169941 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.940780381 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.8951911 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.130358236 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.904813986 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.885496211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.884812037 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.922511365 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.890903761 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.884434016 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.237147229 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.89963486 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.903662227 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.893073173 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.885026499 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051555011 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.895962479 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039054473 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.897418224 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.891834658 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.885396143 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.127647963 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.906966961 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.380765721 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.901211122 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.884927931 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.996212954 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045781415 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.416366242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900637402 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054538772 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31346409 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912959247 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.894966232 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.361074493 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.915664042 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895074653 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.888095841 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.887709136 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.886481953 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.932625588 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.902584023 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318830205 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.394442105 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.259169841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.917905861 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.903903886 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.887392868 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.238946802 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.897493485 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.887253818 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.125003397 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.40020967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.90361277 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.894714129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.37202467 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.905195136 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.906181841 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.897234128 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.132925509 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.908187848 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.931330172 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.887697672 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.894891851 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.890526351 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.90626583 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.894988789 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.887172408 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.364680108 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.020037301 seconds)
  done (took 234.457882267 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.882444636 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.884202101 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.88005724 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.88497743 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.881378799 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.886508098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.883348411 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.88324785 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.887872183 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.880981936 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.883132346 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.884281356 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.882459902 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.890836038 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.549690673 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.890668965 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.492192622 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.881221408 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.880043527 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.882625152 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.655326919 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.887763231 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.880773289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.888759989 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.882132523 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.882390128 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.881154953 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.005759486 seconds)
  done (took 168.733175586 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.887881882 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.068545369 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.908591278 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.927309112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.896746633 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.885137912 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.91091519 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.909157765 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.892230884 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.885949562 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.886189679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947612045 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.899624314 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.029071884 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.918980148 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.919033807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.992057554 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.894854851 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.886977214 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.885534737 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.915774807 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881857114 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.949527094 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.019726601 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.906915096 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.00522267 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895424043 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.889440589 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.887275118 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008804277 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.905338967 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.950381765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.919548398 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.906261105 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010040118 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.009714413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995557972 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.91959918 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.895391606 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.887162156 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.888988422 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.877235297 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.007790924 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.9098866 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.890330161 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.997649603 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.9124724 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.890900251 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.899346615 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.888972867 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.905296904 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.908876111 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.958878066 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.025275871 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.925275421 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.915703075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.916534593 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.179753758 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902297867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.991089052 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.884082909 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.010355764 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.912823721 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.88005026 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.891561653 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.896122305 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920273774 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.923053804 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.997759121 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.899396962 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.991242022 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.926445631 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.898480536 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.890835504 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.893908786 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.010688022 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.011902215 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926419845 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.929332319 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.923011137 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.88654884 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.892462179 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.880658101 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.909378102 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.895841571 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.009537729 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.009946262 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.898891872 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.893819934 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.893979939 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.892869065 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.918130292 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019211777 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.928550901 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98916693 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.959484675 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.967659066 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.907518763 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.905707675 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.896555391 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.957222582 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.909752191 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.904606624 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.227904942 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.965553698 seconds)
  done (took 204.938503889 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.364849475 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.947806159 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.950070157 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.208857827 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.325457956 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743862664 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.942186095 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943258031 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.964888271 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.130591843 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.014836822 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.960362232 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.930497462 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.914106477 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.941060359 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.964976689 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.950367367 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.262513797 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.0629997 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.024470763 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.924783833 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.209248579 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267297939 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.327892234 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.977702048 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.287287393 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.617827959 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.09437804 seconds)
  done (took 62.079974363 seconds)
done (took 827.670982355 seconds)
SAVING RESULT...
DONE!
