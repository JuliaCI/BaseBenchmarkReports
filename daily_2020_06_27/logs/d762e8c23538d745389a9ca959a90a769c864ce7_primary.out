cset: moving following pidspec: 32761
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.578625842 seconds)
loading group "shootout"... done (took 1.188893517 seconds)
loading group "string"... done (took 0.421027663 seconds)
loading group "linalg"... done (took 7.662172022 seconds)
loading group "parallel"... done (took 0.147790701 seconds)
loading group "find"... done (took 1.21650295 seconds)
loading group "tuple"... done (took 1.880273563 seconds)
loading group "union"... done (took 12.235127967 seconds)
loading group "dates"... done (took 1.28354406 seconds)
loading group "micro"... done (took 0.20099056 seconds)
loading group "simd"... done (took 4.197786596 seconds)
loading group "io"... done (took 0.94485562 seconds)
loading group "random"... done (took 8.552312066 seconds)
loading group "problem"... done (took 1.525024014 seconds)
loading group "array"... done (took 18.218146113 seconds)
loading group "misc"... done (took 1.577264947 seconds)
loading group "scalar"... done (took 38.682480493 seconds)
loading group "sort"... done (took 2.921920638 seconds)
loading group "sparse"... done (took 11.457625301 seconds)
loading group "collection"... done (took 16.336011947 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531189438 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123431379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133739578 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11789919 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151786211 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115693811 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124848922 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082760741 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.891184194 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145966368 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111706497 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434440864 seconds)
done (took 5.416464249 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172278927 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085707385 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077281054 seconds)
  done (took 1.293480404 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064771124 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127662639 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0659716 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066003987 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066067325 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065786061 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065577688 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06536226 seconds)
  done (took 1.65778895 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071613635 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06794318 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064704652 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069004533 seconds)
  done (took 1.409542878 seconds)
done (took 5.74386301 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239127347 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.107277113 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.298474954 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.321103317 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.413234186 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090039039 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072824362 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069553891 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12838547 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329706598 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11758908 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.188540567 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096255865 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17908335 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.007504453 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.126773108 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084425289 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121302515 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092009235 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130511818 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.363385469 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075484302 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081284414 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07023872 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067522189 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.650378064 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656356647 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139845058 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082435977 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079265147 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116426663 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.642626928 seconds)
  done (took 10.407243271 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098785459 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099023555 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067463431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123888657 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094239916 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068315832 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074126818 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067235577 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087459764 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12556172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088779475 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104924207 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065309658 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06848451 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081893155 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195300054 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078874941 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079663184 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067389272 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077614903 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105522016 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07645291 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07808038 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077843801 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127673036 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167689469 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095600633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096463166 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065491706 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079299711 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113818447 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124710923 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065321034 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064933313 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122334674 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096399947 seconds)
  done (took 4.554853315 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101978385 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.09314772 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100250362 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.605008415 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065336063 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145685707 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231365274 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071405297 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365416029 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.153318018 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147925984 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139748108 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.120239577 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06872366 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.24334518 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092018621 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11706804 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.255825743 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066024071 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065336592 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06409445 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073981341 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066596023 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062722769 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.074643648 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089188327 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085303607 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.202572314 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.975389611 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.285881869 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067124637 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172273627 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.087748726 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.389991375 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068578032 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.088162768 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.390120131 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123149773 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064367598 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158789286 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.12834052 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063633576 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113902732 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076756037 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068063567 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070238614 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067336409 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077317631 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077312112 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100534581 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067511651 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064759335 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166577484 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064431853 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065517728 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066915884 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149079782 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063587399 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.144636806 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063610891 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067781706 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09408314 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070151646 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085898525 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109847598 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.348153702 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067447856 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.08438828 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067642422 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.241452184 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076103494 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06535432 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.08213497 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065613162 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067344885 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063432648 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063404915 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065566993 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073743303 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068822919 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068370617 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107636216 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065782665 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069637302 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065029668 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070403231 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096355857 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065340575 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.454208532 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096253487 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065965665 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076122461 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103319581 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066220632 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072121492 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066872062 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071042648 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065258105 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066266504 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071117528 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093483163 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06898166 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111656784 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.177910135 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070735955 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066182851 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070997032 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06918301 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068622583 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065452756 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068475236 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067491089 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064685242 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114804494 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064766961 seconds)
  done (took 21.906263316 seconds)
done (took 39.10687312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24037217 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080437203 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0809188 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080508669 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080673393 seconds)
  done (took 1.800304173 seconds)
done (took 3.027188556 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125424446 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098647891 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063383858 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097526383 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063857176 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100402012 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099831124 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081879836 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099509296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063526449 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09708734 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06347119 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063331194 seconds)
  done (took 2.353103594 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079671995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083638145 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068225346 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079803283 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061013198 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079699669 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079147268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087175453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079232229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070615099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061792253 seconds)
  done (took 2.053147534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079656702 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081708117 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067876843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079903442 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06155646 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.07978813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07980399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083378372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079787095 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072101679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061615297 seconds)
  done (took 2.039910186 seconds)
done (took 7.662360376 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07356727 seconds)
  done (took 1.273739501 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524868609 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.445360838 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.075909546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.096598913 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189834024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.104712907 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.226327364 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.079885989 seconds)
  done (took 8.118954814 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103871416 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069813109 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06831561 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068587826 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067887437 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068986503 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0675693 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068919223 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06852035 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068107498 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068942636 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067338937 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067946652 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068604632 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068295898 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069251987 seconds)
  done (took 2.422165917 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094831879 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093346955 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071525572 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072952907 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071077042 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070635848 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073433353 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072744773 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069790959 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07155226 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074203528 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072162825 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071587778 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06287361 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073615175 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07466838 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069908313 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073487518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073826473 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074847189 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073889898 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06279199 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071239517 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072233596 seconds)
  done (took 3.081035901 seconds)
done (took 16.112281167 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11255628 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075318858 seconds)
  done (took 1.394307638 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076775054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077138817 seconds)
  done (took 1.370888549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07510803 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061009717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080818289 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071312933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061318235 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061548681 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078834964 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061890943 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06116351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061433433 seconds)
  done (took 1.892876084 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063806585 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070382672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06801905 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076791347 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067533532 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062483307 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065268444 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062742142 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069762815 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061617397 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066310024 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080833106 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065992649 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082358204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06561244 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066140878 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06807234 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065599475 seconds)
  done (took 2.451623728 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061515189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062614619 seconds)
  done (took 1.352608568 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06543609 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0627275 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065582334 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065620171 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062031809 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061108882 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061728229 seconds)
  done (took 1.665129971 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.362492785 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.128580759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327239144 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069366579 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077656651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248263108 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063561156 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068393089 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067910722 seconds)
  done (took 2.677161514 seconds)
done (took 14.037778954 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078853854 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084984032 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095005995 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.403378412 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090815941 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066307093 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112191941 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171936184 seconds)
done (took 2.343354138 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207077264 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.087934364 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.91016283 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.064628318 seconds)
  done (took 3.293444388 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329788648 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089130222 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076426238 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065412428 seconds)
  done (took 1.803324494 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065947495 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068745954 seconds)
  done (took 1.372522665 seconds)
done (took 7.921280759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063616533 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063148349 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088737452 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063929583 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063262504 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062972071 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063663659 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063647282 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063460898 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063467788 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063514323 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063530859 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063199196 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063214197 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063339073 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063814451 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063499852 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063438833 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06404722 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063654172 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063936318 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063367883 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063800962 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063546442 seconds)
  done (took 2.81464531 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079325662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065238482 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067165844 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066466162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067601121 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067042214 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066632986 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065286653 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067261191 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065293276 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067572351 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067296056 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064742316 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067651787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06503843 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067558072 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067456208 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065266971 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065802466 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067635544 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066698681 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065998085 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067114705 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067239073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067198131 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067520553 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065362859 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065422332 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0670478 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068136486 seconds)
  done (took 3.259034623 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063696759 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059900805 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061393875 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069246081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059807399 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060514106 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059543008 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06016856 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060661153 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.059928695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061208161 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060017587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059893009 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06108796 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.060726003 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064622313 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077066006 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060009367 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05955411 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06080824 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063767237 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059885521 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.060348657 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060020101 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0602766 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059603206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062902472 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.059826868 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06086302 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060100929 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063630689 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064444992 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060228879 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068684027 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064618265 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.059758876 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06408832 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059682044 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.060688359 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059932893 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059977297 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059664902 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05999844 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068714628 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060154823 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061490884 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059865735 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.061204245 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06014876 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.061839667 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.059472546 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060231085 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.061712034 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061217149 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0649262 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.059593354 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060819232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05971212 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061047557 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.059889405 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059719865 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05986434 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063285319 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061118315 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077496628 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06864205 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060140721 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061366816 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060459714 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063171203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.061376817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075377003 seconds)
  done (took 5.719178729 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082782999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085305647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064908407 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064542161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06033492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06033159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067980321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060727542 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065179349 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079341025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060832422 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064960021 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065261327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064663465 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060638043 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065003293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068812919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06090006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060861852 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064841041 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060799963 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067881355 seconds)
  done (took 2.724624312 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147012876 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066482353 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103369488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071038364 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068746918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071062508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06625009 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066255218 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066367362 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066713627 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067345295 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066405339 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068784774 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067122889 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067090345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067063878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066601238 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066779762 seconds)
  done (took 2.589627121 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07643031 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066245595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08467876 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06603644 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066415101 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065783748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069611553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07042233 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065579685 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066570677 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070314374 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06546709 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065195966 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065793828 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065278834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065672254 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065808653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070246371 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070482101 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069864803 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069993643 seconds)
  done (took 2.768273142 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076729195 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06525374 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079971222 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066710409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06100842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060746123 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066337136 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064988798 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066031095 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06465308 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065203467 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060578608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06715986 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065113953 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067931259 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065239788 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064685113 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065780251 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065171498 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060953095 seconds)
  done (took 2.579212553 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089771103 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064020573 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063303454 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070619304 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063649421 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063643344 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069482811 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063719921 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06374584 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083962781 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063728323 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063911291 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069492968 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067144496 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063984264 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069361972 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069521681 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069955524 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066675528 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064162528 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084110062 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063773127 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06943251 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063369364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063308056 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063788162 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063585061 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067252538 seconds)
  done (took 3.162958644 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063828877 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063435355 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063663715 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063549905 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063625632 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063946969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063814245 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06377136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063971616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063932334 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063677673 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063252545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063476621 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063383917 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063273155 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064016689 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064159395 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065051024 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063845926 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063495763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063285943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063264377 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063350896 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063928989 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063775074 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06299915 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063353211 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063448581 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062957777 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063319271 seconds)
  done (took 3.173067783 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073834118 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071767111 seconds)
  done (took 1.410594963 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062736136 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077883338 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060635986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071197674 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069722158 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064555765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069489701 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069029958 seconds)
  done (took 1.806169568 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083511633 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.073291103 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06316476 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075028563 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073393378 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082212046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125411753 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.062912261 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073163278 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063612657 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080353737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06455548 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072515325 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06805155 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0725788 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076644186 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060461085 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.067870945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064007755 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.060971505 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063362074 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076497862 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072406675 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060939403 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068189036 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090377434 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078658802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062164024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069228448 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074547627 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072498497 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060195851 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062185838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.062532824 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06092186 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072832397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08092351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06923866 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075824066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063296688 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070770951 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060734088 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071153245 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07302565 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078753938 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06213418 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062489964 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060043292 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063610255 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068185996 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060290535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066673921 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06011982 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074058721 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069819837 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077416318 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060829026 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068304978 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068616882 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069208432 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073925071 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06876377 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072018569 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061476856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077613352 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072456575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074271139 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060473018 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060023955 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060391701 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075738278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091419284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072134514 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062393213 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062556247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060330303 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069176394 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062557662 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071231748 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07329988 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.061909722 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067434539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074278997 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066930161 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068919164 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068411315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06128611 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065378928 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063849946 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081058546 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061935384 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060535581 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063731188 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077224673 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069361163 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064658867 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063770334 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073680092 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060235872 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063066348 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062958207 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068390757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074954175 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066087456 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066582053 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074818215 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070652808 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067389248 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068417595 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059363567 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.061880459 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063462193 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072358713 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059116495 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067914748 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065318937 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.061785168 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072015922 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.059685552 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061208845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07354545 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07210615 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.059911265 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059100079 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068456097 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06085842 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063237362 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074580986 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.059792784 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060061553 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059347871 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068389746 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.060381358 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072805805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064171913 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067885988 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058921397 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059456609 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.064587612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072311889 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064808744 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066843209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070211434 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066796939 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060484682 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072949649 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068280873 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063436798 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07020222 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065580894 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059360724 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062806493 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067340294 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059637614 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067980289 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06283802 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067580942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061419996 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.059967956 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066513722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.061765394 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063676073 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066683073 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059943791 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075579957 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067631189 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059593557 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059304053 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0667185 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062955515 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.061326427 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063677246 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067743537 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.061559088 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.05991704 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060932724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067494064 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068298387 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063671677 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.061835738 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070914275 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077940817 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.061423777 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068846889 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.061200458 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.061644596 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061315628 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074784102 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071090041 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064935201 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068090711 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059058119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0701508 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073210619 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063183551 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05930817 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063595565 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.063420457 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072877013 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063112905 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060870866 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.059600608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066569824 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.062578017 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067734242 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06053026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063498873 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.064392242 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059028526 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064757253 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.061630609 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074094637 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067396746 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059138745 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.061851113 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.059756944 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072071844 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059679449 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062748781 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063863213 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060853061 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060001088 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066860432 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058857184 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07230704 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072892259 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066643689 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062915317 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.060170547 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07192658 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065860846 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067893233 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.068900988 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074442536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063090236 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067364068 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073955403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059830042 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058674311 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071768933 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.059147932 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059149684 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060387232 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.059500509 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066992284 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065139271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069344663 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058303057 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067335163 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.059376519 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06343787 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059551235 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.068537358 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.067558624 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064942324 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072717488 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.061339373 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.060274647 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067684239 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.059767783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.061862956 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060747214 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066759594 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060888425 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066792098 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06309498 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065870289 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062955668 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058963953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065819413 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059538449 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065487255 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068569832 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060705665 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066009312 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066840338 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060693286 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.308714412 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068908149 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067831843 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07227279 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070741025 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069884411 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071987761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062939862 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0770154 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064325142 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078080435 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070624735 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062497132 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07073853 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072207722 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069427928 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065675946 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065105885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070702842 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063946469 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071122785 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077145164 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066089044 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079938236 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07448695 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070596335 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070885511 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069821038 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070206271 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066645468 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068929069 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064575221 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069814421 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064086994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072589401 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070892473 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068672688 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069985719 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063923045 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068970932 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064788539 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061463493 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06604605 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066558466 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063043067 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076123659 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063464782 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066580115 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062494266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063611624 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062125482 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060738611 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070084659 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06971489 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.063201539 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073412805 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065249473 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069235974 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078140026 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060139654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061420756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061566941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064330235 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075239387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063327995 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07664751 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068415757 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065864495 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060938389 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063271229 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06177115 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060589196 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061452477 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071652213 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065751378 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062509981 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062849967 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07010692 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06375276 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075619726 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063011532 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068056303 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064146825 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060632953 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066180461 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065910944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070836836 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063314965 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064381513 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060984562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.062981466 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067305677 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069351933 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062406108 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068613967 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075153902 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062661979 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069560752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065214711 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061001609 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069832189 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062850427 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062733257 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065947279 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070701818 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070565391 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063356955 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076905203 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065462925 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069127027 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062701037 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061282689 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062151158 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062465711 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.062624412 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065162722 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.063825719 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075366488 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061033666 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068541016 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068384238 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067089681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072757099 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063378222 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068856039 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067864243 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065153628 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069003777 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076308967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066566652 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06972682 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062575731 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067831542 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071827435 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064973117 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074269546 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067730758 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062247187 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0677687 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063784026 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061855766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061457021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061015258 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07171471 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.204362165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065149055 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06505957 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061782589 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067202117 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064760117 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075695879 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069140693 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069920008 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06047012 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060558472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063223689 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063807716 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068604101 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069491923 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072556557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069794649 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066698834 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062176235 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077529021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072641266 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070292224 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064492972 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070068673 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063164012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069690507 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067629915 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068093178 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063445827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070882011 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068471345 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065400324 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072954133 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070889353 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063383813 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06878492 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06898652 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067384791 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061318726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062631371 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069115139 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071910934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06926704 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062652893 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077285 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064225809 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067817786 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065211519 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062192945 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071202101 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061185487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069572133 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063820717 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063874794 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061190423 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065241103 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064427318 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069434021 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065148752 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061119542 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078130503 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076843798 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069104593 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06201733 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06177424 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061255444 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061193696 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065582689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06312962 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068193913 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077150208 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065360613 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064985777 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060813331 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06341584 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070142931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070761971 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060309895 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061071555 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06547653 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069459404 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074293494 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061625136 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.062416992 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069958165 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068959352 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060963171 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065021192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060445644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070467609 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078429353 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064438295 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068896891 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072028717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075298232 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.062827964 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060810661 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.062623204 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068575791 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067920818 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063071154 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063528706 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081575458 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07003452 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064958395 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.061745229 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069736459 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06550147 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075596444 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06585272 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063027831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071505841 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069562208 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068967932 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073079615 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073219318 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068408611 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068474407 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061578531 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067799901 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061551959 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065960655 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06373259 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062915526 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066080107 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068955337 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065144282 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077876294 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076241374 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065058985 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060036032 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064842876 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064609394 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060470437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.062248541 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061520005 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.060587712 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.060648719 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06106744 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067964895 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070080921 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066448798 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062100966 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061490191 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059248312 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.216074252 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070434941 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06899397 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060081367 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0634313 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063540262 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07034221 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065384955 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064214165 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068810427 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068647683 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068541474 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061687427 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074706044 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061841589 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069390718 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065831765 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062882545 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062955582 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069844253 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0669334 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064420252 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069457774 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069324358 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064965917 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060098471 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060833441 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071281189 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060572884 seconds)
  done (took 41.560795815 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098405585 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063005294 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061522409 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061447616 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070561997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062749393 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061361533 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062438518 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062450125 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064143492 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061500518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061361007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068779239 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075844058 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07096505 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066063211 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061953118 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063056694 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061483174 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062431983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069006097 seconds)
  done (took 2.812537977 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068900084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076534699 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073771528 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078463743 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069841691 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06612167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073196247 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066021815 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0745467 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071347877 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073776888 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066862261 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071670204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071555035 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07150739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066762122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074099576 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070513154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066225737 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073485931 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066857608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073685611 seconds)
  done (took 2.96484967 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06305304 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062560076 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069613087 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061149939 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062024655 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0605493 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064932524 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061365872 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.064135942 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064961379 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065026729 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065524631 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069308763 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060824899 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066110274 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061340619 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10458044 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.064192407 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062811213 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.062740934 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06086299 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069053914 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06070395 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061441435 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065021244 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064644261 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062692791 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060986679 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062152116 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064741408 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062465814 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060678997 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069157819 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068390982 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06471624 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064813317 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06213859 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062206845 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064065333 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060987863 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069338435 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061556632 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062781329 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068909363 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060858584 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.060873618 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069131305 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062079923 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060928556 seconds)
  done (took 4.568534793 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072848996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10883268 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067640371 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090293799 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074999394 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067866569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067025435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0915001 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062560058 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063876435 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075987166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076227435 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064892946 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066134675 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06731674 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064619086 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065278683 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064005662 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067269806 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063902854 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067408917 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068525118 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075017226 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075303551 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065320832 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063870426 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06406106 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065933328 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074609007 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068182746 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065980914 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066525002 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075827871 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069015563 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063930214 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06366393 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075897442 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065219189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064459612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062669457 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06373095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065555511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068386136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076423746 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064708103 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068934113 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064172136 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062031466 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074890135 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063991172 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068611457 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07637196 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065473937 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064578538 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066437308 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075288549 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064973241 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063413368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064599126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07530052 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062531903 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06531433 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075583264 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064140295 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068092925 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076557922 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069156539 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066018222 seconds)
  done (took 6.248130759 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072874033 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093353861 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078172611 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078064272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072080124 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072724972 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072423977 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072516585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072013089 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07558111 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072555022 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112332662 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068043865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073860698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072246831 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072595734 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072928764 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072664256 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072279593 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071861498 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072189067 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077836797 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072138283 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077778871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07483049 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06850436 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071822612 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072230366 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078289076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072139083 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074752427 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071995619 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072280484 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077929378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075585666 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07188086 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061998029 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071901343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072039467 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071773746 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067972996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077758964 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072059636 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068047644 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071910596 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071834138 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078146256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075078915 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07381317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076204535 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072843511 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07828358 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072213244 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072514085 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077948356 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08071736 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078296073 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078134898 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07240207 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078515994 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078595646 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080580574 seconds)
  done (took 6.066427885 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078886027 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069313297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080083647 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061059534 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063642002 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070978016 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06105336 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060848755 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068759469 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069416702 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070549115 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070557481 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073106025 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071182597 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070587101 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073006985 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0711433 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070617443 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068818209 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070948748 seconds)
  done (took 2.830669536 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075347147 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080307054 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066578872 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07133324 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066990885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070836711 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06603176 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066813461 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067050841 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066519596 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072103146 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071991871 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0670473 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071002629 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071873143 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070520602 seconds)
  done (took 2.545157546 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082804472 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06881791 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07536148 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06294327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06614165 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06155832 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062238331 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061279768 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061230925 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074702037 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062456945 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073240434 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062543451 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061387391 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062026173 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067554209 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061554217 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062350094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062088518 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074842874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069025598 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063698581 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066181425 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062509244 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067331159 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069872433 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064245254 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066197041 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062639077 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062893418 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068285444 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068996238 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062564934 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062814289 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061548018 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062274088 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062257199 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062964141 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068290686 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062587719 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061091271 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067462669 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063138742 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063574044 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061681416 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063605573 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061820994 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068285938 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063080839 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067832146 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062767063 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065273308 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063551321 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069892884 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065338024 seconds)
  done (took 5.016811004 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078277223 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06729037 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061024035 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061035875 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084678523 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066601864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067166354 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066682541 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067028035 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061022769 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067403794 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066264317 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067587163 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066704994 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067065104 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066808399 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06143117 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066533396 seconds)
  done (took 2.646383539 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072513495 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067032407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070481369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066325231 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066216803 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065625129 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06192564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061467844 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061538016 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065764388 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065887214 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065524031 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061055878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065454413 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066267761 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067238915 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066226132 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062175061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066452164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061418479 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065575707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061679079 seconds)
  done (took 2.864658706 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0948171 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082720522 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138456725 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078703503 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087414829 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071133622 seconds)
  done (took 1.984750238 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09269357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09705309 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066057862 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066182207 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072033263 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069474237 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070023954 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070053644 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073520286 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073962451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070203706 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07676321 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07369979 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076272642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071910342 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071822785 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069307429 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069733293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066068085 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078484128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069435176 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073845835 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070184184 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069898538 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069655645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075942855 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074127736 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074433939 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06935772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07370356 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071533911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069719518 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07387374 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074033382 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066679778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073501313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069801298 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078602709 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072097334 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076184188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066306766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071760667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073998172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073001927 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073849487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069933307 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073553088 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069645961 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069935331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083489179 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072089973 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076081452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072058528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074387941 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074442998 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08048857 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074505346 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076027462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072550195 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074755013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076230607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071989404 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075892656 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074632505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072285396 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075830285 seconds)
  done (took 6.276256028 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102986452 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067359895 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069764397 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074601319 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075029934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069709205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069555103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069705764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06974171 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067570365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104612246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070470271 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076611044 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076228915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07005473 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07022107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069839283 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075684331 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066927802 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080240271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069751981 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075230167 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0753627 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075935824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07397935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071762279 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069353351 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069713571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069624282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069739678 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073243626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069636077 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075645213 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066638386 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076450532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070179198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069501687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073619021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069614748 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072110067 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075531706 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078540626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069779993 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069387227 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07442935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069801461 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069718633 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066714865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069408103 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066719142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074348856 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074489927 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074093129 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075796225 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069713875 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069865376 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069449584 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069534474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069787341 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0715998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075626228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069106884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079592482 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069487687 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069400029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075409085 seconds)
  done (took 6.256437442 seconds)
done (took 127.889103418 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207950978 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183883989 seconds)
  done (took 1.811409082 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0734217 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102543939 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080769355 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132720118 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069937474 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103935836 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103981844 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081170867 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06970584 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06987011 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069888266 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072782665 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137729591 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070448145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069986935 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072445056 seconds)
  done (took 2.821922132 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102651995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.213263252 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106877061 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068431193 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102101878 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075132956 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070781442 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081457396 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074526082 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07049024 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07552198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073629119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069960696 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073824573 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07446485 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075761415 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070094106 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075526384 seconds)
  done (took 2.996790141 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100977285 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091934479 seconds)
  done (took 1.641725876 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174769659 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13410164 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203647183 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.334155636 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.144737361 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.413822995 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13593926 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.136326115 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117193589 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.131748899 seconds)
  done (took 3.369996023 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102339179 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192833698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293428469 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118772606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074896888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.104968285 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12091568 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080738966 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079565021 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079321427 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079153518 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076000538 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098959053 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075497701 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074556363 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076996134 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101545767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073708371 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075026479 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074876116 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102657407 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069263262 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075132008 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073549097 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.0769464 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07699702 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070208232 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068939826 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075248471 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074943418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077257005 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.103116731 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077314674 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101340024 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072912839 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10245713 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076102509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072813461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074965778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073262128 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075743811 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075541808 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0774784 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075542626 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069720792 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075739265 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070687782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068897797 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078545864 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07002779 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078318246 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077445273 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101420427 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070076444 seconds)
  done (took 6.183775972 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106812435 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105324651 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070381674 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111691927 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102638657 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069965692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103892929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098204007 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10520526 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069554875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068175388 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070480253 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077791581 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079404105 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113669626 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105884978 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071459534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070253482 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105720851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106293299 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068760044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100086348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096431741 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105297545 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067863088 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069741803 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069204258 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069619443 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074451283 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076028822 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068843294 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077230166 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081850804 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075877653 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067491828 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068083232 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068238995 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075903797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076786387 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076186603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074551101 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067403739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068037598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068704552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069172055 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067108646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075066881 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077048419 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0750511 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068714251 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069186161 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067718085 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068909979 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076665765 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074600058 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077180698 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076651209 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068486293 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067725905 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069943638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077101682 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076435838 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076206179 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069169521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07710337 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070750265 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078410747 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080921048 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068228515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069232291 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068074132 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068985216 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068761352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074389059 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074663519 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069070487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068468846 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068607567 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077384284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075505518 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06840085 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074412207 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067340439 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068282769 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068847771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069014999 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075153642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069723969 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068337128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068821341 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06809529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067357679 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074532627 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076319621 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076021153 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075182499 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068810381 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075734564 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076066793 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070172092 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076403806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068048625 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069598762 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06916935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075561821 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07459659 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076807649 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068193508 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067775067 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074298687 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076716958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068018322 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073668455 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075938892 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074269468 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06687434 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077324208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067567567 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075693341 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068000617 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211912662 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070170204 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076241383 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069018843 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067855021 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068473439 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076474691 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070023037 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068498376 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069154323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069124409 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075844152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079571501 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070908878 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075688809 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076539049 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070129967 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075583303 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068690466 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076573152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06898923 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069474792 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067741371 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078204666 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06859896 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068736321 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069029916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07745164 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068541075 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077247849 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075132429 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068025993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079010894 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078868861 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074580356 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077464608 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0695408 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068695439 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067841531 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068766442 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074853382 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076715967 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069432033 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068432978 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075001028 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077311488 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068597997 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075502917 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07583502 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07577802 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068581792 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069007653 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078119573 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077381166 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07583802 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075633154 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075923282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068638762 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074813175 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075422162 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068239881 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081604246 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068297642 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07953208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076376658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074531976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076444064 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077812419 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077220229 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078079332 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079634482 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068116669 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06835653 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075701979 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068751001 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068743578 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075044487 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069200664 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069362856 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079996176 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069076396 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077694352 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067990722 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07594824 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06759833 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069358121 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080035633 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06847168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069122869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076002314 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07178494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075121938 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077932516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075360871 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068167788 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069874118 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076241585 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076104793 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068358743 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067845717 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069562349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075050312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074387327 seconds)
  done (took 18.312573512 seconds)
done (took 38.597537496 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209126107 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158848364 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188038605 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119142439 seconds)
  done (took 2.216716802 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106873814 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100698093 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.085766917 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064255105 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093245575 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064976068 seconds)
  done (took 2.002074695 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301439149 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206908908 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184793206 seconds)
  done (took 2.177773435 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208461073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198550599 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457026644 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280047618 seconds)
  done (took 2.726646 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138371142 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081393344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063668613 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080611447 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.121297681 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147455951 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092477669 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11649588 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074823905 seconds)
  done (took 2.457824148 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146618696 seconds)
done (took 13.227681926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101621663 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.354875636 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.22522997 seconds)
    (4/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.202366422 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071905895 seconds)
    (6/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199592094 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068126653 seconds)
    (8/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.18496439 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22493448 seconds)
    (10/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137852133 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195510054 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150485929 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.18083744 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075546027 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07894966 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170840326 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117642064 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074573054 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100053458 seconds)
    (20/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177034297 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102535563 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066352007 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074507636 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136114555 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.209534496 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07389311 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213096768 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071150138 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131959495 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072207994 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102586624 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08293942 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087641271 seconds)
    (34/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119321029 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192290898 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170103654 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075447208 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.177488535 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067299502 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072915612 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073090176 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073943328 seconds)
    (43/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107079649 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192006869 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063883122 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185447158 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.147974566 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071834921 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073413495 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.098239126 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075025108 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082513478 seconds)
    (53/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.170119697 seconds)
    (54/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065354412 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.156477002 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075064174 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065050031 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092946649 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15909156 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099346539 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073751575 seconds)
    (62/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065383973 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161277144 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.065963227 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0734058 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220206322 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154627466 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08425737 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088933638 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064760567 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074253704 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065362924 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078172883 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09031595 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07590374 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.166394586 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071772505 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064335838 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.225601901 seconds)
    (80/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.167203577 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.192503681 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068419056 seconds)
    (83/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.212945964 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064150761 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0758195 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184859632 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075658895 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.136404617 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164099394 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072266183 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.223740192 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071361594 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091471161 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12467877 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094527665 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07510385 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066631252 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066463 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.136895717 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123714479 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.13748092 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065092362 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072206819 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205569393 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066051972 seconds)
    (106/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065555859 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077750736 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071979261 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.064339881 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141849981 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122076449 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074273398 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137265068 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065634138 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076224304 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06773125 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139735284 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072096958 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06645742 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065387821 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142522231 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065033574 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094283762 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063954392 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.065765228 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073255731 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073691145 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11785856 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102496767 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123633895 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131975135 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162139153 seconds)
    (133/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065516163 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090538886 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065025389 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074809968 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074113282 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 0.166745233 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064817646 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066281012 seconds)
    (141/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195872117 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093214843 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065747327 seconds)
    (144/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072679849 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073926715 seconds)
    (146/309) benchmarking ("sort", Float32, false)...
    done (took 0.132041319 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064596072 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084352086 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091905329 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085699681 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126962109 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066523665 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086214787 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076621089 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073112661 seconds)
    (156/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067175425 seconds)
    (157/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077840042 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171800102 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064511304 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165936711 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064698303 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064085001 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065940774 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088074734 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072891397 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065174786 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064509687 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079259892 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112391542 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.077422559 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073159603 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069367991 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073686178 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064068816 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138846032 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112241308 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065612229 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07268114 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065712859 seconds)
    (180/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066520156 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065025817 seconds)
    (182/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065599938 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070068867 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073553196 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065586732 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.206747985 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088660173 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16039732 seconds)
    (189/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.1557112 seconds)
    (190/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067722919 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071340537 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090330034 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069064404 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071343073 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063874569 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065744539 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132075242 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065430881 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072188588 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066895939 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06613942 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067343035 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17767796 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064800874 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072019193 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064244954 seconds)
    (207/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117525391 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088485112 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064859733 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167054519 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065084187 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090436826 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071324028 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065216928 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063520703 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063552777 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063727563 seconds)
    (218/309) benchmarking ("sort", BigInt, false)...
    done (took 0.406774072 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.0671636 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07350077 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.141176241 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066769116 seconds)
    (223/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137885722 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07674516 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074918858 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07061655 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067099893 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136178605 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072562038 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065132943 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06572239 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178884545 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086479338 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19980615 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073576039 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064949107 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066886439 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068346785 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089733545 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074665081 seconds)
    (241/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065611935 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065889958 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065519998 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065714108 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180225544 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065563575 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064617057 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066504112 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 0.129990545 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064642961 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206248429 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068917227 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064634771 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065167354 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065229387 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112477852 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073841111 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064818784 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208577369 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073709447 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069260028 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065750047 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131608681 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065154143 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136525377 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072241398 seconds)
    (267/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.137902352 seconds)
    (268/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065927904 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064802888 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066472423 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066177951 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074972289 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06432908 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072181668 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06566115 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066031757 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07269779 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065880744 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064832033 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06565462 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161483313 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136139357 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066161203 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065493651 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125317939 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088365506 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08698866 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07462861 seconds)
    (289/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064468829 seconds)
    (290/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078149732 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06516098 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064633072 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065398581 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078325545 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064945009 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064660551 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067289129 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071847815 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080619352 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064302907 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065309746 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168343307 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06563793 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063942128 seconds)
    (305/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063922827 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06456927 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065026446 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065154795 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11610232 seconds)
  done (took 32.567492149 seconds)
done (took 34.070469441 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083283783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096304947 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072606753 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090529089 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079464771 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092449423 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072638079 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077015939 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079772977 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078802463 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07785851 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07169668 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074048228 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074426197 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072759869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095013058 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079080821 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07292364 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073246411 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06474716 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073397768 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065359734 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064732412 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071535965 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076503829 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072456169 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074456417 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073959447 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065375719 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065471497 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070050247 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07382536 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065240118 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077625641 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074399847 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073395966 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074549071 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077358878 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065041612 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065706729 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074953859 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06525076 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073206771 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071626244 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07013271 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072059974 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073277313 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077073639 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094718982 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06940455 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075263441 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075892638 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076583094 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070755382 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070191671 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072983123 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071405456 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095338156 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073447046 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069863317 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07465827 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074208874 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071492143 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07276559 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07326523 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075508204 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076921305 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071881011 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075189156 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072581569 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065016081 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072886852 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070347731 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067670004 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075940045 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077652677 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064596478 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069205178 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072841269 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073222597 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065384125 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069008985 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064404852 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069747075 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06886759 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071021767 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069843783 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072154104 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064762264 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073806689 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072281996 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072930556 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064735161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07753182 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065145099 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071589433 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064973384 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065055258 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065028581 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070149876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064767483 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068739776 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074004557 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064206842 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069965913 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077769522 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065635604 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072664168 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064527908 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065267592 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076030419 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075354905 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065224593 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06980161 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064614312 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070474789 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064693746 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064764824 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064425982 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065138561 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069098395 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064923136 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068704384 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070331696 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076889724 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064476711 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06965324 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068394138 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064684916 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071458531 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065092489 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064917061 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064287349 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077533078 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06877244 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064985047 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070840897 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068604288 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072615435 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063874839 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073243758 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070413824 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068846732 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070602341 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063716916 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074683192 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068324686 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068518454 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063610722 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063937999 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063339131 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063885702 seconds)
done (took 12.498845647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069841447 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.11345668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.08836872 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09061394 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081005316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066402012 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072197956 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086939697 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067908298 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.092038945 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086679547 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086329862 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.104993023 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065157082 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066076387 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067064119 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067234985 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075911202 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.090644023 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087504133 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101487333 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066199331 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.082980922 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.084847126 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080695767 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088078408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066936526 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066852691 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068858206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084460671 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089819542 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068919744 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067065914 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.085631965 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081975827 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077343468 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066579769 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072921514 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066864969 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065505305 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067127528 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083518236 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072254476 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072854347 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067112975 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073677402 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067015869 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079613584 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084237245 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073201575 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.079355485 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.087148088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068422803 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080177506 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064960365 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079684894 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.073191029 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066414351 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066175423 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07157484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066507768 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06859224 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.075245576 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.072988259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069473515 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078966447 seconds)
  done (took 6.628097051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085861214 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093097545 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081571633 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081488123 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065051821 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066196346 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066333532 seconds)
  done (took 2.148579926 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067790561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086926526 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089991571 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089686878 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081951346 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090202186 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074355273 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066348109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095076009 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065102735 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085830861 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099110713 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070601808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076712802 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090830921 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066086391 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089894813 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066477392 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066883037 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090215472 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070358555 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092084367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077232214 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066502349 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078231927 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06647219 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115856532 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074512462 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067989989 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067374069 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06737182 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105736439 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078183087 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079659801 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067516117 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080636088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079614657 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070150033 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.076592402 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076207506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079166512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067947936 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065460764 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06827799 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07014253 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077136364 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065117985 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067469249 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068047719 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086000225 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06499736 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07813876 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070142688 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071073852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071927255 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071199516 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074808328 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067624342 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085745641 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067955391 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082861251 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082101219 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078812663 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082084231 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066951495 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078107193 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079327667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067955906 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067938013 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06809937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082105883 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069570597 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068188516 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077019412 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066303063 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090595852 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090350091 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066207001 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078676763 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06686523 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06757312 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.077200894 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090113376 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070793379 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067392925 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070768163 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068834078 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069659882 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065299886 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07084515 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068117911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071735709 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06742488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070587783 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068621939 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081941554 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065552331 seconds)
  done (took 8.920430529 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069946942 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067402462 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068643441 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067742657 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06761524 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067140331 seconds)
  done (took 2.054673428 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090359506 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067363989 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079090499 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066975099 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105101793 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080819717 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081131373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075225267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079518663 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078511424 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080884246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08384518 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.084486595 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069367147 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081144581 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068102107 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08102109 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070761589 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07840818 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069488635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078851998 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068881945 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069327047 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085186403 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070279169 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068360391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075369008 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078298767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077842562 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075495626 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068448779 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069740877 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074891028 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074962067 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081605355 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077203455 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067104383 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072657282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069195623 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070006789 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083913108 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069752608 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06942348 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072794681 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075087305 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074487871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072726568 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074590452 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080672084 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072662155 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072963245 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067752362 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070357072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072709481 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074169377 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075209457 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073279509 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080498027 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068415753 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074425563 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06674566 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070215892 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074612595 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070143143 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073235646 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073210802 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074251372 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069248925 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069084638 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067123095 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072806902 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067269211 seconds)
  done (took 6.97603191 seconds)
done (took 28.351893317 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.512202666 seconds)
  done (took 2.095155213 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.6157724 seconds)
  done (took 2.237410466 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.54092583 seconds)
  done (took 8.162104254 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398499001 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464390451 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.73934207 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131559491 seconds)
  done (took 3.376117225 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695558442 seconds)
  done (took 2.329493185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24032291 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22597463 seconds)
  done (took 2.103487861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343226127 seconds)
  done (took 1.969949809 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.055067224 seconds)
  done (took 2.678466684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251249472 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158942988 seconds)
  done (took 2.041866928 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448383319 seconds)
  done (took 2.072481627 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.251952181 seconds)
  done (took 5.879140982 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238446404 seconds)
  done (took 1.897308639 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23030343 seconds)
  done (took 1.863042429 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.721051199 seconds)
  done (took 3.351881913 seconds)
done (took 43.692098055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082955695 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083494081 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084034503 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080220961 seconds)
  done (took 1.935003857 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07531343 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069490594 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073178392 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069289636 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073618357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070347561 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070846315 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07272179 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069813719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070334901 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069846952 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070592197 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.072803506 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071181599 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068953044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073279877 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073758815 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.06992847 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073177372 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069947151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068366719 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072997054 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.072572929 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069357498 seconds)
  done (took 3.340787969 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078847806 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072741167 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07418718 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071010751 seconds)
  done (took 1.938191072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076795682 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087466348 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086318171 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076517155 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088662944 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083722187 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066371287 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.066493842 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.067755593 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075931017 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065284314 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.091259263 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085331951 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076222244 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078052217 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062741332 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064714679 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084344537 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076695247 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076467069 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06794555 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077021427 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06574793 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084831147 seconds)
  done (took 3.473210848 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083893431 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066081008 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083748672 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091449801 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092162327 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066006526 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083320823 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092394368 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135861028 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065624706 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071447104 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065183304 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102979872 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06536976 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082189315 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107661136 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111344068 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068715791 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096874314 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065238061 seconds)
  done (took 3.348769267 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083621432 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068596392 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069679771 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06535403 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075950603 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072147316 seconds)
  done (took 2.08889057 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068653867 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067455562 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066605805 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066278942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071632901 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070390182 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065445234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068030995 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067112719 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067665162 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066968082 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066012968 seconds)
  done (took 2.459461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162369798 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070147653 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070358101 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065627253 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070834542 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065875438 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081059258 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068138862 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084249489 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066093289 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066224044 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068102986 seconds)
  done (took 2.587834742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184829825 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073156861 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214080689 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142914314 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09847246 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107004591 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107682804 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107232104 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.12923558 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093460076 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152553614 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152283583 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100903483 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123642024 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085873415 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121164232 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135434301 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150102876 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097844463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148659359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129991055 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11702387 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135187553 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094834705 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097095763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111160581 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070330756 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074712704 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152622541 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119183365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128976043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101410005 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086908599 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161993094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150949012 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127294833 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13804559 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079605929 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114690513 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.124068708 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186368984 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085683967 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145741858 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10113478 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076220714 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117714754 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106702128 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.110157939 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.094976643 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084696373 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274190054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166003547 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.123696304 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080881963 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114032906 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100692991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.103574555 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110024983 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163745532 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143904492 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116825247 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068500551 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103107956 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136779096 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121052576 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.100791231 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112722477 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086256426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120357976 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143430345 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120644108 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127544631 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.110859456 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0821021 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110502314 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126520553 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115119518 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154569716 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112157917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069467764 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109634384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090708022 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076324678 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140351942 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072681307 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158250109 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093647231 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.117167178 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121389613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103616662 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102289523 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140104657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129062114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098271199 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082557213 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097676799 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.110774869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129113787 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082336729 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102278459 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104617483 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076050164 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119104847 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07167014 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109756615 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091261814 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111224953 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113710369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075459541 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260346738 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099162328 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096184819 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119273951 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142843029 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083350888 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076633862 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15059989 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1100632 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096027229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131095629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142544414 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115774687 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09266566 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130965478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157278137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085602423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144726874 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095242 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079584403 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.100416483 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110663627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102806935 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.115247936 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076839406 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108107023 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148797743 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.070931279 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090492266 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121125856 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077335962 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07649078 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096742459 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096007934 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091198156 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095623181 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096183564 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122553124 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111937751 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09751701 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113011495 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091490062 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149958787 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082909795 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096802783 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098284972 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070013392 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12201841 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139424971 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074642857 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146647457 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.113695282 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10829771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109622636 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078986687 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126282215 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07528289 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069827429 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127142704 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10405847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100547869 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134161968 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261324931 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.114609453 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.109949387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117298404 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118168878 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.117996757 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10071226 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085075365 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107003739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117486656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069901472 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086284683 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078011591 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097249199 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087457998 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079905209 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125992368 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112553768 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10303189 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106486485 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091083564 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134979106 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0751372 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114621937 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112306705 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090089567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138272117 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136068037 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119323207 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095637851 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125658789 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070519238 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07125098 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082083021 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114946319 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079811942 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079883594 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103311859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13503826 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117564242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120490086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11519013 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109446455 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143019625 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069703799 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11503515 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131685922 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110372039 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.098813913 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085309435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.092759222 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129029086 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096226938 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165403862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105388784 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113537573 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142310541 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095565822 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074838803 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09744874 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118847725 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0926905 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.284889631 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093891758 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082937333 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100567461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075331198 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091846375 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117144922 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105573751 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125703418 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103765956 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117761281 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075955505 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10245475 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112841792 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109273995 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080585894 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110483922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15048968 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091105786 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10798214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136603618 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07462955 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131005041 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155086394 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131827433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079550114 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096620973 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111288869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115603694 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109497012 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127953081 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095203944 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125767413 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103409354 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083306608 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08147683 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090568942 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097632885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106329885 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096316744 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103777232 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.090016899 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119461022 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095047682 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103490093 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108393259 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095465121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093137307 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091269877 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157645945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10751988 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153709752 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094604267 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.129203675 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145770486 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071984173 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074523853 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075831995 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126620023 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079875389 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115086423 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.25779461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108746838 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111238504 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126032508 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090816787 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069362409 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101429964 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118657428 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114108822 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090420649 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.09521321 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144589162 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111310242 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074824327 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106107452 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108837193 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097098185 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155815526 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.077652911 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102506062 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073628111 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07529402 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115086609 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138588697 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082520407 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099003809 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110529351 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101600559 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115728935 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090338353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103782264 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121425445 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13233439 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116715501 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084628535 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103879532 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118546114 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139125554 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096584618 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09463852 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155379046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13680168 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144180386 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080851599 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10621023 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10562698 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10174347 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122520077 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079971557 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146915032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077406123 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123620132 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093330506 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083389058 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116371759 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.105533809 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082779906 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131196235 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104790209 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077388752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07514984 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257351849 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108537827 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095496544 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071785092 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126417394 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071187546 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122224865 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152796167 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076473898 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098309376 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090897703 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079072395 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094982624 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094517115 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081705672 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.094738577 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153871104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.082890261 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133720464 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122013685 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103697478 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125644666 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098857914 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637929574 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076625279 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136019532 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10540279 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16138864 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094350903 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108532153 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102443219 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108727895 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130151215 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095536448 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172660011 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119501014 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107077334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074589759 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095645224 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095921274 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082873467 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100855069 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105378465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103819302 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088730328 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107253701 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110818864 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.07847948 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090266752 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139183735 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106286099 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130142999 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128239204 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079580595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108208025 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121743931 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075344351 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110281864 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135591922 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252956746 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094793138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079370039 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.091810809 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155474884 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070467099 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138790821 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109760375 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101721658 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104604208 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100738293 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117358664 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09441712 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110315116 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086352429 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.101882095 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104099242 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079249274 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076122203 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098362177 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101406719 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.091774089 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090543126 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094148334 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134951262 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069435211 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091238519 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106725359 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127478249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154912099 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.100949995 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079541256 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108393992 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108233356 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103553861 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110278798 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113483606 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077096116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077273624 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.096984184 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117064517 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104377399 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109819621 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103203101 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148187241 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080334357 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22109356 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089889484 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098032933 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.084692787 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076493339 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091180202 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089944707 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09612801 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10372191 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15583374 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090465763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085022207 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085888029 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072425911 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079094476 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11553566 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103033154 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106498521 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095476451 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.077623512 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094343448 seconds)
  done (took 54.936186881 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106464068 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077113248 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096573467 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144650043 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121608819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23566136 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150192494 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187107979 seconds)
  done (took 2.914321244 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069952239 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094486211 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100230076 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08180702 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066103522 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067910794 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228380153 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080020884 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066151962 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090887942 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076505492 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068152599 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417461664 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065447373 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066522059 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074383972 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066788248 seconds)
  done (took 3.533978185 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381609906 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.592294388 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362118768 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074228444 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.864918603 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090458589 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151620497 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138272503 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080813775 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520160622 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368180692 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129377547 seconds)
  done (took 18.515647892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082298637 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076916957 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087964715 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088218235 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077021653 seconds)
  done (took 2.173332611 seconds)
done (took 104.913525042 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081761347 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.190659429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066931762 seconds)
  done (took 2.043565492 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09183293 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086888084 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087946191 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08510978 seconds)
  done (took 2.11643399 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075940914 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076299721 seconds)
  done (took 1.903678822 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230843825 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171017831 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093888074 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083821144 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079188772 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079339634 seconds)
  done (took 2.004894996 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073731576 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071418351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071969371 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075809627 seconds)
  done (took 2.043363821 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072563728 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065786078 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068218412 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070823621 seconds)
  done (took 2.02796339 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085266667 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083390803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078241572 seconds)
  done (took 1.998892973 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104630213 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092602405 seconds)
  done (took 1.948002838 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081502195 seconds)
  done (took 1.835480891 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094844622 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100868165 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128881088 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111162348 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137485174 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11548939 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081331886 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085973264 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076012598 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083305451 seconds)
  done (took 2.765895963 seconds)
done (took 23.027533811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08165652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3724665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35957282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089422524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670410794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355904068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987154423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090949091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10642195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068048494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085036615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648932468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978489389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330858659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966158876 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326510718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651244014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0682548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067550678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068785064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973112616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067071624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067963366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068018014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650262926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371882494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068657913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329097751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067540445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071863575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356990393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069511104 seconds)
  done (took 16.262884698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073670166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119955842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072506176 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084408796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070066069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070186632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071185922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068539072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116659778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068215638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085994209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067827891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072255808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069083528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088522732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067991392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071164868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069152195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069042261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070012561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087285404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068174709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069677253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069559857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069303505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081594391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070573904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069050293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069233817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072916761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073249288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070172974 seconds)
  done (took 4.18619681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118540315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123792365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074446851 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105493663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11552625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069933073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144835036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092026844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119791299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068880466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085496294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068189036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101861212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069854859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089286235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069450819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071848213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069360517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068431248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06972563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087706929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068447226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069996099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069754195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069532138 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082828562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06976119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068839078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068815819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072413573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074200831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070034061 seconds)
  done (took 4.444292298 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071695861 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072030563 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079543919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080330748 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0667793 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06976845 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070709608 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067328803 seconds)
  done (took 2.35989851 seconds)
done (took 29.020475651 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080080736 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067379087 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070460002 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086773114 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073676473 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078186998 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06511279 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074210643 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071213899 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07163657 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074764756 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066339641 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069489015 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064534428 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071826555 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06574692 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079123655 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069989079 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077990413 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079129979 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068852038 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072372522 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07447862 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078621835 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079414279 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078560948 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075964571 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072395173 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066983695 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06978372 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068817482 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076504435 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080261348 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080667433 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067306241 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066495053 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071173277 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069161137 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08079997 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07555304 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06912831 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075578543 seconds)
  done (took 4.817207892 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085341919 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087161761 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080426239 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078320567 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096011661 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081332729 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08494221 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07689108 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076705034 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083643644 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07257067 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079574073 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077270298 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071617813 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076044526 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073455097 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077560465 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072880181 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075507939 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076963497 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085457913 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071617991 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085955425 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078563301 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.0742549 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079406797 seconds)
  done (took 3.837410564 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074770313 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08486883 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091232087 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141916159 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108823961 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084782599 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080281831 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091621245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095965976 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067892041 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071899096 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091675468 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091765564 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073844564 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109689318 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082721013 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082598566 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069536061 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074190177 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095856119 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087391605 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084159594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092650705 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084194649 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06711986 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069947844 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072175801 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082609948 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070108407 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07851264 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070485556 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071007808 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06822136 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077085827 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069382044 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066877735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090469374 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07811709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079560561 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104538676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076253668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068277955 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09163948 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1264618 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066618903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071042062 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070832946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078544188 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066784735 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094047165 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078787062 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067426374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067866991 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066556792 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066963602 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070073221 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069177273 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068890019 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076905979 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073865277 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087949343 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071867656 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085619087 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067005022 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077277282 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066424626 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068282026 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06580972 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094965187 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068467271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109805732 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068450467 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065641384 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078196528 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076857015 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07284642 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06674627 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085725122 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07769727 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070990661 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075423965 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069721713 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071095397 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097256018 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06759673 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066768138 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066276983 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072729148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070098257 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067924158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079226443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066904107 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070282329 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086441566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067628779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067708 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070713351 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069307875 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066764099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07765075 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071136842 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068786691 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077986876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067982849 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070372334 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080310326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074109004 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066271495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069305536 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070338372 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068647731 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068457798 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070434446 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069141604 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07376562 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074518577 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073317952 seconds)
  done (took 10.815735471 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165136187 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152383002 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069708137 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147299178 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075522808 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079723258 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147401651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095247183 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068403558 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069108602 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067813787 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107066653 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102564876 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113373693 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079106654 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068072962 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093228603 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112519227 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150341178 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147059734 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090122288 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075705479 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07010066 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069390625 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069262279 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077418707 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084458305 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07642287 seconds)
  done (took 4.540997874 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078363916 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102733805 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07208588 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090231744 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087041525 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068618488 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069924104 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069621799 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083920701 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076538864 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068573757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073077352 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071727696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071668486 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068333653 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073780378 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074674833 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066981025 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071487278 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072695294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077723143 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092404383 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072899625 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06737386 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070841247 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067759355 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075769183 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079387343 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068273719 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103525214 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065659503 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072418366 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081816249 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068813066 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067794284 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068190974 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068003539 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067931744 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068229379 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066311175 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067272881 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071693398 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066769703 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075599525 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080559402 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074622825 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070294432 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070149776 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070744507 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065343472 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070880542 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070658824 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070508699 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07494089 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071679458 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070847696 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069259538 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093707573 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073765671 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067710323 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067091302 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066588925 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070259585 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077019762 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083400824 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070526335 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066495386 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067892545 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079957938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081487079 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067556358 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072448359 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0654951 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068314325 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070438231 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070459714 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068528471 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066657321 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067336962 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068444121 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068524633 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068069209 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06756667 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070438615 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066226518 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066853567 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068284198 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072842481 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076299937 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067050504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071420227 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068836358 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066621042 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070516225 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072695859 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070861978 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078324257 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078110774 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068266552 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066377132 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083552654 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07404122 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067587262 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073473882 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072340159 seconds)
  done (took 9.436795102 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091358871 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068068146 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083891453 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09066769 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077711303 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072520925 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07789786 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067516386 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083504452 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072557966 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075579744 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066276435 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078259878 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077807056 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067995412 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078048942 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070013972 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087228097 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081977077 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066375227 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076316146 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079234888 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079506265 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081763867 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081778755 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082549948 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079623866 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077313247 seconds)
  done (took 4.003727644 seconds)
done (took 39.22230127 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.890075685 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.113571827 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.845177868 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.056937892 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.903218547 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.093595983 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.941678794 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.849721964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.057638667 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.883069695 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.175608862 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.336605573 seconds)
done (took 67.052753678 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.879639375 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.994392688 seconds)
    (2/2) benchmarking "String"...
    done (took 2.101325426 seconds)
  done (took 5.866442385 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.075007312 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.502427188 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.104716062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.839455411 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.846131273 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.267072105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.618561983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283551651 seconds)
  done (took 31.239598352 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.027319126 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052979719 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.543967453 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.585172912 seconds)
  done (took 16.029865659 seconds)
done (took 64.957206317 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.857018853 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.839167695 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.841563402 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.874214145 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.851433757 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.838820546 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.843907667 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.839560645 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.864552791 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.941290323 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.839387826 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.856653838 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.844801724 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.849795204 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.3727567 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.888866904 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.860398853 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.841416213 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.85410641 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.892185258 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.845812987 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.843651701 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.269893526 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.99654245 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.459908272 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.939303274 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.254995708 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207177419 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.85180473 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.993735233 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.893398665 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.039169297 seconds)
  done (took 206.061257465 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.841975521 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.92934439 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.981944222 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.874857741 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.276743356 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.018288987 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.940316874 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.310828685 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.848090629 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.866574839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.148418373 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.840625276 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.168903545 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.80902295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.878534753 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.873077635 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.082710371 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.157861955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.880248384 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.990819421 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.850006094 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.00774907 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.94994606 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.118760263 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.863351594 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.845959592 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.86640744 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.870830972 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.028722433 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.052694291 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.84193298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.852142123 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.030093495 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.711803757 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.857216792 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.859466264 seconds)
  done (took 173.104403751 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.033192862 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.850905577 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.847070393 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.898882705 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.965727018 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.84401787 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.52383583 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.851499858 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.144637537 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.847492348 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.843647336 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.844438161 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.843167744 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.857781779 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.953190341 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.8444521 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.845105484 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.861008404 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.849376376 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.870096803 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.847273531 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.846181401 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.845223195 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.844993326 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.845649219 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.847067935 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.844428335 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.435007711 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.097485869 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.844492973 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.847786436 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.838440567 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.857260548 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.074880913 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.843905842 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.938460486 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.895424776 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.957275835 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.844626011 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.064320771 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.925517629 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.844295398 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.843907213 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.90841729 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.858326783 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.84233697 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.844690727 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852032994 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.910165834 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.083781443 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.844337212 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.965923796 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.324548328 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.842691626 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.848041303 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.844942086 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.423637221 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.842160196 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.845764177 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.850012327 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.850750827 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.848679744 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.844500404 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.230906593 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.916499544 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.948588296 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.843598958 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.340881507 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.849433498 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.417776196 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.963768817 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.846971627 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.847174585 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.847142905 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.848957747 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.845836424 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.847346763 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.846956107 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.850294386 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.968744614 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.853974888 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.966053826 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.926160372 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.966379649 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.849920841 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.856393854 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.672383114 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.913912631 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.877106051 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.667690926 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.848712026 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.222901081 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.610543439 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.845657847 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.848126264 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.861596242 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.845913661 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849095557 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.849845265 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.928285511 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851199209 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.969264052 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.560820234 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.26487283 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.850099135 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.847248316 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.853956151 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.931696023 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.968101244 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.847727665 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.916020669 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.851905519 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.85202556 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.943639697 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.846955837 seconds)
  done (took 409.610478999 seconds)
done (took 792.644319905 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.485718127 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.457412954 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.555368061 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.474168035 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.44884749 seconds)
  done (took 14.199923008 seconds)
done (took 15.978372539 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927255247 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.933456788 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.867921847 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.928129456 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.862794333 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.928333281 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.916055471 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.868627491 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900833915 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.873430482 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.899723055 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.872374069 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856847167 seconds)
  done (took 26.417097686 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.081854183 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.081779377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.913613268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.11650036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.888489324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.100207689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.008513128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.997391623 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.996532968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.859925376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.858152824 seconds)
  done (took 23.682983145 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.087916623 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.093947712 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.919024171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.082865614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.889566078 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.089487802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.006143957 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.997961154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.994405099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.861254834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.859143312 seconds)
  done (took 23.66245778 seconds)
done (took 75.547361521 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.853046303 seconds)
  done (took 3.633744637 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.870468036 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.027134454 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.850977875 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.85393672 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.853143859 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.852819783 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.851690132 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.850996056 seconds)
  done (took 16.796657825 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.852571345 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.854655093 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.853461905 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.853504117 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.855070617 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.853461356 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.851514007 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.854559159 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.854950432 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.853271298 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.854203087 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.852397861 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.853166312 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.852739991 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.854844103 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.854987542 seconds)
  done (took 31.442923294 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.855088099 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.855007995 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.853762708 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.854854929 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.853215132 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.8532813 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.854454039 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.854881895 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.856246921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.85441454 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.854706344 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.854669063 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.85399171 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.85406112 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.854993502 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.856045244 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.854128664 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.855663278 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.859301673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.853391245 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.855166732 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.855646985 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.856422961 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.855500892 seconds)
  done (took 46.307764021 seconds)
done (took 99.963990286 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.560839996 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.445827694 seconds)
  done (took 9.791053307 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.861487456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.856452579 seconds)
  done (took 5.56846745 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.85495931 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.855000471 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.854565687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.855098111 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.855880213 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.856318924 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.857696078 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.857364209 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.856681939 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.857855138 seconds)
  done (took 20.346942503 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.857026772 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.855755171 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.857046197 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.855513467 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.856867004 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.855188542 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.857164439 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.855647741 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.856615678 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.856368508 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.856154435 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.856385091 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.856553162 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.856485885 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.854466981 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.856349086 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.856160777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.85658718 seconds)
  done (took 35.198809803 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.856409893 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.854737449 seconds)
  done (took 5.49569517 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.857069421 seconds)
    (2/7) benchmarking "second"...
    done (took 1.856575162 seconds)
    (3/7) benchmarking "month"...
    done (took 1.856213548 seconds)
    (4/7) benchmarking "year"...
    done (took 1.857088949 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.858649909 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.856361531 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.858651172 seconds)
  done (took 14.7856106 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.856515773 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.020573394 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.083233111 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.477779783 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.858714923 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.8599838 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.778596195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.861081795 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.86314178 seconds)
  done (took 20.445438738 seconds)
done (took 113.417210588 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.720865276 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.865658773 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.148674353 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.911747145 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.880723713 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.149913685 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.8758563 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.137495726 seconds)
done (took 43.478354197 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.874696826 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.426507884 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.44818814 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.630422506 seconds)
  done (took 13.293295983 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.861546557 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.208987691 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.878127434 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.672884299 seconds)
  done (took 22.43398215 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.218286924 seconds)
    (2/2) benchmarking "read"...
    done (took 2.201204895 seconds)
  done (took 6.210042232 seconds)
done (took 50.605902394 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85955959 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.859591401 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.859293123 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.858304068 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.859420842 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.858773965 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.860038795 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.861073005 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.858315989 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.860457474 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.856706758 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.859056668 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.861021876 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859229068 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.85865044 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857954868 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8606713 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859716177 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.859377485 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860282637 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862219838 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860390358 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.860971959 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.86021912 seconds)
  done (took 46.419450683 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.859684565 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.860468809 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.859681073 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.860373648 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.863232031 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.861186967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.860641957 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.860954036 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.859927865 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.861363895 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859785798 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.862753957 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.860022157 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.862120722 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860633189 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.86101549 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.862156603 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861860809 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86152977 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.861331167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.861750846 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864577623 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.862590137 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863333145 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.860426557 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.861950427 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.863089685 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.860242073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862325377 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.863159533 seconds)
  done (took 57.633045712 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.865527494 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.861701841 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.861888216 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.861664309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.861445112 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.862579257 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.862071067 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.863817855 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.862641004 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.861518437 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.861789021 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.862512479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.8638341 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.86391885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.861604523 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.861199585 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.864040122 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.867277365 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.860959115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.864644656 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.862424914 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.862364884 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.862336684 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.864438877 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.863659382 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.861983842 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.864671842 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.863850134 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.862820924 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.864286176 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.862056231 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.863594362 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.862587649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.864724632 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.864092005 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.863391907 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.863447048 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.863522519 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.864588385 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.866132244 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.863108549 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.863529024 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.864542575 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.865998249 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.864297745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.865606668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.863562699 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.865003556 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.863459782 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.86465956 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.864799682 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.865861941 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.863897176 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.863081459 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.864693611 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.86521832 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.863268403 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.864657576 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.863791979 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.86495497 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.865004808 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.862844884 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.865798245 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.867403512 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.864978747 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.865818687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.866926641 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.863407233 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.865714227 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.86680776 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.865651781 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.867284713 seconds)
  done (took 135.999143032 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.869643513 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86778087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.863432998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.866698161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865483638 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.863885771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.864469838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866538955 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867182697 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.866758903 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867794263 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.867459347 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867832452 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.866691581 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866557409 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.867155463 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.866504917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.867144435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.865802885 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867234023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864755878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.866935585 seconds)
  done (took 42.860072177 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866241668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865392351 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.865852949 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868195088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865936492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8674639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.869037573 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.865402741 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867264095 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869083744 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86782209 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868319579 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.86929231 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867619208 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867703414 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867084797 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867209584 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867325524 seconds)
  done (took 35.406921597 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.868332295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.867823478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.868368907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.866994648 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.869776092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.867738363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.867751754 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.870473888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.868528259 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.869174534 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.86913017 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869128346 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.869133467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869780344 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868703817 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.867799929 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.869942326 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869548719 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.871096352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.867894262 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.868734372 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.869091339 seconds)
  done (took 42.91256881 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867785151 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.867952819 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.869022343 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870271898 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.868601674 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.869788079 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.868464834 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.870126045 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.870053386 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.871304879 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869982567 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871524276 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.870632945 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.873839252 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.870232191 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870816175 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.870919008 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.871721572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869473201 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.869445082 seconds)
  done (took 39.197001479 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.869188012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867745318 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.868778301 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871005108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872151931 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.869151672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870935253 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.870138928 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.870217322 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.870141353 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870656977 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871459109 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870341876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871649042 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87020664 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868954232 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871061311 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.870305815 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87250747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87148395 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.871551418 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.872658543 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.871732222 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871718749 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871853462 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.871804766 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871542425 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870998114 seconds)
  done (took 54.178757961 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.871262645 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.87127081 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.871283157 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.87089373 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.872436078 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.874428369 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.870938175 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.876521258 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.870837005 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873189959 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.87483027 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.872059482 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.873667491 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.87369899 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.872345326 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.873921985 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875531794 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.872344072 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873605994 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872708068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.874410272 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873906448 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.873576701 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.874103854 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874771264 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.873332607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871882574 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.874280672 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874367315 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.872510142 seconds)
  done (took 57.995155502 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.894618119 seconds)
    (2/2) benchmarking "in"...
    done (took 1.892960851 seconds)
  done (took 5.585719857 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.873900849 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872072242 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.873477783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.873529638 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.873706661 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.873788673 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.873403807 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.874770179 seconds)
  done (took 16.790286592 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.874530299 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.875833878 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.876836485 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.875165652 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.875244581 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.878007339 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.883912559 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.876232304 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.873579979 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.880017302 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.881236947 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.884024761 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.876460283 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87490535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.873830797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876407189 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.874058651 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.875668122 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.877089405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.87502294 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873348381 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.877798671 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878380425 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.877414725 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.876023753 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.885187268 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.880648569 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.873141193 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875947138 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.878281002 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.876780664 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.876174329 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.877811063 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.87615581 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.875057768 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.876772842 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.885184827 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.877669794 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.882085551 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.87689215 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.874060137 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.875175152 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.878753993 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.878056627 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.879433546 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.876371884 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.876997571 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.877460695 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.87796191 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.879914411 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.886731094 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879312466 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.876985012 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.883116867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.878446754 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.884424574 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.881517326 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.880576358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.890358485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.891018241 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.890189998 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.887417171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879700272 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.878587242 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.889949272 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.905131072 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.886103566 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.875869468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.877797057 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.877313229 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.884182143 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.89233048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.887786104 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.880247877 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.877313808 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.879543287 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.88006245 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.87678656 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.884270348 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.88336365 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.878236145 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.877660367 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890206961 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.905918567 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.877937821 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.878832386 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.881259081 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.878154222 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.882642643 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.889692785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.879751628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.879440295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.880226807 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.880275155 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.883590107 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.878545946 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.879884513 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.88087371 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.88008618 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.88123334 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.88166461 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.884600297 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.891807494 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.882632468 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.880659162 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.885488118 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.880923035 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.881662524 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.886487724 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.882314071 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.881434385 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.884351544 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.889204124 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.881127605 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.884443991 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.8963107 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.881802228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.885641694 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.881218365 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.883267661 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.890963192 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.9097967 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.881068132 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.880705749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.885455226 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.894368819 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882378369 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.884861161 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.88114348 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.882581392 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.883436094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.883721815 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.881605692 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.882869646 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.881823677 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.88422442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.883093078 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.880930943 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.881702348 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.882812926 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.884671724 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.883175456 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.881947618 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.883896247 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.882935436 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.883027037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.887824028 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.885999205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.88414574 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.883713029 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.882069175 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.881935901 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.884067315 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.882302425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.883882047 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.884745203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.885070383 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.883713312 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.884066321 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.884605187 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.882783843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.884567693 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.888454546 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.881922371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.885906331 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.88268244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.883894398 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.883202964 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.883807023 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.887125046 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.882374441 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.88308595 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.887158379 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.892236063 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.882732228 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.884418084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.887470645 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.881683001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883114538 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.88218995 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.886686629 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.894093447 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.883408653 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.891064138 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.883430066 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.886288285 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.885063017 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.884807966 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.885700977 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.885242965 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.88874824 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.893326889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.896334071 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.894987746 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.886560235 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.890649973 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.886769872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.889609029 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.889033053 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.884155168 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.885661632 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.886442426 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885880885 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.885824582 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.888251017 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.885635325 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.885323596 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.886026093 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.884997894 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.885401208 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.88653347 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.887055351 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.887293706 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.888999245 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.886968831 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.88683978 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.889149137 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.886783834 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.886001073 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.889276347 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.885373305 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.886318994 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.894012184 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.889265604 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890984828 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.88807209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.886095364 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.886533202 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.88758869 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.890924632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.886455955 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.893611653 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.887933282 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.887684109 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.892471894 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.886774571 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.887344905 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.889795748 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.889235778 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.886128238 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.890357942 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.895821141 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.887738139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.887823193 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.888019735 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.886382338 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.886982801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.893557343 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.88802688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.88943681 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.886747227 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.888819518 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.886937726 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.888964108 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.888534785 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.889877299 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.890558177 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.887303886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.889695373 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.889178399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.887983598 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.887628079 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.886907947 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.893851315 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.897739394 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.895230875 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.891455069 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.891114451 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.890345552 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.895065179 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.892347111 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.888235739 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.888838465 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.899472413 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.89837966 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.895051267 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.893138116 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.887502918 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.894473721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.889500784 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.897467942 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.889705761 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.890564871 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.889856731 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.891966083 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.88936939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.890267191 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.888872306 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.891276514 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.888959049 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.89358792 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.888699322 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.889543129 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.890056702 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.88900082 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.889749186 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.889277515 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.887811468 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.89316826 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.89196348 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.890673762 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.890037342 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896061824 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.892369776 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.89202432 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.889578516 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.89241903 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.890267508 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.892691537 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.892012429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.894583966 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.901932007 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.894322517 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.902985215 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.891104284 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.90023707 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.890751246 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.895152985 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.901665417 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.891576385 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.89182476 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.892311494 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.890525378 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.899369485 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.892889001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.894575381 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.896933333 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.892588552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.892405647 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.893022843 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.894400872 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.892081182 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.893003818 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.901251958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.894713006 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.895611552 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.892898446 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.892132058 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.893676264 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.891858063 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.895025156 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.89612514 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.892509101 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.894637694 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.892874261 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.893412609 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.890623251 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.891246474 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.892735334 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.891918717 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.892789194 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.900651676 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.892671554 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.899687381 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.892547461 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.901489254 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.894623784 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.901000615 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.892815168 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.895904666 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.893699744 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.894749892 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.897109658 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.895632363 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.893916867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.894104858 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.895001806 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.897569578 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.893789256 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.89739456 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.895696612 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.895629837 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.895246954 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.902306014 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.919654435 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.895258827 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.899969335 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.894698416 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.896251079 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.900458204 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.895796263 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.894540812 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.896793585 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.906068231 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.90552635 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.89651489 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.895722375 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.895735184 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.895519005 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.894315429 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.896606859 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.895593763 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.894619698 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.89936921 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.895552612 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.901178293 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.895343554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.897364217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.895002335 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.89575501 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.904460824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.895227212 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.898653439 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.897034273 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.896477645 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.895915175 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.895541731 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.897302128 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.898034077 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.898587927 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.897164044 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.904359549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.906557573 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.899519707 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.896150517 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.894967667 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.898782859 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.897811408 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.898084051 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.89729308 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.89810594 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.900810231 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.897569732 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.899393718 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.898469694 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.898002401 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.896809497 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.89689798 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899059667 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.908081987 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.89975132 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.89545849 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.898775715 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.89776594 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.899493398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.899264571 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.905376331 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.901661423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.911154866 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.909010345 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.902362568 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.897580513 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.899116403 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.906490978 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.89628218 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.896161947 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.897052564 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.900018809 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.900940177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.901142542 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.89965797 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.9042117 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.89947831 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.89809787 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.907305415 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.899318174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.899068638 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.900268634 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.904454701 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.899206395 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.898596888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.900502302 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.899298965 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.908247057 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.90139261 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.901353986 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.902218627 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.898262401 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.90079724 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.903652943 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.898753275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.90004624 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.899830579 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.901817511 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.898801119 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.899780665 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.90128909 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.901926547 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.901257618 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.902342237 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.910781566 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.900022693 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.902178063 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.902116837 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.902431838 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.899942577 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.901370762 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.900666 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.900783462 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.901219081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.901285046 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.902444637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.90211629 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.902033472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.903951549 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.904447333 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.901596384 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.902262987 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.912422871 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909901036 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.900559604 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.904547209 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.900765898 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.904001235 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.901751521 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.902166716 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.900748579 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.906078627 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.901234203 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.901253814 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.902196797 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.905441504 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.918383261 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.90075641 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.903777111 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.903101765 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.905014069 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.902006573 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.901733647 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.902544837 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.906105455 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.904059969 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.911743514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.903152672 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.908367211 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.902733518 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.90466441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.90767661 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.904794572 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.912437974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.906251532 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.901808936 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.903165196 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.907270947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.921930221 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.903813385 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.914212531 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.935606836 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.904794676 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.902515558 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.90433099 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.904632776 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.902263406 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.906450454 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.903478125 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.901615703 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.904204823 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.901784267 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.910627899 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.912858098 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.906264921 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.902644292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.905450892 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.903472333 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.906033931 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.90606102 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.906921709 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.903656675 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.906757888 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.905403903 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.907008875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.908819989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.918200283 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.917301954 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.907404585 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.905709789 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.905898854 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.911838436 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.913723002 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.917345561 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.912690152 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.904394052 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.911299558 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.907275832 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.904848558 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.903859918 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.906400479 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.907203763 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.908037883 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.907935277 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.914783108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.915145665 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.914133397 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.907906437 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.905147242 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.904264317 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.908951587 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.90478915 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.90815139 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.91084373 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.910141452 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.915833607 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.907631691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.91041927 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.909102394 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.916994299 seconds)
  done (took 1130.016695702 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.906591059 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.907019104 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.905912519 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.909593244 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.906649206 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.909613134 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.910020406 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.907508184 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.906119176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.907078048 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.907659109 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909085495 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.909692988 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.907878733 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90841255 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.908838447 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.910079388 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.908174938 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.910686467 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.907489035 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.908306641 seconds)
  done (took 41.909578207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.906442918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.909897642 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.906708044 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.909150315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.907629936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.907084379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.908298857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906822366 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.907266107 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906491502 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.906535091 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905831453 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.907663497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.908043322 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910457062 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.910757063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.911506307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.909856832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.910498163 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.909200166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.909213001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.911812 seconds)
  done (took 43.826314297 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.910788632 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.908172745 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.912888518 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.908375269 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.909107391 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.912111468 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.907744335 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.907236567 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.909470137 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.910865438 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.910077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.913363532 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.917390717 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.91748881 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.915550033 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.909017026 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.053209855 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.907825163 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.911089952 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.907405209 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.912537329 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.915029133 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.90994919 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.909435957 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.910583973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.908861416 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.910401283 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.910284153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.910312774 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.913787078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.913983002 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.908311383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.911305723 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.91173253 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.914892754 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.913746731 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.915005235 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.909868885 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.90808917 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.911985414 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.922369916 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.934588006 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.912617048 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.91687847 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.910308031 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.909995124 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.914380898 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.919718374 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.916206992 seconds)
  done (took 95.683653858 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.911255991 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.912120796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.911452669 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.909634723 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.911052813 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.911473916 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.913251707 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.911712238 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.912421724 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.913585927 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.911814459 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.913413583 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.909725299 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.910427717 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.911621238 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.914795324 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.910776755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.912015448 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.91517669 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.91169336 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.911385886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.913625883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.913470904 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.910858727 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.913707101 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.911255268 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.913104446 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.914991189 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.912229238 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.912184792 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.913612604 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.914897238 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.913486422 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.914401919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.912658319 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.912934521 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.913732404 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.913000803 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.912594932 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.911338736 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.912739634 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.915053901 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.915891032 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.914434498 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.912925885 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.914415716 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.913763048 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.91350068 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.915237166 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.913553319 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.914210517 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.914241345 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.914178836 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.915202606 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.91448217 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.914109353 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.914209749 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.913523929 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.91452368 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.916239579 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.915911626 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912721136 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.918187113 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.913999983 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.912913395 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.9149113 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.914505056 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912794806 seconds)
  done (took 131.941705729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.913473747 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.913803316 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.915228858 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.916096341 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914772362 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.91498768 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.917923483 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.915307327 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.915533984 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.917180981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.915175148 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.914883006 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.915475659 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.916614912 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.914543731 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.916413177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.915135067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914072917 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.916674341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.916461103 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.917925476 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.917774782 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.915190977 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.915038336 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.917968775 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.918714925 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.916343753 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.917016991 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918306745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.916591198 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.91691007 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.914508554 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.917074707 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.917437747 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.914304668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.917366508 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.916671258 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.916793251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.916487385 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.916089433 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.917015246 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.917049531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.915967216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.918602381 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.916604934 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.918429802 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.917623595 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.917310859 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.916946343 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.916386074 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.918140284 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.916706331 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.917402096 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920270414 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.918698083 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.918552121 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.918136088 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.917828425 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.919259991 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.919730436 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.917616136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.917184734 seconds)
  done (took 120.679357016 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.916507104 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.919222552 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.917589308 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.918118671 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.916677075 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.917226031 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.916927746 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.916550378 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.917297176 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.917477748 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920649512 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.918102801 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.919854015 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.91762576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.918165195 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91934034 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.918899386 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.919694552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.918991104 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.917506279 seconds)
  done (took 40.205432859 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.919901478 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.919173063 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.921106619 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.919023602 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.91966448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.919350343 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.919089713 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921976542 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918802005 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.918910466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.918637796 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.919920255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919218455 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.920783338 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.922740312 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.920598042 seconds)
  done (took 32.565264617 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.920087775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.921736952 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.919429665 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.919282439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.918750393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.920325951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.920407627 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.920133628 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.920201173 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.919767155 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.919434945 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.920396354 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.91951912 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.92090039 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.920795461 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.918411529 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.920593368 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.919042372 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.921050424 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.92161044 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.921676038 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.922641841 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.919187678 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.92206892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.92099227 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.923817405 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.921626766 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.920448188 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.919653276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.920312129 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.920444698 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.921176273 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.919793032 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.920266166 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.923160127 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.921645626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.922701846 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.920367502 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.921362879 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.92217888 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.922335111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.922652363 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.922182842 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.924403969 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.922239603 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.921555382 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.922492758 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.922533163 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.921339712 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.92345087 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.922286327 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.921949713 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.921281033 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.921937708 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.922229499 seconds)
  done (took 107.510364197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.920549219 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.922401048 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.920329549 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.92213802 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.921596226 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.920819678 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.923055315 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.921549156 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.921817127 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.929549315 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.930244415 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.929880078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.93221125 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.930332481 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.933116179 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.927769649 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.92596912 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.928578069 seconds)
  done (took 36.510994924 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.929047054 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.929041532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.928276824 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.927848658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.925434946 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.931480309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.930767858 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.929252372 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.928308395 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.928515753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929719094 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.934296685 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.929715645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.931139408 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.930880644 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930198303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.935808777 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.928555719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.931091897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931137233 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.93018926 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931379058 seconds)
  done (took 44.317441522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.930413044 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.93157962 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.944586025 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.954377453 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.948813307 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.966567586 seconds)
  done (took 13.532071903 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920800298 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921740324 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.925016484 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920837812 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925528318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922887283 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923752784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930561768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928302453 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928535417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928668298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.929261267 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928831686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92347777 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92527388 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924506354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930100564 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923832097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922154123 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924076696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924834353 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920480405 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921713164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919314839 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921902961 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921891101 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.922790156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922793421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919944647 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919665949 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919559376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918923958 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921147901 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920259547 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9171584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918973263 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919273 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919116477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921051966 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917225292 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.917619068 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918867625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918489432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919386266 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916903253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917965304 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918518548 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916214751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918875393 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917225692 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918639557 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915587098 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914673377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915210309 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916492044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916611759 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915866222 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916767479 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916292614 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916808191 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915743076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917762465 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917285932 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916509896 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918812609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91676897 seconds)
  done (took 128.612028619 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91846353 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.917066007 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91755026 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916829018 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917925385 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916057357 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916429614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917940752 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916896366 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916451196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917205821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920664293 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919555236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916992647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917300539 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91757014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917872578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919194459 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917771298 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918250205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918811594 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917188339 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917347891 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91733428 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918769069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918637905 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917997274 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918878673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922443041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91635582 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91792226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918780486 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920089191 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.918206994 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921266161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918241332 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917982977 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917278557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91688711 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919557788 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918013435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919943964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920320356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919034866 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921558947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918566228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919530411 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92121515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919122566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919940106 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920626146 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917503998 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921122266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921399467 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919597724 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919707494 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917970742 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917073498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917578805 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918861628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915033571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.9135604 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912545844 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912332147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912950235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913837153 seconds)
  done (took 128.443200175 seconds)
done (took 2632.52584214 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.917186384 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.091190907 seconds)
  done (took 15.848889574 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.069233148 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.021510522 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.907737018 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.941937982 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.906805416 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.908402257 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.916179834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.907313917 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.906458854 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.906694736 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.905380584 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.089840124 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.960933477 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.903992568 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.905578626 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.998191019 seconds)
  done (took 53.004936752 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.907214952 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.909996904 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.916430049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.910397202 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.907254867 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.924131366 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.939025743 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.909928072 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.968332303 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.919727714 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.025292487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.918194702 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.905509418 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.963914421 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.919036376 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.920170559 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.997032515 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.982435168 seconds)
  done (took 36.678041702 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.982333028 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.9101895 seconds)
  done (took 10.735609336 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.909584477 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.919564017 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.939695271 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.910035302 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.902660987 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.918005933 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.90471984 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.902666557 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.905346216 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.939451577 seconds)
  done (took 70.994520311 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.905280651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.90364192 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.901695368 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.899965299 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.899326942 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.902158635 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.899401803 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.898998167 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.565534328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.933658478 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.907141053 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.905780833 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.899714717 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.900298618 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.898448266 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.92173267 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.033848767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.898085963 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.89935769 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.905062328 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.900708152 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.952638087 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.912958901 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.901231609 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.929201913 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.567354523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.908650781 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.903913094 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.004671812 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.897591921 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.899135273 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.090279779 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.901528044 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.365092181 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.156035944 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.905018205 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.911663084 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.906671952 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.897308159 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.019264696 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.898278066 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.904605711 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.842780241 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.138998387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.998736892 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.942163018 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.209503039 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.916248137 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.898375306 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.927523279 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.90170681 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.900599939 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.911675191 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.412696802 seconds)
  done (took 134.444887254 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.896875515 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.242177818 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062780127 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.897041686 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.177780064 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103066362 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.89862916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943163824 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.90214356 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.124042033 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.149604857 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.999869956 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.897817856 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.898556788 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.897948296 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.894748523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049546276 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.966622497 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.897465934 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.893910725 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92190537 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134858663 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.016062075 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.897193052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.921730862 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103942712 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.01620402 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.997152339 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.68417044 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.894891639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.957149446 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.896953455 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.896904857 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.894066201 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.049742164 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.988618031 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980890682 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.898613917 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.895764607 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.895032144 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.640779401 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094301306 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.990546715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.026580935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.148003885 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.100638289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.671169606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.895809972 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.64219441 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058675227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.123311067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.126060764 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.017955614 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.89943506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.152947832 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.896236114 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.896033182 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146473123 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126154467 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.991972964 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.899548447 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.895311224 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8977652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.186048741 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.901113897 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.989081159 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.897314644 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.898669385 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.9923327 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994369005 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.129754518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110282723 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.928318679 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.223173198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.403885966 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.141938464 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.962245398 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147775469 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.900663886 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.897288205 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974625739 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.733416978 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149985074 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.17752045 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.141194046 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931902004 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 3.032915766 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.896613852 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.122141199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.116802188 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.157131228 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.141924693 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.14112599 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.226185476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.89715324 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.897313014 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.189173679 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.023157788 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.900433897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.245032406 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125394686 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.426023781 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925615312 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.202288463 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029004394 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.900710219 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.533058108 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.897927509 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.126989766 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.937016426 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.900605421 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.899358964 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.116481275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.885624507 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.899983278 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.784414796 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.958884874 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.902215032 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129284301 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.903057639 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169491115 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903081817 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133272457 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.296917857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931395383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.070891321 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.144083001 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.902166918 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136592565 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140861204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.014052825 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170023815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.804101559 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.902044665 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.183322114 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.902393107 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.898984606 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.068503773 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.901926182 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041045792 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.904130978 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193177607 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921256103 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138688263 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.903292815 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.152143872 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.934396143 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950814244 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.902962402 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031174972 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.902967023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.815842994 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.056366119 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902495917 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.90135238 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.447459876 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.90151381 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049421425 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.126480057 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92256329 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972253509 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.56910056 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.900891613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984684353 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.923790764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.293743181 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.901419141 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.151790803 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.903294025 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.901409661 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.900638338 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.186259565 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.135894647 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.904522842 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.902133344 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.804106156 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.903562082 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.901860576 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.08217236 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.275037638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.901759037 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102427553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.908090938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028335318 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.906402891 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.97479811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.234026244 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.902181294 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.902832901 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.900672152 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.903645509 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.905183267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109183473 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.928527822 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.392868904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.039367247 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.172845009 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.212076177 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.141204151 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.945427764 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.906714091 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16214766 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.904838324 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.963333069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.904487455 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.923778367 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127401489 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907062247 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.110960614 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172343387 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.903800841 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950647131 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.906701346 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.904439007 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.905317915 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.052207276 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988093623 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.909815697 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.906951285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022203897 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029014683 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.115180747 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.909584391 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.939945743 seconds)
  done (took 910.508569033 seconds)
done (took 1234.058003842 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.907888486 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.910031566 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.910544618 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.912988867 seconds)
  done (took 29.480939701 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.91181517 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.909337518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.909832618 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.908503832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.910337716 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.910029306 seconds)
  done (took 13.29762918 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.952602096 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.911881494 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.909403907 seconds)
  done (took 21.614175785 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.978625298 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.292718446 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.039760307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.322920205 seconds)
  done (took 10.473990851 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.911067801 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.911344956 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.909861921 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.912365805 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.912832949 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.91310852 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.911943982 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.912004875 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.914176664 seconds)
  done (took 19.049987765 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.883826462 seconds)
done (took 99.639705213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.048593302 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.250227705 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.914594153 seconds)
    (4/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.123205007 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.97685291 seconds)
    (6/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.358743197 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.008627076 seconds)
    (8/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.415474895 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.912686997 seconds)
    (10/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.012517126 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.438891223 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.91702877 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.013647237 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.929658622 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.909951144 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.176098906 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578661998 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.949106675 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.78280963 seconds)
    (20/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.915917275 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.588780497 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.91375582 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.146195358 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.933899732 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.911636379 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.137569577 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.223068944 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.013330577 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.945792308 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.989790232 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.910870959 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.221511718 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.914795961 seconds)
    (34/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.943806675 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.262114059 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.015580596 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.909583629 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.035049032 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.534934633 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.096435322 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.078440985 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.918249805 seconds)
    (43/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.714375464 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.263333491 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.014641883 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275670054 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.79813487 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.120131552 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.909850188 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.510255435 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.939821195 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.064791579 seconds)
    (53/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.019348013 seconds)
    (54/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.046327651 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.129788338 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.9179759 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.300331786 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.941901929 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.143964989 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.253411134 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.941030311 seconds)
    (62/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.915788464 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.395458305 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.567648511 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.939537923 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.914413603 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.187117794 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.165982974 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.302286183 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.072870136 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.934601913 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.072173336 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.571642066 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.787130549 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.920072638 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.226206656 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.919376573 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.001884525 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.251845191 seconds)
    (80/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.998996755 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.293755919 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.981667628 seconds)
    (83/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.272810286 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.287461218 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.919119289 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.72780871 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.938820126 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.994129591 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.415136281 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.915955806 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 4.013490697 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.862156954 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.244862586 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.046554635 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.915632833 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.163117624 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.915540151 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.017447038 seconds)
    (99/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.106651 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.041866821 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.167540742 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063215746 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.932514374 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.70486108 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.177766932 seconds)
    (106/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201075747 seconds)
    (107/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.089760952 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.931460349 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.647359146 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.919609762 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.933559655 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.376189501 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.07089647 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.046564766 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.919680204 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.995241523 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155671309 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.937942559 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.917267695 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.249931097 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.923611587 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.594892656 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.888849513 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.230225862 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.703696874 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.211331948 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.939397133 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.921186502 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.999558792 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.022662789 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.913496646 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.107172882 seconds)
    (133/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029675485 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.914995406 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.21833041 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.946341002 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.916383916 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 4.78719587 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143995219 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917665375 seconds)
    (141/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.306437785 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.920255016 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.413600061 seconds)
    (144/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.998754602 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.165596383 seconds)
    (146/309) benchmarking ("sort", Float32, false)...
    done (took 5.643610819 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.282001202 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.171704152 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.692270759 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.810657681 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.051838838 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.917615401 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.127506623 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.180734966 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.940788814 seconds)
    (156/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.916612205 seconds)
    (157/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.079269424 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.922930117 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.920051585 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.127316578 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.102932691 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.017374643 seconds)
    (163/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.170922515 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.037941923 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.94803838 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.232550034 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.938486778 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.400424323 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.049110011 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.175498995 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.942300061 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.978113983 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.940308374 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.026496224 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.918684012 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.05194921 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.916712059 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.519860444 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.937757446 seconds)
    (180/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.005990644 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.494093369 seconds)
    (182/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.210199781 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.00045996 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.048832039 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.288423532 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.37132155 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.933200071 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.015209293 seconds)
    (189/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.019529059 seconds)
    (190/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.017209007 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.918633408 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.68989739 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.009281158 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.28855751 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.014043848 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.916213881 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.043371562 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.304695979 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.938240541 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.309442851 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.920435668 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.025642681 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.278993588 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.320979292 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.990006352 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.011945917 seconds)
    (207/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.920234814 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.934195721 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.268390046 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.92348625 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.079305262 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.54246505 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163934994 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.178183109 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.103732246 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.002070882 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.112805601 seconds)
    (218/309) benchmarking ("sort", BigInt, false)...
    done (took 6.924528457 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.544821555 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.935888103 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.116244396 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.197936237 seconds)
    (223/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.385799784 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.589528777 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.227709163 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.051206103 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.162547397 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.924256709 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.105375001 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.008570502 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.022051691 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.924735435 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.890420618 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.174295212 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.946972103 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.231752928 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.056912595 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.927893817 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.552801141 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.93355949 seconds)
    (241/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.908817316 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.245823042 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.060038061 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.236139701 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.927601014 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.924261928 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.715425831 seconds)
    (248/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.237515058 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 5.697697267 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.071052988 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.928544001 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.992194157 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.023870903 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.001818272 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.162075337 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.05957649 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.072070161 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.269061451 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.368231304 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.954476267 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.984540194 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.924223737 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.088006746 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.111784651 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.928279767 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.192440874 seconds)
    (267/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.032099938 seconds)
    (268/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.021556384 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.172134591 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.932257446 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.1231949 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.412570077 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.094441866 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.945882998 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.254387613 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.115285292 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.172977693 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.230141583 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.266714951 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.017826728 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.802835254 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.089416019 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.196065131 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.262607362 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.027858819 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.826302644 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.937389646 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.784941221 seconds)
    (289/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.836352544 seconds)
    (290/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.495067504 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261061974 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.92795654 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.07050905 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.690686937 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.240480296 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.190600193 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.187929127 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.067235772 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.747923934 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.232177268 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.087495281 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.050753699 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.008179873 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.00769953 seconds)
    (305/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.03369299 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178358943 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.239252394 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.139122569 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.93316169 seconds)
  done (took 1022.229522878 seconds)
done (took 1024.129991092 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.953163812 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.946257835 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.928320971 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.95093671 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.045422944 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.973714973 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.942976138 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.933690461 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.979099256 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.98066084 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.928938439 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.970717476 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.931154792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.930771065 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.93030722 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946340344 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226701626 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.953962605 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.948450208 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.943650724 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.948889472 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.929490366 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.981200236 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.970954919 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.934948814 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.936541985 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.935478277 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.950079766 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.044402076 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.935788311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.937786368 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.942635147 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.225171288 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.952024362 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.928522575 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.951566165 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.944884958 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.943383971 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.935515705 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.965452509 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.316958789 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.961947245 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.93423454 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.931332663 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.932455826 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.939979787 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.932323157 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.940542456 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.946953476 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94808508 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.311376351 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.98024341 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.936947354 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.933001837 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.94570974 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.934820313 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.937990006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.948605546 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.953082615 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.949343553 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.215399356 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96336082 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.936971392 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.951075958 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.941864993 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.346293073 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.962388396 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.94149686 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.315085564 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.971856807 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.345289289 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.975176103 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.936414452 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.948211855 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.967718044 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.22727587 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.953558523 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.933130313 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.943768861 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.933192014 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.94700476 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947874193 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.938459997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.934189903 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.949870421 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.978776851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.948122436 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.934726587 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.945789695 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.95455009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.944728582 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.948767758 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.939273858 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.931382219 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.946850119 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.939404618 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.938481687 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.939664668 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.939733869 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.948381916 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.314823627 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.981932279 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.932378883 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.931442878 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.935249005 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.95171209 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.314181953 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.967944594 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.959593388 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.985666766 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.938061942 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.216232861 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.962842363 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.952967677 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.946859857 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.939321879 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.934280237 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.218781125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335386132 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.981461201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.93713399 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.934632744 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.952166631 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.937751562 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.934507449 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.231659061 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.960480729 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.95175373 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.059469824 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.949197874 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.970817142 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.934388591 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.939399427 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.982737516 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.952971604 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.970983167 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.939626532 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.953371368 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.955372959 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.934011169 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.951489526 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.949090236 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.937004387 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.946337113 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.935158194 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.982965408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.951307033 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.952171292 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.959414335 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.061887973 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.935713544 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.219579548 seconds)
done (took 303.684635814 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.012609068 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.936608372 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.027924043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.93528005 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.024299964 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.006860529 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.936387758 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.935755645 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.936410173 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.420539041 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.935927842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.943716254 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.934958722 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.936296986 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.004724219 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.935782584 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.935786071 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.368113937 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.938345077 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.015054347 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.935131973 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.936902366 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.936804468 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420229473 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.935406636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.936691071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.016171113 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.936677601 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.37021955 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.937694134 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.936270201 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.370197856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.015390647 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.964598672 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.944529403 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.945865914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.025603909 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.945359497 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.00502352 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.004153763 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.030121446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.96913797 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.935512084 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.938298163 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.940312942 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.937988737 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.938554206 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.969297555 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.940676609 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.943635846 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.369749612 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.943103922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.944833769 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.938058102 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.940381605 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.966662288 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.938396443 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.937883888 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.017596213 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.939729234 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.006047043 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.423372029 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.422780767 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.938265525 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.937102564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.939668057 seconds)
  done (took 189.652736466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.003435897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.016648739 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.003100601 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.942954562 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.988043914 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.005147101 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.942516169 seconds)
  done (took 15.767882026 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.946142899 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.9402005 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.987488058 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.988257455 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.939842712 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.095020277 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939161791 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.950497834 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.944939741 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.967032369 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.939191416 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939403484 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.947000398 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.93930284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.988840838 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.950387642 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.056363667 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.942154143 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.941333436 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.087703242 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.944687373 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.947739732 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.965072151 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.952148212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.940935884 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.945562203 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.511349609 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940989732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.940689886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.940902321 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.940093242 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.984267819 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.941567942 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.940429699 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.942325425 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.054907989 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.941359539 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.941580718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.941700893 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.941207887 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.942154631 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.94127397 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.941286715 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.941220756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.94120336 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.964170405 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.9403335 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.942175284 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.941751746 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.940612178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.967206707 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.941763411 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.942533338 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.948867385 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.983678246 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.949849568 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.942898336 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.941960119 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.942317591 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.941664053 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.089625194 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.990811545 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.943033333 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.990895563 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.941983492 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.941926909 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.942101988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.942341929 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.030301192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.942396152 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.992023046 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.943147084 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.100619621 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.965351465 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.944530913 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.948443215 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.94581539 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.945131508 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.942855459 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.951631091 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.943469715 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.944725515 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.949690138 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.947659957 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942804566 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.054583829 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.082086133 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.944775013 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.945394903 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.950829945 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.945362893 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.987826375 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.942832523 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.943657668 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.000397975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.059607982 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.970654789 seconds)
  done (took 212.831252244 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.952126064 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.950614656 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.945839934 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.959200226 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.945343645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.944506438 seconds)
  done (took 13.569566132 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.948461921 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.949762787 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.944826033 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.944907115 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.945024615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.944951294 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.945471883 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.946139557 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.947474136 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.945074779 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.944353209 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.945803369 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.945089219 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.945993438 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.944322602 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.944284556 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.947191192 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.944912003 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.945345237 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.944508166 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.195765658 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.94556037 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.945707731 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.948726766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.948930403 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.945976066 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.962084516 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.947381617 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.947635348 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.953437834 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.951000542 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.949909783 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.947988591 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.950795087 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.947939917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.949896388 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.950382231 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.947726381 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.946293122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.946535422 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.947686306 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.946569745 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.947205709 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.946271195 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.94794404 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.952095797 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.951294049 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.960055408 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.948443448 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.947644158 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.948034515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.947712537 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.946425532 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.947791905 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.951317715 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95181232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.951506804 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.949532867 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.948490844 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.951005208 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.950020405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.948657225 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.948462896 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.950915443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.955326359 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.947938465 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.951177806 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.950052765 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.950417831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.948126022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.94754119 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.949122141 seconds)
  done (took 143.403644027 seconds)
done (took 577.104297455 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.201452375 seconds)
  done (took 9.077413321 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.972557423 seconds)
  done (took 8.907973056 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.173061889 seconds)
  done (took 10.048830592 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.949174793 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.974172129 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.954904302 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.953769511 seconds)
  done (took 29.718420267 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.139804394 seconds)
  done (took 9.010372716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.967586988 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.954454145 seconds)
  done (took 16.182800169 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.033092745 seconds)
  done (took 8.919231833 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.399653014 seconds)
  done (took 9.287100432 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.965220808 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.975990932 seconds)
  done (took 15.844395472 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.962431283 seconds)
  done (took 8.844840309 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.387028639 seconds)
  done (took 10.29505078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.978010087 seconds)
  done (took 8.931308901 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.013507247 seconds)
  done (took 8.896140602 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.995005032 seconds)
  done (took 8.877770611 seconds)
done (took 164.717183001 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.958467781 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.958811285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.959096182 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.95808499 seconds)
  done (took 29.716791303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.990027017 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.990676666 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.990381985 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.000421264 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.992316954 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.98880046 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.984118187 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.982403366 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.000412544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.992006368 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.990929094 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.993814527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.988893918 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.983337824 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.992257176 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.991420553 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.001803781 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.990344752 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.983094385 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.99296564 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.957908526 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.001538731 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.991868905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.958064267 seconds)
  done (took 49.614190084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.148664935 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.029440835 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.111377516 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.009186472 seconds)
  done (took 10.182168549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.00704927 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.009855402 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.022011372 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.060206642 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.084130253 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.020236032 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.9798172 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.979180542 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.965670353 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.009902376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.086649969 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.005474829 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.097268302 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.957056804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.144895952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.957603254 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.958277463 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.010186282 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.060783477 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.074427519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.959114035 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.010041583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.012159097 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.006468577 seconds)
  done (took 50.363025237 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.95953439 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.966472474 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.966027855 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.959852811 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.95937754 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.958632819 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.966694273 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.961292593 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.98231147 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.961357787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.960306935 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.962370781 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.966063316 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.960270162 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.959517201 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.972739005 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.976428964 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.960089333 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.963839975 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.967890701 seconds)
  done (took 41.176583556 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.957596603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.804286682 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.303335739 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.210727907 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.959903606 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.961059112 seconds)
  done (took 32.082617608 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.973236266 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.970453734 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.961672892 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.017092488 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.104555049 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.970511323 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.960681604 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.972435607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.007493674 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.030092471 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.986703962 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.991373722 seconds)
  done (took 25.834614285 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.959786424 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.962325694 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.96137473 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.975340376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.972423038 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.969895373 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.96801556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.959085447 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.973985466 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.982758059 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.971816021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.975814036 seconds)
  done (took 45.525290331 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038971843 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.834520233 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423192688 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425075182 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484789855 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164059851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.961280495 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045765354 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.961934674 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231802444 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.299277675 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156838539 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204610152 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.642460157 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.100795193 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.439259376 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24790496 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171395959 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988354989 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617382335 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060421709 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.517303293 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.562840348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064388417 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165671622 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.08497683 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.224589025 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911385303 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0090136 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964408261 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967016961 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96399813 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234540891 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082242309 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03199609 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968232735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.37511329 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.667681083 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.967263515 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.578242143 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.424248601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.073779008 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963886107 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961766801 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888762195 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.527184169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047272672 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.965353364 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.663015439 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.962525212 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967510964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035925613 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.96352384 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.769573936 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643452367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.230059436 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.963208558 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964184785 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.522730048 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95191413 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.624620925 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.889651206 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.049154444 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579486927 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40455903 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.113712383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.965499614 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965654807 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890301024 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.563923253 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070743376 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101650257 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.981494803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606020331 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25065319 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.354484149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010170181 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231642381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.685169778 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.003789588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181893147 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912652542 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891052042 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.794761103 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.891010253 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178372433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996480061 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.578082281 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998348906 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046705425 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97118701 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98084039 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967122637 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179186717 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.858933109 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965910049 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.244002016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212658919 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982894688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051106306 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892589029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.965794973 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212581071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.168542303 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.14376254 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.54875062 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051205726 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820999415 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.090281278 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.803728533 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080803317 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.22926584 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021546836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949845082 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077544882 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.915332026 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208952079 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852823036 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.176749557 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.301495472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197176937 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.297691803 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210640141 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029525631 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967115328 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.965700392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631299594 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569600201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.184389684 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.979939538 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385257948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083183012 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.968621032 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89987979 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.628710665 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.305912265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.039446263 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181898798 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.838755739 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353744675 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89472809 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103530064 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.970042498 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.181848733 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.607759839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.045261933 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215920445 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138536877 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.255120722 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087362896 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98257579 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059919635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985357699 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.332330541 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323678747 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.970573186 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.970763796 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645813536 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.021013607 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973670312 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.97274573 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.492778737 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236440602 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989018373 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.975480307 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.841990644 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.980986031 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031001197 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972666032 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973015465 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.496372918 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.479483143 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.975447969 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.627578183 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186623143 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973335604 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.579527898 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138890124 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982486218 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232214815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032232514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.895914237 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.669844584 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.671646622 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970524043 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.898116751 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.970967733 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974024875 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976562006 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.159253627 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240365683 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.019652513 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.626733503 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.070239198 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974711936 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.973933147 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970780522 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.464984535 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971300523 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.545407092 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.087888881 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099857007 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.981157743 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.897322697 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.973200409 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973373627 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.971923384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.923701075 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019339992 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.621411097 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165562623 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220735905 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.378423412 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980675106 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.639363427 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.084465407 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.031474482 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.255884376 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524941307 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.078689585 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044259962 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.978165847 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.636621023 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.700779368 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.534509618 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261749533 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277134267 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310532199 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.389994631 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.297959512 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058163951 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198582577 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494069234 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029823422 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062642283 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908672364 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988896853 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.614010128 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338631749 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985727838 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190795743 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254125594 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.306067892 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097880798 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176482557 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004201941 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.81620624 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003954942 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.50994716 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990128551 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.336080889 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168608934 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059959528 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.252852563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.049019275 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.974499416 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303426919 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012807138 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.676602692 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326336441 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409820097 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.421936151 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188771845 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.980471528 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.413238628 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31648661 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.196487318 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.095559626 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902285148 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98050925 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981025589 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.988453036 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.951808683 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.817403516 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.218034851 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984985573 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203714126 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.146281456 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339523115 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.890067923 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.981150137 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978679228 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226778475 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.685456182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139387742 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.337325837 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.559355731 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987181083 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.904110939 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906170008 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.678516164 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.98568384 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943128459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184536956 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.080274217 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.659782693 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40922534 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291370797 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.222380304 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.991200411 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.242621883 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248151713 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46910307 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000654188 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.077937536 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.265276548 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.715827016 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.193905464 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207343428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511054299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196105385 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4194279 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.950444248 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.980063815 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185896544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194800992 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.326844827 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145949923 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.691733384 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.991620872 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339314211 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037918429 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.323246733 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.159947688 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.076559497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987698039 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058137984 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985073784 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.989712189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987554573 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991881213 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.325469164 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.093491147 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.993376706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057740101 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980869574 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.549296282 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.989615219 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245987251 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325030675 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305061849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040826089 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.9849012 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989866496 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907611539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110849442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42650822 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253225273 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.102691616 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.11850425 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00275754 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.262900296 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286360477 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293319367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254981731 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.867975504 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.657053971 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.103713134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.199207135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988462597 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.1857047 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195688223 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281688164 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540536229 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.167837292 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.17642079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254094463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343059967 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.983985397 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568039808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.992595236 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385472755 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.01665935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.342653482 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236248533 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988252399 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104543106 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986765905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.182136157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.434982538 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618955877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325118157 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.838446814 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988369739 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251867802 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305217149 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286253596 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06200456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990494656 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.723345501 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11715619 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.863144658 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200596714 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.985111192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189152249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.69494295 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988306475 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253028009 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287813145 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.986263548 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.912583724 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988452797 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.988608137 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199554939 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197483392 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230669599 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988797634 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.993195257 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.793077385 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256160834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043985174 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91214455 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.988145193 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031355988 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212793598 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00460254 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.502143041 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.687389425 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26354517 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.89140481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003741258 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430273097 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361529658 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312226156 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.516357802 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205651009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.539083051 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880660898 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.365960667 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.990597003 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425283018 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367824476 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.989905697 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.535390779 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101120138 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.252602222 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311639474 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.999855714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672774677 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.014636418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201353942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347068682 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918384256 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991058101 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.035760246 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.988303315 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975829174 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998131568 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.914870309 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503108844 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.829644885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548321502 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.990416837 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.998339828 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.32236144 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.551251309 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099464406 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006808742 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993269847 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.690827218 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.2764898 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232596471 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.542426007 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.085537374 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.995380696 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989617903 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910292455 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.172467599 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.179132619 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269587842 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.385273805 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.104635277 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99237728 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.19874367 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194317882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.361589124 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12411295 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.173677696 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107702668 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.93164752 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.697707019 seconds)
  done (took 1711.973632823 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004929155 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.019400601 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.04697266 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.027487184 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.041912187 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.141049671 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.032348522 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.091502521 seconds)
  done (took 58.323378022 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.996722094 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.115883514 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.999538059 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.999536614 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.043657543 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.99962454 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.156102609 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.011631085 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.000863596 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.001233293 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.997833443 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.993843844 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.301631286 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.019159308 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.996246481 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.99772515 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.998807085 seconds)
  done (took 76.597774079 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.000632176 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.160049514 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.041471438 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.001813271 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.701842539 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.003070491 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.907175096 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.00359641 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.000208662 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.0448599 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.295126356 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.043499641 seconds)
  done (took 91.12497275 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.008644035 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.999058673 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.99895555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.000558488 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.00087991 seconds)
  done (took 11.937228963 seconds)
done (took 2236.34753562 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.358627749 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055418316 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.102911434 seconds)
  done (took 6.07876262 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.144221358 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.191754528 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.30402305 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.325990771 seconds)
  done (took 10.898423318 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.307941476 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.363387669 seconds)
  done (took 6.593258368 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.318958652 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.032147939 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.375049486 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.001849632 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.002989869 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.001957591 seconds)
  done (took 22.935759434 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.000629408 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.999855012 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.002072434 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.004770176 seconds)
  done (took 9.928168456 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.999425132 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.719738252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.000354326 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.009245894 seconds)
  done (took 21.650441514 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14575461 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.117507234 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.142864311 seconds)
  done (took 8.328621603 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.141723989 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.849078049 seconds)
  done (took 6.914264023 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.145282647 seconds)
  done (took 4.066831499 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.029427539 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.267856711 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.481530636 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.999604642 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.621675183 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.254250804 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.337237709 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.227584038 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.448315254 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.485963903 seconds)
  done (took 27.07837943 seconds)
done (took 140.480416905 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.563164577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.028016457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.20376778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.360339471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.243248226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.200958483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.216908331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.358775848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.049079397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.042732298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.364058115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.265237838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.16818964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.021577238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.174649696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.02511407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.259291288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.370050899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.047818636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.284536456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.232500485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.005657464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.204853596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.028313623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.284096456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.157057882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.553530934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.024868044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.200986623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.578883477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.160180284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.430081068 seconds)
  done (took 173.033320492 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.005203653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.003455176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.00305495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.00597845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.529279776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.007705255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.004304282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.003364255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.436510372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.433619616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003473153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.52534314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.004737284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.004005409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.004739396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.005672025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.624434712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.00318885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.006249757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.008341577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.003649883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.357577207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.005783691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.369507704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.631582319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.005499298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.009270176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.005571315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.006746587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.006037871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.006439205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.008742693 seconds)
  done (took 213.97040558 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.006619903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.009300405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.008979583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.006098871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.006201924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.008471707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.010159408 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.003786701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.772929996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.765971494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.007132512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.011357263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.006914097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.006257938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.009465551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.006435701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.007964252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.007797925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.010837728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.010331626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.009420555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.603583033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.025018264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.597878751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.007899526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.008240774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.008328126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.008395815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.007480148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.008298566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005198331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.007846909 seconds)
  done (took 224.91184939 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.250743787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.006579168 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.007353906 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.996686243 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.012580513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.008547189 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.98756398 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.258602193 seconds)
  done (took 20.460115227 seconds)
done (took 634.310917138 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.38315665 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.228911866 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.186243859 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.036403575 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.294860373 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.075890279 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.030601141 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.098032171 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.867209549 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.106705896 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.677964362 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.053358496 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.774405111 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.058835355 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.155535871 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.089333071 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.576595137 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.682258276 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.17225367 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.08389025 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.213974627 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.974403475 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.111886552 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.906178682 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680453019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.032435158 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.068301851 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.592179969 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.043250281 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.186479935 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.705702358 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322763488 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.044640489 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.027120588 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.085142007 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.063408153 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.256640566 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.044256522 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.155133396 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.764901009 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.114757656 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.77620317 seconds)
  done (took 108.736004478 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.021613308 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.015745967 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.014749576 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.01735567 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.026169356 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.015480025 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.014392892 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.018565503 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.014277749 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.01551843 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.014428393 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.023248488 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.018053104 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.022672839 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.013835387 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.018165626 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.01626436 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.02619079 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.016249023 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.017434599 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.017067841 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.016629997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.01297386 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.017549671 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.019160487 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.017480739 seconds)
  done (took 54.408712924 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.012546917 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.184067641 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.262656914 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031060022 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.013492476 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.014342843 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.032309995 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.016557921 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.01485185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.014674901 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.115091281 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.019417269 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.031991027 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.255998374 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.030542247 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.012980432 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.012233397 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.015075096 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.192838615 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.029427452 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.032634046 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.018941173 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.033045961 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.025875575 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.016214004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.014182029 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.01473576 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.45616015 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.020674375 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.114910839 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.072712246 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.03507252 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.397828967 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.269222842 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.06845956 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.021757062 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.014273074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119955949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.022387203 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.015030457 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.031852502 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.022316463 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.259478283 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.530204117 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.029702798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.01591515 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.463734555 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.131561329 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.055823912 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022108724 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.260514637 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.033594386 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.014582994 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.016825082 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.050478382 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.021995067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.014180753 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.329257599 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.028402706 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.031813146 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.020920278 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.01453358 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.200342419 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.02477265 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.181136502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.026736121 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.02152384 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.020869861 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.25970627 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.032116469 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.547466966 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.031390193 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.015592873 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.115617412 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.18972797 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.493893267 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.026238935 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.198531814 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.417864582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.042072718 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.023847236 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.446059439 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.045639305 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.027087357 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.02042482 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.017856081 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.018793315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.05982132 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.032784678 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.459220393 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.550075543 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.349290376 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.043661303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.034115303 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.017503263 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.331307599 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.026378252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.017864647 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249565205 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.556245804 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.034563426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.025276601 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.523932708 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.031847818 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.038626038 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.023473442 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.263572989 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.033110357 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.058420794 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.018117263 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.026965929 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.021223401 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.033711584 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.025402321 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.016799532 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.519891961 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.138682685 seconds)
  done (took 249.441942933 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.020339182 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.020380314 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.017982325 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.017912891 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.018005923 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.021053496 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.017575832 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.018620345 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.017793279 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.017479985 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.016729831 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.020947479 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.019178064 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.024203167 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.024325854 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.018377802 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.622131502 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.020221173 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.015551278 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.016706537 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.657746998 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.023788753 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.017267933 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.017609118 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.015820066 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.01928683 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.024853187 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.023542087 seconds)
  done (took 171.72915977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.019657034 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128724416 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.041054403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.04615077 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.025767497 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.020170235 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.116949787 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.040140619 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.028431998 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.018107734 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.018812151 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.079213788 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.031158244 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.116782364 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.050791791 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.128722704 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.123894493 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.025677031 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.021744747 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.01739554 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.049164501 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.027852053 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.079067617 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.13925802 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.037214864 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.13209745 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.041513004 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.020976217 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.019702668 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.132815955 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.038497279 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.081724257 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.047830741 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.036594913 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.136717715 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.135515239 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.124627996 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.125906696 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.024994765 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.02354883 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.019083702 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.023147637 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.131794551 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.040713051 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.023403319 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.133467729 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.037703856 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.021718181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.02073935 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.021137986 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.030921843 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.036284444 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.08205919 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.147972923 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.054405368 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.047364919 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.118062431 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.149128009 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.018132704 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.119234295 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.028445624 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.136715346 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.040170814 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.021431898 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.020303326 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.028202421 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.050273953 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.132142792 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.126884822 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.031397973 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.121013296 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.059923366 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.031606489 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.024532968 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.024788275 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.134629793 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.141118559 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.060316847 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.056519398 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.055239566 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.036397354 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.020563897 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.021412714 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.037995316 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.028838377 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.139450329 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.135504391 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.030833132 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.021398007 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.022671815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.025248757 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.05003547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.145745744 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.057986152 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.129530509 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.088063914 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.098256433 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.040178494 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.039852677 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.030305163 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.082329524 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.037343262 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.037018803 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.331506311 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.081190354 seconds)
  done (took 218.870621376 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.42185439 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.074168258 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.083528638 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.336169164 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.411039894 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.267216115 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.066455455 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.073007664 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.096495665 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.254152869 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.146072899 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.091943422 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.059013834 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.047105525 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.072479868 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.091334629 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.079169769 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.42227912 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.295894293 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.224685097 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.061757021 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.37148079 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.417293951 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.639177636 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.120644376 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.477334595 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.658847735 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.204007975 seconds)
  done (took 66.516351665 seconds)
done (took 871.637526005 seconds)
SAVING RESULT...
DONE!
