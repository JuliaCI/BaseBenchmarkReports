cset: moving following pidspec: 7469
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.405325292 seconds)
loading group "string"... done (took 0.575246945 seconds)
loading group "linalg"... done (took 7.282526393 seconds)
loading group "parallel"... done (took 0.161275513 seconds)
loading group "find"... done (took 1.171371243 seconds)
loading group "tuple"... done (took 1.776455828 seconds)
loading group "dates"... done (took 1.256663854 seconds)
loading group "micro"... done (took 0.223603159 seconds)
loading group "io"... done (took 1.018981403 seconds)
loading group "scalar"... done (took 39.174661266 seconds)
loading group "sparse"... done (took 12.557312884 seconds)
loading group "broadcast"... done (took 0.963287167 seconds)
loading group "union"... done (took 12.412304876 seconds)
loading group "simd"... done (took 4.467516996 seconds)
loading group "random"... done (took 9.154330552 seconds)
loading group "problem"... done (took 1.854316889 seconds)
loading group "array"... done (took 21.0855341 seconds)
loading group "misc"... done (took 1.700270656 seconds)
loading group "sort"... done (took 3.348322925 seconds)
loading group "collection"... done (took 17.563616472 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.512405835 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124852076 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118395684 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119247835 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147257785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111768524 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123085432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084767412 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.785303052 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151295186 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11761263 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429169384 seconds)
done (took 5.133540256 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174806564 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082024757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081884595 seconds)
  done (took 1.297796527 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06485357 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121985824 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066187109 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066138014 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065796062 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066014244 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065772578 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066134192 seconds)
  done (took 1.652621833 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072034929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06827274 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065362513 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068118957 seconds)
  done (took 1.411199343 seconds)
done (took 5.744810732 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787873043 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204289179 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18596288 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410375456 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129919771 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158143678 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.630818407 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.294883049 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187361307 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08094949 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107877797 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327247457 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108607336 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.629404777 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074553595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089713829 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139323378 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426905066 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067140397 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081584533 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088728725 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127633988 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087915502 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074469667 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144058845 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066521716 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135464959 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079530763 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065630126 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213138425 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171610969 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681697091 seconds)
  done (took 10.234373895 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095826959 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096084555 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067878393 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124771256 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094740266 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069420226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070015885 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066478604 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085949893 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12673844 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087693423 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100285979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064866321 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068067283 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084639581 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202532926 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079774073 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081353467 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069804382 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074753745 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104090115 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077528565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077153614 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076359869 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128145907 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178680154 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095439777 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096802833 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065912611 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0784471 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113979778 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124500136 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065034119 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065165903 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122522851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093587709 seconds)
  done (took 4.547229006 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.997886393 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143408613 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089404064 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111408227 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13381326 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063934434 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108167219 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065136405 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080679072 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20900896 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.391623761 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.583698979 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110405934 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064677558 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102476322 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067486963 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067702088 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066011906 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.475317328 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094381519 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105852918 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08095463 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069234595 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067920914 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.352652077 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067041396 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063092918 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067634921 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056084438 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124699865 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066801416 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942164601 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125537446 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065441299 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100027083 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167547656 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06276103 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085926161 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273563725 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068880273 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063007287 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151512703 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069698543 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06507448 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083182955 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10301453 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112671982 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064538087 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065959173 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160620176 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064110058 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078123913 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.634292038 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154277888 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075448284 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063695941 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256579158 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087462709 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068327038 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064076647 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177135616 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130868854 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066899943 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066197673 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067033228 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068299073 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377310423 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067961222 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.88763 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07011196 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077739265 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071030472 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068541539 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07275234 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071314212 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08691815 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066034395 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074414948 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065251969 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065147182 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066027352 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082757583 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373705778 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066471014 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067079401 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064178043 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088279649 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095602905 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065738793 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064846545 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099085761 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066766435 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065270247 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105732705 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065937157 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08255765 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068649445 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112274135 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064972898 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.189176149 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066269255 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09632383 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069583807 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098095563 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078567698 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067259308 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418066159 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064843297 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064727454 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067642441 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065127808 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067020652 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066536327 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063439322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078209112 seconds)
  done (took 20.921192425 seconds)
done (took 37.836666147 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234721606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079150913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073352271 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077817182 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073117793 seconds)
  done (took 1.764589602 seconds)
done (took 2.969000013 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121957758 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099981611 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064409839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097114823 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063627267 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100551954 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101082559 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081035612 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099785285 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066716518 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097044973 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063398095 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063841855 seconds)
  done (took 2.346589885 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083176228 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086340606 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071125777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084879777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064359152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084447994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08323148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091672094 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083341137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074265393 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065400785 seconds)
  done (took 2.07250477 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082127774 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086451746 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071463892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083988125 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064810157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084408988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084506549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088932682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083990971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075796284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064856647 seconds)
  done (took 2.069423834 seconds)
done (took 7.682689493 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076679594 seconds)
  done (took 1.265412456 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58839136 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.160572711 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08204912 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110000446 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187959101 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117562002 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270865444 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086252424 seconds)
  done (took 8.975688741 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102384907 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067413226 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070642176 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068781846 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071343146 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067998011 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067524737 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06898517 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068094851 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070594376 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067900665 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071064812 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068303302 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071712804 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07059641 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071030196 seconds)
  done (took 2.40246002 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091736196 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090920228 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073035243 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073603553 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070933838 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071277536 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07336058 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072806834 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06978523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071456043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073387802 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072436902 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070538524 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063463365 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072353803 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074015344 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069939866 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072295671 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072991086 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074021129 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073565865 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062654665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07065325 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072644125 seconds)
  done (took 3.048049442 seconds)
done (took 16.889697443 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112850284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07018747 seconds)
  done (took 1.376758692 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080123924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081656447 seconds)
  done (took 1.362816889 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081382512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065088926 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089320152 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077140732 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065531835 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06474941 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08679579 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065315891 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064761726 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064874725 seconds)
  done (took 1.927418817 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066581563 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076874346 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068975072 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080595603 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074184385 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063577346 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070680449 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066358314 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075765518 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061369762 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069962093 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081603674 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069623007 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083253461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070580068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067446684 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069672463 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066347465 seconds)
  done (took 2.485251684 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064077324 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064871295 seconds)
  done (took 1.333062694 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065493327 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062602653 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06575585 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065751617 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062650101 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061166682 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061896421 seconds)
  done (took 1.646154429 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380482635 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112258312 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310594152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071385216 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081030764 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255364321 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064755332 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069414622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069642627 seconds)
  done (took 2.659723445 seconds)
done (took 13.999677583 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07903144 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08582885 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094802536 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372487806 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090648859 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065495112 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113437058 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186017319 seconds)
done (took 2.30344477 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215644418 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626776043 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401003676 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206198257 seconds)
  done (took 2.439229939 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339296812 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087575048 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059618183 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068196443 seconds)
  done (took 1.771658151 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06548125 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068497861 seconds)
  done (took 1.3482048 seconds)
done (took 6.990451703 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065309551 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084100627 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064784813 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062799098 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06543129 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065482557 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062781158 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062653345 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065098702 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065035369 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068057974 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064999658 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065445325 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065173096 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06265334 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062837293 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062180273 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065423463 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06273316 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062653494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062837372 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065436319 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062374191 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063050175 seconds)
  done (took 2.809893232 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08369511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065083948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070030606 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070774611 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067955401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069698255 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070099319 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065031604 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070077502 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067179408 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068593869 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068396836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067522882 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068708255 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067688133 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068430165 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070717906 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064684569 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06756276 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068258605 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070184172 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065155288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068866853 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070336466 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06840289 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069398798 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067835105 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065222347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070439713 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06812615 seconds)
  done (took 3.285310993 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069190105 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062427745 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062801943 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069959635 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062238051 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063020375 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061976403 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063055835 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063503628 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062760622 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063901686 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062668462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063235889 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063906274 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063714844 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066308825 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078389017 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063030988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062732325 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063135278 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066060029 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062920223 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063180789 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063018983 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062374862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06208752 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062947807 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062639796 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062972605 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062148704 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065470115 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066097925 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062338428 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069499128 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066562789 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062170175 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066296315 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061985763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06295597 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061921818 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062309388 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061787185 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062176148 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069024628 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06265756 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063476459 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062458888 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063327414 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062363052 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064842569 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061956659 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062486503 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.177718345 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063517677 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06659105 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061962977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062835018 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061832877 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063237836 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062193999 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061748706 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06237626 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06517259 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063285029 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077999226 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069569958 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062520595 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064173162 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063623665 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06527386 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064074645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076145412 seconds)
  done (took 5.965141325 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089305729 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085728122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064715488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065116218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060659405 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062756657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068894242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06307677 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064199836 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081594829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063228436 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06449313 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064294226 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066193597 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06329655 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064620869 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07147087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060884214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062850065 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066263692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063157781 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068630514 seconds)
  done (took 2.720326379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152888804 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069064262 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104159454 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074117538 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068402827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07393524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069412885 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068691471 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068890139 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066470203 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066750729 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068768642 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068765018 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066423215 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066616856 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06619238 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069035934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066413608 seconds)
  done (took 2.582113067 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075228024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065471049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085416657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064390408 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065510714 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06746706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069135191 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072884467 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067414646 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065424849 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073145675 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067498961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067139881 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064942784 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067491694 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064841543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066817482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064274285 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07250211 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068767434 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069038909 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072631956 seconds)
  done (took 2.748936353 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078778703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067795944 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080645195 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067045621 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06072731 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063212247 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068998108 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065090848 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068912885 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066918014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06439535 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063547938 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067571154 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06428334 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067774781 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064712804 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066777241 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064559714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066912241 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060718855 seconds)
  done (took 2.570326426 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084756463 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066453101 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066375619 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073996851 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066506454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066224565 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073510631 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066418286 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066595356 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087315589 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066052694 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065928903 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073789287 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071280081 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066497242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073931315 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073610039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07343124 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066210362 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066019687 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087089658 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065958304 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07333111 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066054716 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066176352 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06609374 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066110274 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070422174 seconds)
  done (took 3.209194365 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06552268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06455278 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062789644 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062908486 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062763497 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062547132 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06257947 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062684312 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065425447 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063006915 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065067639 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064953802 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065845999 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06501069 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064653867 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065655411 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064758091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062433478 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062968393 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062605256 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065506328 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065154219 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065282362 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062323987 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062961622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064950822 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062633183 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062520578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064738123 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063019332 seconds)
  done (took 3.15318893 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074966094 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072042965 seconds)
  done (took 1.38666821 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061734009 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079258112 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062443241 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069390394 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068578072 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066247166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072210632 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06851314 seconds)
  done (took 1.783303393 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081315687 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076450665 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066962376 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078456623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076874906 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082168224 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133153394 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066946888 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072538049 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063253478 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079193582 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065033662 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072065956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065889833 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07101346 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071801766 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062946856 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070609815 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067307235 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063904043 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066599683 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073668854 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068234848 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060747277 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06706911 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087670804 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076365133 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065440889 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067995795 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072856238 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070768203 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059401911 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065085837 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065128716 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063160076 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074704034 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079475474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067898271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074199505 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065815242 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074964067 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060144233 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069870397 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071923694 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075657232 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064932272 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065512383 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060132117 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063450138 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067446771 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060134174 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06789098 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05992584 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072026659 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069080673 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075537928 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064016536 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068709069 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070051036 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069488432 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072252789 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067539808 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068940934 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064520662 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075591327 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069529827 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073870403 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060091289 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059218038 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063082451 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075166617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087347459 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071389985 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065361759 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065453161 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062676487 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068486856 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065786077 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070800627 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07101114 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064906948 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069967914 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072254299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065246405 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067529132 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072311879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063417498 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067553334 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063524799 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081290627 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064174696 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063402847 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063355159 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075323316 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068294206 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064913698 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063182779 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071915684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05910083 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065478016 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06541455 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065773074 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075075912 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069423293 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069255313 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072628273 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071780781 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064918846 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067031871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060930123 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064434314 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063428001 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070864329 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057956856 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066763305 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064571617 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064372862 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072065423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06198512 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063902988 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07093804 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.194111134 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064271507 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062542722 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068505452 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06538779 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068206612 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07387505 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064281325 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060647967 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060771662 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069829103 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066002083 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06945123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070124019 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068425832 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059867996 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064108539 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07068386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074002786 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066035355 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066654292 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071387698 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067162833 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064917815 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072176508 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068899318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064846948 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073564936 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068899985 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062079833 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070699618 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070489285 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066131324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070528808 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068491039 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068487162 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066101807 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065023689 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072287395 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06619533 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06521225 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066311847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064115418 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076206713 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067407348 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0603702 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063100585 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074035769 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063191199 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065446968 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065292742 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068302986 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066238371 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063157437 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065184006 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068202329 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074595022 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069049474 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067125069 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072013335 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076979014 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066937495 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069283658 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067179752 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067994374 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067649598 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076668704 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072642853 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070727857 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068339779 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06169216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070255902 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074721443 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066380653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064498306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066880072 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07083192 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072350846 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069670706 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066149423 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063386309 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066284485 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067591086 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068252469 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064617508 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064692247 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07082034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063273379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071862099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06591595 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076607773 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068857186 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060785932 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069391136 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064856184 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071808112 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060907854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06303943 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064626516 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066051142 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064230194 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067686356 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058952131 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072417011 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072592106 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065803575 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064391666 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064401863 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072126602 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066808395 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069367406 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068528642 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070023971 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073904192 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063446168 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067268936 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074352897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063785027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05844707 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.06945788 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062207329 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063391865 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062951374 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062489689 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067557148 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071102591 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.198068575 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060453648 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068104348 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064109171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065525009 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061297832 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070201679 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069209742 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066843856 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072584194 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066010781 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06616476 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069863775 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066014253 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066879338 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066774822 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068495794 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066024275 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067274071 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065154274 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068236419 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064765324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064195535 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067418355 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065599044 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066132029 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071770212 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064741764 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065410977 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068112363 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066100346 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066115071 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066099406 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065444692 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068909375 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06634841 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066856437 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067972396 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060779592 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072886975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064749759 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072631003 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065665815 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062224223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072357018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068205021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070996357 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065555234 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065900927 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066560963 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065203441 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068487433 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072759222 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063652344 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076585866 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073070365 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067327745 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069000948 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065469535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066325321 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06456795 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06656364 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065805571 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06650964 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06443327 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070421218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066909416 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066098959 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066394681 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066147632 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065714353 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066391423 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059563028 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063957395 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064769418 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065098247 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074805892 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065440677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064908538 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064099163 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065649507 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064344676 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062204594 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072690379 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07332298 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065383349 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071933136 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064385001 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067321999 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07555569 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059200389 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063731964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063081504 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063071225 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072490339 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065079191 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074229203 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065005952 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065177498 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062223817 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065437529 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06394456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059795624 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06267031 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068950089 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064340327 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064178461 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065670753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067610926 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066081061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075117553 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064301705 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066035738 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064856721 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062283055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064106788 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063538534 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067172748 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064815532 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06204158 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061740381 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063645665 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065026122 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065409008 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066134764 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066252473 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070548478 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06342764 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067277133 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067086226 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.189597562 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069369542 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066006054 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065109573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065037188 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070004078 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070380404 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066523106 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07711253 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067549189 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068061562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067616843 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065451153 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065565854 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066847552 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066757634 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065929481 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068002592 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075303918 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065877824 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070339291 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066837516 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066324263 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07239861 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066539259 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06893105 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07119269 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065819863 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067774608 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07352154 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070024404 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069346652 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066435224 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067414617 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07172405 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065390952 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071668341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066318803 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065782003 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067491013 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063661287 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065391391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065330567 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064641088 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071904282 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065939232 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064384167 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064186238 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062929613 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066734027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068996307 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072946153 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067540341 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06853344 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060134808 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062809063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066543855 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063423637 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066478221 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068522044 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070836319 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067150634 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066265254 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064984028 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074255678 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070916506 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069128393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062915379 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068322929 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065851456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0684373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066847167 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065346487 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066441671 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069140576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066455308 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064793019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072171908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068550601 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065603385 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066610197 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065777515 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065267447 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060421922 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065501335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067186304 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070426526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067518594 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065358197 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075842739 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063365099 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066158527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068872048 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064922886 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070435188 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060521708 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066871281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066195991 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066040741 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060095841 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0643582 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063401398 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067681948 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065112557 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060237912 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075706881 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074320691 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068501767 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064134992 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063647749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060549365 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060572673 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064750285 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065565559 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066529846 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074669464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063997943 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06359583 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059573118 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063893375 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067447338 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067244832 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06132563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059275334 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063230267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066972441 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069554354 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062582375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063725417 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.197375866 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068464316 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064269835 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068597971 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062523205 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069681729 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078321537 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065941905 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066566666 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073859423 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075691475 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066899666 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061120383 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066047966 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06944168 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066452457 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067560602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0668285 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080616973 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069351565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065217772 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064413842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068460761 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06490568 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073524471 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066644137 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066366023 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07101016 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067540545 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074729715 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068309026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072706441 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069489912 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068783379 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064602661 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066490259 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063264424 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065049365 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066167187 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066431577 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070583859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072947663 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065923903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075727536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07456713 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067576005 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062062909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065230613 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066035062 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063171312 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068421222 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065606198 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066345585 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06553139 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066724717 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068725047 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072627076 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068580881 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067946292 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067167637 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062158149 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069893718 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070131924 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068433207 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06386819 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067858397 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06758032 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071140637 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070470432 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064387717 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068569191 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06873331 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067726365 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062088103 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073853154 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065877163 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069014098 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066251432 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067090245 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067911953 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070958967 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072066229 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068302125 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069577884 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071063482 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069060471 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06477295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064248629 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073163119 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065380222 seconds)
  done (took 42.030221924 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098890629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061844403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06069184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061208588 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072202666 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061930014 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060618567 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061996239 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06171559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063687626 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061146488 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061098052 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069065812 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076640916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071990307 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065095437 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060218781 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061645434 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060539391 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061792539 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069414066 seconds)
  done (took 2.709537263 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072051592 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076352785 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073933162 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080822731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069946764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068900256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075525565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070042098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076847833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07122609 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077597407 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069247978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071717986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071104895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071234076 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069218018 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076760073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06909386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06941364 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073974803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069366305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073559627 seconds)
  done (took 2.904186571 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065937848 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064497353 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066897014 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060661805 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065043625 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.059980902 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068151939 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062805447 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069849517 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066273856 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066341697 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065972021 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067831312 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06130731 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066676547 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064921704 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106703491 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067736234 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065312391 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060549131 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066523389 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060462743 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060455281 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064009407 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068490024 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065697455 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063929706 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064401905 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064506895 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064741464 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063004424 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066692386 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065581686 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064017917 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064248585 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064604569 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064611017 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060792108 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063183784 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065570069 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060859557 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065531526 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06617185 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063029979 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062435234 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066419834 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064599915 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060078858 seconds)
  done (took 4.51095271 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078794597 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107992143 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066992175 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090981704 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080070319 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073176705 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068264443 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088954368 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062734466 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062879503 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080302496 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077670515 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064710281 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069105133 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068919602 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06439406 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065512804 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064690672 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067762362 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063786974 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068098876 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071024652 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07844553 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077002655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068230838 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063443959 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063512137 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068725285 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076780819 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06874116 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068938561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070145536 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079031511 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070416004 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064014994 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0674499 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079798327 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064997306 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066993361 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06264006 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066988756 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068705349 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07135664 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079964363 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065332316 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069269493 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064230494 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061906677 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076393285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066679241 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072137272 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078113324 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069036333 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064791712 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068872261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078846027 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064325373 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062873585 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068004482 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075978415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062798213 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068213382 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077054984 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066539756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071892455 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078066082 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069618239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068667866 seconds)
  done (took 6.274986477 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074847003 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093844639 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083246775 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081686891 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074638009 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074292793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074759392 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074584136 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074112506 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079330028 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074956411 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11480194 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070188917 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076710703 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074492819 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074314711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074148982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07443718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074526755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074352403 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074337599 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081535844 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074920987 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081478991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078552564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069520794 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0738868 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073942983 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081493222 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074192116 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078601341 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0737622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083068916 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081476897 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078327454 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073576367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06418707 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073553656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073834592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073750537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069617867 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081428441 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073927187 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069269038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073931902 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073704366 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081252603 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077909229 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076323283 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07771954 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074081277 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081396 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07359302 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073526878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08178711 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084210299 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081365382 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081012796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074063165 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080906272 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08136919 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084289345 seconds)
  done (took 6.12554027 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081912374 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072678988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081118249 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060774865 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063364784 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070846404 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063478254 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063773509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072450792 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072703881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075374886 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070479089 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073564816 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074914091 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070704216 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073430451 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070842281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070290557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072666483 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070617081 seconds)
  done (took 2.75878314 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073983504 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082146097 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065813757 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071046239 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06816487 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070400192 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067470791 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068529821 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066082217 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068122224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074660727 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075720776 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065825146 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070394469 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074530358 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070278331 seconds)
  done (took 2.459481689 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082299591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071885678 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078953558 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065683187 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065903843 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061362893 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065083796 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060226144 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0613452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076982756 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064483738 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075087161 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064681864 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063754151 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061416432 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069604077 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061420208 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062185717 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064648072 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076715537 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068115277 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063400749 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068157791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064896728 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066901965 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069248653 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063813648 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064894428 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061915682 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06485682 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067872089 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068113278 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061566495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062424019 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063306697 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062001557 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064418506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065338845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070134045 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064698493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063062658 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066665456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064696454 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0655147 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061518513 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065317186 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061323119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067330562 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06314574 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067348725 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064919648 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067757688 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06585454 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071798537 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068066288 seconds)
  done (took 4.972620346 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079110405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069158014 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061229535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063517722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068628275 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066512628 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068547523 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066411602 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066413898 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063215812 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066434906 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06783468 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066781699 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068959236 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066447272 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068149091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060827038 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06605176 seconds)
  done (took 2.543974683 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070763724 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065352265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072499754 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06501552 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064872602 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067795218 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060934058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063960979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063799293 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065272965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06491814 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067581967 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06384455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067549688 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064975243 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064621474 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067244181 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063156953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065109173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060319824 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067581498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063133675 seconds)
  done (took 2.771590967 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092955519 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081922761 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138663535 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07832854 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084065564 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070576178 seconds)
  done (took 1.879955034 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08981516 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098691935 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065547642 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06832668 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074205614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068627887 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068602404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069069397 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076387635 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074774217 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069309183 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077308842 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076855051 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075974109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074442618 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074058879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068965454 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068727139 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065041678 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082104314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069121183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077564703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069324066 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068826866 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069114018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076459416 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077088921 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07513833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069398056 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077777633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075159402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069549505 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077610512 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07531338 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068322975 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077248205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068974788 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082359472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074464009 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076677442 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068696517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074558407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077495056 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073116826 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07690245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068949379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072842072 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068651137 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068860485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084849861 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074221208 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076211555 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07681838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077072062 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077077768 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084144301 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075177526 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075980563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0742469 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074604932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076045427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074333952 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076462251 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074945541 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074640257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076044436 seconds)
  done (took 6.252193367 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10132843 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066542991 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069269032 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07492988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076486949 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06921967 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069501011 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069104285 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068487571 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066349187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107040687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069506138 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076623588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076552078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069235372 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069090602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069242138 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076263381 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065897362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085173768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069238399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076032092 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076252633 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076093014 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07469586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07429873 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069232403 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068755456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069059892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068749677 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073461365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069082651 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075903858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066017579 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075875423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068603644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068967041 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073250844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068922723 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074038865 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076672137 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082327579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068692367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068477235 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074218872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068819462 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068653289 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065658496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069051238 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06618776 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074563156 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074644252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074474841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075902186 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069477225 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069094968 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068620256 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068836609 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069087937 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07432436 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075788207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068891534 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084312406 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068513364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068761629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075849631 seconds)
  done (took 6.154773657 seconds)
done (took 127.7747673 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184034049 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164654861 seconds)
  done (took 1.679455002 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067853463 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097627613 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07621669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128006439 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06596417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099452312 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09854318 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077323514 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065336914 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065014556 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065403845 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067499336 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130410636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065401435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065580192 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067909197 seconds)
  done (took 2.646806831 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098234214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16149258 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101339851 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063417445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098247468 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071300771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063735422 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073985909 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069851481 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064122286 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071644748 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069476545 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064008856 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069726551 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070063788 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071414196 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064397849 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071399578 seconds)
  done (took 2.763642319 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098795006 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091061543 seconds)
  done (took 1.536537119 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154578818 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105299519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143271514 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348113711 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168222144 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146246705 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141870877 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143819649 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11609752 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137195715 seconds)
  done (took 2.946853442 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09805227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152466395 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265381287 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115958345 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07218765 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093299687 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117672197 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07713699 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078880165 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078926806 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078450796 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074755232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098587728 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072807092 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072897912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075072625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101991547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07193365 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073718764 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074929643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099937957 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064786639 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072357744 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072241338 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076019358 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075975065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064927559 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064609142 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075038448 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073959523 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076225507 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092502794 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076068436 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104464979 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069645916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105257533 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075071421 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073065999 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073939567 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072676301 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077457814 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07742316 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07141414 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074612434 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064752913 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075573449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064507185 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064390287 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076524164 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065864467 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077235329 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076052355 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103970301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067597147 seconds)
  done (took 5.909825824 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101491111 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105062094 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069834287 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112181395 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101167902 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070871118 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101492744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094719937 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102832622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069349944 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067364508 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069483331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080396918 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081167829 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113187387 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105267591 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072252672 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070372076 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104915283 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104486183 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067409663 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096168029 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089956813 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101767587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066570791 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069239737 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067044118 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069340685 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076030666 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077714368 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068326229 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079261157 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08327635 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077696559 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065903885 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067093609 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067427514 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07853249 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078269232 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077990057 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076865792 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06654328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066781291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068578855 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068997319 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066814639 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077316759 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078876896 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07756119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068385214 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068916923 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066862639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068319721 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078503813 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07643916 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079747613 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078117687 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067564958 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067201345 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070878108 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079532481 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07800937 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078179541 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06869289 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078210879 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067351994 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078705252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083372554 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067279731 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069163465 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067118908 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068635755 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068220511 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076451426 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077144798 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068458494 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068426067 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067135439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078666873 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077042636 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066803471 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075373286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066506998 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067156493 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068796707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069506295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076369633 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079088002 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069179945 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067625055 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068134162 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067358094 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066225785 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076043518 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078865192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077904445 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076479205 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067369892 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076046753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075299227 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067816864 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076469355 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065989327 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067639036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067167884 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075123822 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.0738101 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.20339007 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069114026 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068052922 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077288826 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080317273 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067774466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077416165 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079001412 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07805996 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067236304 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080753112 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068325715 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079144329 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06905703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078404931 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067454967 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078209266 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067715036 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067237847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067602509 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079081189 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072376828 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067898951 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068957216 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069638836 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077279437 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080971943 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07001133 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078926251 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07821476 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069478942 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07807663 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067728312 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078853693 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069638276 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069799623 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066792833 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080983689 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068260183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06752056 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069323767 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079282462 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068047613 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079376442 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077057589 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067319026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080427238 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078935666 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076457056 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079493724 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069924174 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068555257 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067362873 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068375307 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076932836 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078720314 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069944785 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067736721 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077434506 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078414734 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066371196 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076218158 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076430568 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076598963 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067913565 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06848644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078976307 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078899474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07714768 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077391712 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077289799 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067521892 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076149035 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07698704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067229242 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083270063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066987679 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081105664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07772383 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075456744 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077398131 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078557424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078961901 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079064449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081805185 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06690608 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067248297 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077968517 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067160872 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068139259 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077166175 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068713223 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068505409 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081780723 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067931341 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07844415 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067309419 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077583444 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06627129 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068860224 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080808276 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066152179 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067836796 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076579424 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067538915 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075198133 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077463421 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075228491 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065736561 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067515324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207828405 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078874489 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067512575 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06811835 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070337138 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07832574 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076622575 seconds)
  done (took 18.385292439 seconds)
done (took 37.221428007 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206936595 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151258277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18085193 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118117299 seconds)
  done (took 2.106644736 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115042975 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100679763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091958586 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064563303 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097143442 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064492206 seconds)
  done (took 1.919938754 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308748582 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208727749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18651027 seconds)
  done (took 2.082556777 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199666346 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187045407 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414802386 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261111948 seconds)
  done (took 2.55519481 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142227869 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087897018 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066543666 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082900794 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131681677 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157994751 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099355133 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123605639 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077735914 seconds)
  done (took 2.406676224 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14725021 seconds)
done (took 12.601164053 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112070503 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193813863 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102222216 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148016011 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069077843 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.182532942 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080779286 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082105655 seconds)
    (9/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177937404 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08239007 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.121863355 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175624334 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.244841855 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072345243 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077416695 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075457732 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18160423 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073092974 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211438258 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072129585 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088529039 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100973777 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.226383784 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.196967543 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110551263 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070955289 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088163117 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093880848 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077044742 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08898195 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123468777 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075845345 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.211154597 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180242072 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070612279 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18862395 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186635358 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16199912 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142493023 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.167181875 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13775643 seconds)
    (42/309) benchmarking ("sort", Float64, false)...
    done (took 0.129956101 seconds)
    (43/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.201416871 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072336425 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147963497 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071982874 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111675392 seconds)
    (48/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090342394 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06492877 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073709283 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070376567 seconds)
    (52/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075340915 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.143129381 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092026887 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070573213 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.235862856 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066173549 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051186672 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075509396 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151380139 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125585981 seconds)
    (62/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.224920715 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051170749 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100841531 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09130445 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062450883 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089483984 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05097045 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.072504315 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075958481 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184333707 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10773071 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073114442 seconds)
    (74/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.10997619 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.064790166 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073023341 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190361607 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087900196 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071569843 seconds)
    (80/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.109934039 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049285539 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050862757 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151687324 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.196447028 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.21312661 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109342386 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148848891 seconds)
    (88/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189528531 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065378816 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092397203 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075485599 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072158696 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076644434 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050460596 seconds)
    (95/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.1122672 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12013678 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069886415 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070965383 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117742174 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092186679 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071272054 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072256164 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112360413 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11464061 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053770787 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072382049 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078941423 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050358363 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066743435 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049624814 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064423885 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111507071 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093545361 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184583302 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072920269 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154488012 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139699066 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073782622 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077080429 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161857108 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183397574 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170162965 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.190850346 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072900373 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092736868 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066675603 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095539287 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.137147588 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052034642 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072681073 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074343362 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084686256 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0887996 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139082844 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072865554 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093078936 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.152969755 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193605991 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070781759 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069935001 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070915755 seconds)
    (142/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049926141 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052013222 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073014116 seconds)
    (145/309) benchmarking ("sort", Float32, false)...
    done (took 0.133970214 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052063412 seconds)
    (147/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07356354 seconds)
    (148/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088683029 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072023153 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091545628 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078456867 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064236424 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065285982 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072433683 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.049631941 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064200037 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08845392 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069578386 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195422337 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.075983208 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064206601 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070297218 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050629064 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07427996 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066810818 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.331592386 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077854798 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066751503 seconds)
    (169/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15375209 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060166026 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065428187 seconds)
    (172/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112127408 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142710064 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159335153 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112717343 seconds)
    (176/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087737162 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194963171 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051505128 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141377408 seconds)
    (180/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09786412 seconds)
    (181/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051177905 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069805012 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050029457 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.049829894 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082867867 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06618684 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065223866 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07153871 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071386885 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072755481 seconds)
    (191/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072195132 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072961813 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049949417 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126721099 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08708042 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08463269 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.259454175 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053005896 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083711978 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097842753 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064744745 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08853551 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069026237 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087287501 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051115185 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050255803 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075482758 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109310196 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072952022 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065688027 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090738755 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065332955 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05202578 seconds)
    (214/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051179489 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08875194 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153724185 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049894848 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066228057 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070534205 seconds)
    (220/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111808286 seconds)
    (221/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069893245 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091448032 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051113153 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067157014 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051855144 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071101606 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064662459 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068358572 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076735492 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052103389 seconds)
    (231/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051470801 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136491248 seconds)
    (233/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051400143 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065729929 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050454163 seconds)
    (236/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077097282 seconds)
    (237/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050361364 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073880725 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073606091 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089069769 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051272829 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065191553 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051534221 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051980046 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065176522 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063470417 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051785947 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06576251 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065650176 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064525445 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06483469 seconds)
    (252/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052237778 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175984698 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065282986 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071425794 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068909392 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066464841 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088321897 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050714515 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052766584 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071862005 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071803095 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065705566 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064973616 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065685363 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064033189 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072471673 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050591186 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093420333 seconds)
    (270/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050855951 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 0.141647888 seconds)
    (272/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050391698 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049605855 seconds)
    (274/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061819324 seconds)
    (275/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075552443 seconds)
    (276/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073676661 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067563118 seconds)
    (278/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068899265 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066397486 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052013957 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075132805 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065294529 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089082094 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065496613 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065549879 seconds)
    (286/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181172535 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075519345 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180500537 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14594228 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073455615 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090739534 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05241834 seconds)
    (293/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062603241 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067194276 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068178266 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068433251 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139455811 seconds)
    (298/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072785979 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052373736 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07135984 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05252767 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063565505 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052549174 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066894507 seconds)
    (305/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08087254 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054869635 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066437874 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052890088 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065915474 seconds)
  done (took 30.762987592 seconds)
done (took 32.158093518 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083806788 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092500904 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074903215 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093479392 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080707823 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075892765 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072071613 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077939225 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079614725 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081778791 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078488737 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053674264 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073989654 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074170298 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074895922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09105822 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078516151 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072867582 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073142999 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064299723 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072831912 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064858017 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06674601 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053794016 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078144555 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071516192 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071752245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073616721 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065475541 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065082541 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069044072 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073407495 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065003159 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078035631 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072197062 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072583754 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074753335 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076992809 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067379154 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065274785 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074509804 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065038104 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07293728 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074037108 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072248014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071862495 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072880021 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077924327 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091181677 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06706822 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074368142 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075751441 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075859833 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072758826 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069283096 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073000932 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071015993 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090756399 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07354481 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067470815 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073537555 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074172602 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071051363 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072370142 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073092197 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074915838 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075393626 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071152687 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074150896 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071039652 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064665855 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072235636 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068602126 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064908596 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075533224 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076763661 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06401047 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070678083 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072571617 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070969487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063944694 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066726928 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06614475 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071312847 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066554544 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053756894 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069001665 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071604581 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064272103 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073282479 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071409191 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071917364 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06645944 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075541683 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064206075 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070303203 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065617092 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064931475 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066615664 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070237429 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065622209 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067337999 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074434447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066199788 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070975737 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078492458 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06446409 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071650829 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063807755 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064487228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079581916 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074434987 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064723313 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06725853 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063454694 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072900326 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065934252 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065407223 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065605834 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065154803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070957089 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064715711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066511238 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072154813 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077532615 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064524792 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067768132 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065919912 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064059413 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069799409 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064339671 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063909545 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066121823 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061057649 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065649529 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06372825 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071021757 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065075283 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206260531 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067564451 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074918216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070628595 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072088773 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070725285 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063544638 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059673852 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067348609 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06752282 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06756719 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065600252 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067500827 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065173803 seconds)
done (took 12.388619771 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06612119 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139357498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097352931 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096387437 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085915858 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066615922 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076165104 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100960429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06730351 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101032644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087336697 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086149225 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114198157 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064371851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06527985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069420753 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067063593 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081457492 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100622038 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086963982 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115352294 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065124437 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09246589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089680146 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087926802 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094160725 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068987836 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069741033 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06926787 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102440315 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088042927 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069782745 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066119607 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098029669 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093964514 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083729024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066309448 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083718568 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066117743 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066161879 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066973806 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098976176 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080703196 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081438964 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069931153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068899921 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066740628 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083689443 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089591361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078309885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085965307 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101115997 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06871307 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064821324 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063942362 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085099193 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065061225 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067937756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065154816 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067666565 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065760069 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068423877 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080176805 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079630399 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069418948 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079057204 seconds)
  done (took 6.774124944 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083281027 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090923365 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08326711 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084042609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065255649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065657108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066335059 seconds)
  done (took 2.026948396 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06669208 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088468654 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088321514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089271018 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084159393 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087850102 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075381852 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068044678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090854369 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069580905 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090615021 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105070379 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072231964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07569617 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091019917 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066302275 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09093448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066584716 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068791549 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08966566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069308435 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095503465 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069169556 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066069551 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08023268 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067216345 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116151094 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073104645 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069496679 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070266293 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06421876 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107358491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080315281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073833724 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065890549 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080724724 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080954836 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06489187 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084164116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07520432 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08030907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067109407 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067263541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064102662 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070515908 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077087157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067234172 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06668503 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068950003 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086390534 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066593671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080201929 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069186923 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072212834 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067446305 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072460902 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0762097 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067208283 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086007427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067693117 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08333833 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084156417 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082529396 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086171891 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071485441 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08315175 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082798069 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071044487 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070336779 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072217852 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085047998 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065107613 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067496105 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076770742 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068019713 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089296257 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089021255 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067185649 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079166261 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066513788 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06596184 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0657015 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089235497 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071356636 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066065555 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07008835 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06889064 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064329579 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06481376 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069766301 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063596025 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067640188 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068616164 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06858909 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069339168 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082742461 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06840117 seconds)
  done (took 8.824428989 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068035474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067972355 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069326038 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067573339 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067881737 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067337336 seconds)
  done (took 1.915563799 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092605552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069358404 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080569046 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071606095 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103888253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086437064 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086522893 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078254426 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082976823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078070473 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087400373 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088177308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092002197 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071597122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086097425 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07117288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086774497 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07491633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077349635 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072599446 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085879065 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071661182 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072236795 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08135219 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074820523 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070907842 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066974218 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078116046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077743761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077968914 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071586469 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075406284 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070004165 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07706515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086513013 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070044831 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071143428 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076357215 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071854573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074891767 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087693332 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072059605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074037306 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076844829 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077822111 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069656441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077253253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074346497 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086428306 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07673157 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076749543 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070388012 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074882227 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076556903 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069526372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076918353 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076754885 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086700407 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071150669 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069800846 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06768604 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075148994 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076697366 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07484692 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077927216 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076582701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070016431 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071552241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07234125 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070683081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075663525 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067646439 seconds)
  done (took 7.024686809 seconds)
done (took 28.038666005 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536309704 seconds)
  done (took 2.014209654 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612982911 seconds)
  done (took 2.114210146 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.590391442 seconds)
  done (took 8.085939861 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398826036 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494041179 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719684301 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132237953 seconds)
  done (took 3.281056843 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.693601725 seconds)
  done (took 2.200546645 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213863666 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202224842 seconds)
  done (took 1.933542585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37470005 seconds)
  done (took 1.877314586 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.131424872 seconds)
  done (took 2.635988682 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256884416 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174598525 seconds)
  done (took 1.937698323 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478988972 seconds)
  done (took 1.982217432 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.856560909 seconds)
  done (took 6.361854548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210461549 seconds)
  done (took 1.75751284 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240055374 seconds)
  done (took 1.745932768 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70264898 seconds)
  done (took 3.210060909 seconds)
done (took 42.643643272 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079753801 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080498737 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081224563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078541834 seconds)
  done (took 1.813245898 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077265073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072570457 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076527186 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072106892 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07631701 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072912161 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074389371 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077125007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072658113 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073433155 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072663744 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072220367 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074749817 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074130343 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071525897 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074764305 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076010441 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072243077 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075202613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072188243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07052739 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074788162 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075165455 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071578126 seconds)
  done (took 3.281722805 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077793981 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072743515 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074782672 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072031843 seconds)
  done (took 1.812175404 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078651109 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095792964 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089379639 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07867619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09261939 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08703401 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068702632 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068486199 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070155094 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077592493 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068210843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096194992 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088953202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077548387 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079930966 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065284539 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067465721 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087354114 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077991429 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078544914 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069760706 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077366876 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067642378 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088437451 seconds)
  done (took 3.409521648 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086595713 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105133013 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081140599 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088396059 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090511925 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065204224 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088325332 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091093497 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126522232 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065086635 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069966618 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065364088 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072528769 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064826518 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080581616 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108024514 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110917054 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068096041 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096848762 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064859215 seconds)
  done (took 3.210313436 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071998731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069636476 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065507084 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068530192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077013978 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072204446 seconds)
  done (took 1.944854709 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068087262 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067997978 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068021395 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067382755 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072010266 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067186479 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066108919 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06711867 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066845681 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066238145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065965806 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065756678 seconds)
  done (took 2.328873415 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203441013 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068933419 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069559537 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065487454 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070532921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065529024 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080165334 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067168065 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090586877 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0659229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066103183 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067825135 seconds)
  done (took 2.503137176 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205120903 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075671618 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237713644 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150214314 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110580242 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114620136 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111474223 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113207812 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141040048 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100167832 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167416355 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166573805 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107454094 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137069536 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089024717 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100628944 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153685181 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161734561 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105107613 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166191603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144419346 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125898521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152606408 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101175619 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105115953 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120923061 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070271887 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079416963 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168932026 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132526273 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143521792 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110433224 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091761954 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176047884 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171576723 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140701391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146130405 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083689799 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103940972 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133708116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198380265 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088643997 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16387948 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109737523 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219519216 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133737543 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118857474 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120138414 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105670286 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089655781 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145314187 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184029356 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137477054 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088067116 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12322842 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113674595 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114306284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114024166 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179956878 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161950703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128404608 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070881482 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108591135 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153571007 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134487068 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107807162 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124179432 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091987035 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134672829 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154544288 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119818882 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147342117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118836844 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089322694 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120180813 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139691335 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126865082 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160432117 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123762921 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072513432 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12344187 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100756671 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080357927 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14525051 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074551631 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175863579 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098087598 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108084113 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124026412 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108900785 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109731485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161614572 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144913902 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10237141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065680041 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245518424 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121122559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147363061 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087794751 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109712789 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117436331 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076804456 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137098392 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075159811 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123889155 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077159035 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128990863 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130373119 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077657439 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12223676 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103240706 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101405742 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13312498 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161100022 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088176923 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081239987 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169456949 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121388946 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103554207 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14421192 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156861059 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102289658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100217579 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148858575 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178224117 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091207086 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165656134 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106283316 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083390411 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087434579 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123222839 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111661959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123276486 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081585693 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118899008 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168166846 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074372688 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095276109 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133688374 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078639524 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08064025 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105082929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104049785 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095025137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099765823 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105695229 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13813769 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122431048 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104628509 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122290125 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097100415 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31413434 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089106435 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102323013 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10409113 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070147749 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136323835 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160701063 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081864467 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16617239 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122676815 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116308097 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118781119 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08400037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142127845 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079587602 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070640127 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145025455 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109837392 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109717206 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151337106 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11607278 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126291467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119162082 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133927982 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129969464 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129860868 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105748285 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088714932 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112412702 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125777764 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073296539 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091828988 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082795367 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106900309 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097031319 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082906322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141228913 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123632832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108758637 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115236974 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09981632 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148449605 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075411369 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127598273 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118629348 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095383147 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151899605 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152003075 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1308995 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098662247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135621758 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070035601 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073256358 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086764835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121682506 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081999039 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082237723 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257855333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149769106 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129094087 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137671142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123937788 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121030064 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156039479 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070913888 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118945623 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147701051 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12153666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103803729 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090110716 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098732872 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143180435 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107761298 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182308219 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117620919 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124453787 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15328907 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101325996 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079542817 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102541182 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135925143 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103575343 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143570024 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099466701 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087974609 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109423134 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07408214 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098001332 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126371619 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118261318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134430068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115080006 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131555851 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076982307 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114810628 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12102856 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121365498 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0636159 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120010667 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161107771 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094025311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117877566 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151888746 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078136484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134157452 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173678318 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142832624 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084208703 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251760226 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121666928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129646339 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121334808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140826111 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106927477 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137292808 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111578493 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08628428 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088539264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098090497 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104720257 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094817609 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105846738 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113004263 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095587227 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131130286 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104048065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110078293 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118727917 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098806743 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091178807 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096314643 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176666419 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11833039 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170560846 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099225749 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144546778 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163213805 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074747343 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078557338 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077457612 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139847526 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084111394 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129340333 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10660957 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116701962 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123143113 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142066903 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095356209 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068307895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108694372 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132706329 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124117846 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097864272 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103028951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163809677 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101245847 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079304319 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113403432 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115390655 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102520346 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170123268 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060821419 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104613425 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07573005 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079119675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126181579 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292302236 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081010241 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10312456 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120399336 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115701745 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128644007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100912529 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109052114 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126403217 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150053803 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128181769 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089312666 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112941345 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129278388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157026176 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10456486 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095731874 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173020944 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153355381 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159520848 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087126579 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114596861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114489774 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108876299 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137317094 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082843357 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162782785 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082075224 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135052066 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102340401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088650559 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128743602 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107654927 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087532273 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147438868 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117233362 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082325104 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077299382 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117382563 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11961831 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105442102 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075285942 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138921287 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073433065 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132178142 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158436179 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080041696 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107002402 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095676517 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079008261 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105069605 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101177261 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086231384 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238536234 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176102007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088353376 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150603045 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133290408 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114111569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137772712 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102331329 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639374914 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078244658 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153004582 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116969053 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173887603 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101044082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118833715 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110376367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123411658 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144142366 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105069579 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181205639 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131649461 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116062595 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078891904 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102508296 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103590174 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087579798 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107519402 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114849868 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115438574 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093371136 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115606818 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124156312 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081691651 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09629081 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155922487 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115971796 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143099578 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140345588 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085140544 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117771543 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137410401 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079564152 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12001923 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150855663 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105236156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098267144 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079920859 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099543338 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1575028 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072654928 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156611484 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117447358 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252875896 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113779805 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1130209 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132220158 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106549715 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12223685 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092451891 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109795137 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113868202 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082447846 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076785896 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105268039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111610397 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098836509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096539915 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099184033 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152718951 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072597587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09907774 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114727965 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143648008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173364995 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08930346 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082985314 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118586782 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113796567 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112209457 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12043831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079552482 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081322604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080381463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078040487 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108513624 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112802922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114082433 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110788519 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162825975 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082862119 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231126024 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095510801 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105150745 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069391199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077935754 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095610816 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097653773 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106603073 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109759014 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158797865 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095640569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090085428 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091538854 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073980629 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08285589 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129383798 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109105678 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117083941 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097759251 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061672865 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106121627 seconds)
  done (took 58.842452042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119736812 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0851766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096118911 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14388056 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122294215 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202152035 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153787883 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188747558 seconds)
  done (took 2.750869711 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067960982 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096752497 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103434804 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083150993 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067021925 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068334283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232237524 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080521595 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066440673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098401529 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077666133 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067997539 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427717284 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065690469 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067177638 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060455453 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067264169 seconds)
  done (took 3.41048188 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388258773 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609832736 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.38276024 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073272069 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.451231004 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091409464 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.128190389 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130695875 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074603192 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537386349 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70482151 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127373672 seconds)
  done (took 18.32275068 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075869546 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069410994 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083531163 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083843918 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072272711 seconds)
  done (took 2.001302867 seconds)
done (took 107.200546987 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081477685 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605312632 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052855079 seconds)
  done (took 2.303575838 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082969824 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085530351 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085568417 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08285014 seconds)
  done (took 1.958152021 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074416165 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076516284 seconds)
  done (took 1.765122607 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233766629 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169509598 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096144203 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08231821 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079905516 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080154775 seconds)
  done (took 1.863836013 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071926397 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07513178 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072780233 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076440432 seconds)
  done (took 1.912223004 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0764837 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052681782 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054211797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057750657 seconds)
  done (took 1.860224861 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08680157 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079790112 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079011845 seconds)
  done (took 1.860631658 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102114554 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086183865 seconds)
  done (took 1.803198913 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081923577 seconds)
  done (took 1.697437974 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10121177 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102013866 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132893529 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111693716 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139966429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10964153 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084201907 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085447193 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076242818 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086343405 seconds)
  done (took 2.645243072 seconds)
done (took 21.864952436 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078901051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.458285931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393496257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089905753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709013681 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389933348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029893344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092873377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115277738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067461185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084606007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647078826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983359744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418633778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971247739 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324326368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649172345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068310163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067927953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067670523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010954525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067434808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06726921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06849976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64778322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371883094 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067383203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323321733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067158583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069246852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354572139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068061199 seconds)
  done (took 16.492188772 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07057889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1207892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073383451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084650822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070649598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07009496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071374366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06939009 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122202577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067835407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084649443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067618296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071030677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068222382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087850928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.084548099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068668873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071095163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06782796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067655426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087064358 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067926019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068002628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068229961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067581605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079698289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068156944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067804605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068009691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069380199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070290195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068632472 seconds)
  done (took 4.036576087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11878639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128228092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073216734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105766892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114247896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070020645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147386447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093845119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129871395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067578041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084645192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067343064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102665657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0683287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08835172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067986795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069198397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068119857 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067895456 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068246961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088587821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068072621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068037686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068724922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068656532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081613335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06884635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067955884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068398216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070365477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071770418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068854252 seconds)
  done (took 4.288633927 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073053063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075564943 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083968082 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084992141 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069404167 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072271721 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073480152 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069532011 seconds)
  done (took 2.231314094 seconds)
done (took 28.672060669 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079038797 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0686008 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072189184 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081667027 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073433132 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078888143 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06657952 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075516642 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071969538 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072877861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074533938 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067026467 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070852623 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067826665 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074469238 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067235404 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079250636 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072228606 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079490672 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079624158 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070055887 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073536041 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075627077 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079302906 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079339059 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079003625 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077809538 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072903438 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068821034 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070837401 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077648954 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084262569 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068456547 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080273208 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067931649 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068060687 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072198837 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068055319 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079479488 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07688211 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069888576 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076480419 seconds)
  done (took 4.719891713 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088109604 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093361356 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084704388 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061560913 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067343989 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065681157 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089627295 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059486866 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059027034 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088461533 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055363976 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059209279 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063061579 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053180989 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06228485 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056411364 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06175626 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055017495 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05967855 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059404378 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089287979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054036201 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077469548 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063207954 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055456869 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061209654 seconds)
  done (took 3.37729487 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074458171 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087836558 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08977177 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131058064 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10453898 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079177555 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080925285 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095446247 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089380741 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066987254 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071009737 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093324574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093135362 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074705913 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067451629 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087079092 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084741289 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069270755 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073885894 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096899064 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087472159 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086809189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099685732 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084136113 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066844721 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070445346 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071663776 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082417264 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072462446 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076700153 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070990681 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070760747 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069388877 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079746059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070936306 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069547491 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09300917 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077509322 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07831322 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067777735 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071063324 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068607496 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092156148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132746953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067043092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073396861 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074827783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076720902 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066712823 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087505645 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078621396 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066385907 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070043554 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066278253 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067558556 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080726999 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068764313 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069086534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076628045 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070687738 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091713178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071745192 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083218595 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066341587 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07471596 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06624279 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067854395 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065576686 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095291885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068291117 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111697699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068173049 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068080181 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075919526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074794729 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073195142 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067346372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083023881 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077843035 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070269968 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076090368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070199052 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069462556 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090670816 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069297602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068695789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067987103 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072852232 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069399146 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.079611284 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080234258 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067106687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069957574 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084053291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067695986 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068327501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072679528 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071720396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066423523 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078281488 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071304106 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067454951 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076422822 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06727905 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069746767 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080058331 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072759727 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066180834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071424628 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073169329 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068221718 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068725731 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069942079 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069063563 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075972426 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073630912 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071267879 seconds)
  done (took 10.614452545 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164863618 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156672378 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070684926 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149827328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076278804 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079738118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151091723 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095039608 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068067937 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068414903 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068721502 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110631979 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106144361 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116764192 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078741955 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06784161 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084589141 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114592673 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153079363 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146889023 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084715116 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076808193 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069602662 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069086947 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070662928 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078402639 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085238043 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076929866 seconds)
  done (took 4.406021969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08049708 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100862012 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074715347 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090437021 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090489536 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067573121 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069975312 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069718187 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081411891 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078509772 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067735648 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073411048 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07480404 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07067927 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068500912 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07498309 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075192442 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069126752 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071732658 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073285922 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077886225 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092600202 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071375258 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066545902 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072622638 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066978931 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063111885 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083811993 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067556535 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095322859 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065183156 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075139517 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08218369 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068646939 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067430601 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067434973 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067417872 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067159678 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068626681 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066180304 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065507673 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057143972 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066298998 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078829684 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073974816 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05597778 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071792844 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072485001 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072757999 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064622478 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070270175 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07079066 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070623002 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074854957 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07239255 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072456047 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068596147 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07404519 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076112054 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066930525 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064758786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06540537 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071872098 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064799304 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075762007 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071931659 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066481042 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067018278 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068988326 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074054736 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067042863 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070333102 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065124074 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06886143 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071910887 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069191472 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068291009 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065644002 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067074659 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067519013 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054704452 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067765087 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052807469 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070399309 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0658272 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065581207 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066949751 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072174902 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079198214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068652676 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073115854 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068393478 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066366452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071268237 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059788179 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070365929 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083289531 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082352425 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067034489 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065626391 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082253406 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07247856 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066107149 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055205276 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074594781 seconds)
  done (took 9.126064838 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090097651 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069858431 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085881836 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093810036 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087471939 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075375039 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077257941 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069515248 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083373272 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074406712 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077326331 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069179532 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078116339 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077496152 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069876512 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078072624 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072347544 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08507694 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082853986 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068274427 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076157542 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080483533 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090469364 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082519068 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080770861 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081968117 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090955603 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072325593 seconds)
  done (took 3.894393676 seconds)
done (took 37.763502852 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.714249672 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.89048113 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.711151266 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096027147 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.03783578 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.7788626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.828945257 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.703718543 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.763903694 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.742756821 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.945071358 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.862500233 seconds)
done (took 64.717256047 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.731354557 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852679455 seconds)
    (2/2) benchmarking "String"...
    done (took 1.98149627 seconds)
  done (took 5.477037551 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.026591452 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.433062367 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.958056788 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.704444999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.711160287 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.04763987 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.509685179 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.237677666 seconds)
  done (took 30.245472208 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.838740359 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.938213926 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.392413157 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.426781975 seconds)
  done (took 15.28645869 seconds)
done (took 62.498220211 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.717528412 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.743930027 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.715910838 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.69352668 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.762427304 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.71891164 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.127990905 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.767117487 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.701372069 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.69706309 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.702148854 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.134138972 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707575279 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.06200928 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.69993747 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.700624719 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.733719888 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.311177155 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.858486186 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.720855091 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.709713795 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.703077198 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.702424873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.700483791 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.732131645 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.699946202 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.117300697 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.709619318 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.513161645 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.702951739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.753816923 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.746616452 seconds)
  done (took 201.709310025 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.698654965 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.560858189 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.648384752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.734416359 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.076342534 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.878229653 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.791513129 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.098921344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.700933489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.703927771 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.909998744 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.696297365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.92910776 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.72930904 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.735053169 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.788479788 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.86172213 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.916517124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.737349903 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.870819737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.718325071 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.703724357 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.660423112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.871272288 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.709635319 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.698176014 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.697990751 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.704004994 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.88207625 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.828890464 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.737699686 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.696497144 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.904784294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.564419391 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.706718239 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.7241107 seconds)
  done (took 166.510334552 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.073345752 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.693601314 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.694725645 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.692495377 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.693132059 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.698753005 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.692900918 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812458446 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816522796 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.285990633 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.232213809 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742839499 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512456173 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.692226416 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.692964977 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759932433 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.705928296 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.69286311 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.707143491 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.717394735 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.693080375 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.693198238 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814353637 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.705022389 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.808146028 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701848674 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.69290767 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.69773883 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.068109809 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691607511 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.697122614 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.934590466 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.691509093 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691004208 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581423639 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.00461957 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.70107584 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774391058 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.693093137 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.696749805 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.692275884 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.912269008 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.692686164 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.691664118 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.695160418 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867943009 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.691874055 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812483092 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.692791533 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180764772 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.691967401 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691784134 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.812991353 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.379938503 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.69477231 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.692386064 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.694950453 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.692238006 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.691385871 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.699172084 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.744141895 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.766441863 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.694639205 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.697450055 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.698308728 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.692619357 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.93760381 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695537612 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.733960225 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.746713845 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.809712967 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816609105 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695911608 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761057759 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789677523 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.694381182 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.692953306 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.694271781 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.693551127 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.775712681 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.694016664 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.820010731 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702037311 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.694776259 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744769928 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.763286744 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.694639283 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.589759677 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.696341195 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.69360308 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999337804 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762041099 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.694395691 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.694582697 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.693543102 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.822773271 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815659454 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468157975 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696471715 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.676953884 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.69707481 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.825302247 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.695719212 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.886090693 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.697772367 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776149845 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.699612908 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.696467369 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.695090374 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.726969336 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.695682641 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.753157852 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.69795741 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.695419571 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.066720444 seconds)
  done (took 393.438007574 seconds)
done (took 765.430703024 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.381204229 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.332305752 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.436112262 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.352039107 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.320681617 seconds)
  done (took 13.454699357 seconds)
done (took 15.08738216 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780573708 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.786788946 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.717875586 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.78346113 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.715309031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.783733707 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.765871219 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.720800326 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.752695205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.721184332 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.753571979 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.720783896 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.708392637 seconds)
  done (took 24.343647948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.926830695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.940060509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77016836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.925445473 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740959598 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.927549608 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.858449531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845746019 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.852460681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711023778 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709488003 seconds)
  done (took 21.842733172 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.935543789 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.940361005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775960848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.932151166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745672152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.93620023 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.864741136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.849877812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.853340168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.713391284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709529767 seconds)
  done (took 21.891495576 seconds)
done (took 69.711357973 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.704333286 seconds)
  done (took 3.33845294 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.729551395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.883845418 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.709145687 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.708261 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.703473306 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.706212302 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.708415578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.705333185 seconds)
  done (took 15.490411103 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.704875108 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.701572135 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.704038954 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.701831447 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.704457153 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702017565 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.701137205 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.70174411 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.70275348 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.704593305 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.701618437 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.704796887 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.701819228 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.705125389 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.705284483 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.705565105 seconds)
  done (took 28.889397008 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.705066162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.702041939 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.701705686 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.702717766 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.702711592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.703708007 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.703700923 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.702104768 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.702035918 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.70250451 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.703248857 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.702680999 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.703072368 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.702953578 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.703640503 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.704664981 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.702983956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.702993076 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.707097368 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.702948161 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.703654516 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.703172423 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.704356455 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.704156948 seconds)
  done (took 42.51859159 seconds)
done (took 91.872611286 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.540876264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.066760913 seconds)
  done (took 8.244250325 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.707447284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.706281009 seconds)
  done (took 5.084452616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.706910321 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.706669833 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.707565509 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.706727852 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.707202401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.707593267 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.70720219 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.706647601 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.706801302 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.707264984 seconds)
  done (took 18.707887139 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.707004738 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.707348787 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.703513962 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.706746341 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.707803875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.7047487 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.707252476 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.707482312 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.707102686 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.704422109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.706834656 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.704397184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.70721759 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.705177487 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.70745192 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.705218478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.70393624 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.705052869 seconds)
  done (took 32.34650476 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.708623803 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.707635613 seconds)
  done (took 5.054051702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.704582311 seconds)
    (2/7) benchmarking "second"...
    done (took 1.704472236 seconds)
    (3/7) benchmarking "month"...
    done (took 1.706002554 seconds)
    (4/7) benchmarking "year"...
    done (took 1.705417249 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.705776036 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.70535408 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.706129082 seconds)
  done (took 13.575724508 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.708705211 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.874889578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.938910828 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.34374685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.711126643 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.712422803 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.670914511 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.713287745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.713273022 seconds)
  done (took 19.025644408 seconds)
done (took 103.676245378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.525231722 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.707333869 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.033644082 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.741045805 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.723469493 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.047327552 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.712297059 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.011999941 seconds)
done (took 42.142158892 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.707405301 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.254587586 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.281279402 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.067838938 seconds)
  done (took 12.243917047 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.699319481 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.257317446 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.757781604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.367931065 seconds)
  done (took 19.994742495 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.077140453 seconds)
    (2/2) benchmarking "read"...
    done (took 2.056542914 seconds)
  done (took 5.780065905 seconds)
done (took 46.367698652 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712092629 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.709794492 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.712231889 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.7099475 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.712563107 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.712457244 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.708544507 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708865452 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.712797548 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.712290613 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.712847847 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.711950567 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.712023348 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712167517 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709498891 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709812553 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.710494308 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712371394 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.709451994 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709252335 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709731865 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713851452 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.710972591 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.708986702 seconds)
  done (took 42.707468342 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.712397049 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.710355462 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.712168273 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.713348864 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.709719554 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.71170024 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.712622276 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.709279398 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.711645073 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.713340661 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71056036 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.710191639 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.713237857 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.709358122 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712283954 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.710574811 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.712306212 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710323676 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712478105 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.710359824 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.713091004 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709341138 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.70929858 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712546606 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.709873021 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.710660917 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.713520386 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.710872657 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712555196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.709779912 seconds)
  done (took 52.984005683 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.71578854 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.720412959 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.712139546 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.713863445 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.71263916 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.712346096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.712378406 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.71447456 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.712450687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.712098087 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.713503573 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.713897629 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.71348227 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.71517093 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.713298476 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.712874578 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.71283011 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.713232459 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.712855343 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.715065996 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.712527998 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.71278295 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.712681813 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.712275763 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.71427372 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.713301768 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.712818195 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.712785977 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.713549198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.71356407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.713991063 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.71426924 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.713018249 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.71298981 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.713146213 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.713383004 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.718745198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.72072192 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.714223577 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.71368856 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.714922056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.713491455 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.715637895 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.713658619 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.714195516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.714852778 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.713773627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.714491669 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.71457219 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.714355923 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.714591235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.715299869 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.714401139 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.714602122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.715704699 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.715047319 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.714062865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.715632193 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.714847285 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.716181641 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.71530666 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.714884759 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.714391334 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.715706074 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.715983897 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.715383493 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.715237722 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.715509289 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.715944201 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.715619854 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.714884348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.716733986 seconds)
  done (took 125.078969213 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.715386316 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713627925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.713329807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.712732354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714045828 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.715687384 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.713304626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717420185 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713882831 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.716264163 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717161451 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714321451 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713621029 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716374247 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715486465 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715043079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.717004893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713762567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.716290387 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716972716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716011127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714784051 seconds)
  done (took 39.379672519 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716765944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.716849863 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.714119773 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717262457 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715350358 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.716458391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.717316859 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.717356205 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71682154 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713755554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71615278 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717670468 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713706744 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714889151 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714320848 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714853944 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718116501 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715222852 seconds)
  done (took 32.534410027 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.714677024 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.716114183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.717340065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.716292539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.715909706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.717849097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716330171 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.718557543 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.717575212 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.717495606 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.719013975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718821456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.71841816 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715910073 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720324507 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.716938157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.718829689 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716778688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720554879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.716400643 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.717077222 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719306676 seconds)
  done (took 39.435290143 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.718349654 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71985062 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.716408223 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.718099276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716807923 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.718983569 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.719094676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.716001113 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.718564115 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.719645219 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716419646 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.719077729 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.716669652 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.717229731 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.716008006 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717718142 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.719913123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.717067064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718885971 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.716777298 seconds)
  done (took 36.007342754 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721281256 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.719136608 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.71934662 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71961492 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.719016689 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.720512477 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720551277 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.721058226 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.719452222 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.720023162 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.720033071 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.719641871 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721382993 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.719325104 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.720164148 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720372337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719298807 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.721755517 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72057255 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720463602 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.720892229 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722000979 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.720023757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.722146575 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.72107445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720362071 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721485448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722316407 seconds)
  done (took 49.82431002 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723722626 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721342649 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.717920946 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.718853899 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.718470469 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.71875046 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.720308443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.718201686 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.721265943 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.71868168 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.721004614 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.722896542 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.72120942 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.722933218 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72215146 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.721888526 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721365561 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.71973775 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719267066 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719381635 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.722756805 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721964406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.722610845 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720768914 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718723643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.722795276 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719768627 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720206181 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72281453 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.7218267 seconds)
  done (took 53.276148532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.741138285 seconds)
    (2/2) benchmarking "in"...
    done (took 1.740323934 seconds)
  done (took 5.133635955 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.719905566 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723754844 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.722877305 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.720032287 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719793059 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.722726492 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724862472 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72066262 seconds)
  done (took 15.42773811 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.724292798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.722884834 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.722982779 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.723755308 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.722846026 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.725422818 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728966619 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.72320349 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.725131926 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.727586593 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.731016317 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.730995521 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.728606039 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.725965355 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.724329029 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728169736 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.723762993 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.723506511 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.724423795 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.725064822 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723075764 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727028157 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726301738 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.721129829 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.727837451 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.73421898 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.730454194 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.72458725 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.724871159 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.728282123 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.724816623 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.721451565 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.724705418 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.722993892 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.7244755 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.724320661 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73271093 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.725811642 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.731690031 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.724029589 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724891726 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.720931347 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.727808829 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.727288023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726900971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.724584099 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.724841573 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.722175781 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.726217423 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.728982963 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.728471053 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.726093852 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.722751952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730227311 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.727546102 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732539087 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.725357672 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.729495044 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.734473973 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.735798179 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.738681826 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.732983785 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.728843577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.726111981 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737000046 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.747452872 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.732403559 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.723925596 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.724450691 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.726422406 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.734024796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.740398783 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.736032667 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.725023535 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725730894 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.727406987 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.72809918 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727436408 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733772438 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.731054516 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.725573237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.726954442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738253158 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747442529 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.728266198 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.727441878 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.727264413 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.726291015 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.730464707 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737150551 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.726550278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.727162374 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.727653599 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.728699887 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.729608869 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.728018734 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.728075566 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730758635 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.724818795 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.728033151 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.726783444 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731482105 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.73687508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726770853 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727344845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.735680204 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.72757041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728994133 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.736019796 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.728445159 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726971257 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.730341127 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.734731948 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.725487993 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.732796657 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.736653946 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.728844323 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.730867343 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.72867626 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.728496767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.739358294 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.752676172 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.728838883 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.72889577 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.734396782 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.736816679 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729235769 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.732473335 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.729178778 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.727049302 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.725782846 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.732926755 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.729107735 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.731963895 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72929822 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73214186 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.727774918 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.72876075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.730391963 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.732969912 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.732524827 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.731954005 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.732128869 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.7338588 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.730877915 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.73395639 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.737436718 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.730867277 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.732358441 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.732880278 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.726927159 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730829402 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.733029892 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.730449621 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.731659992 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.730037263 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.731267246 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.729599298 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.731514977 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.730508837 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.731514342 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.732892502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734694754 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.7307807 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.73516207 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.73248618 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.728579456 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.730701671 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.730916625 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.732454768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.732559348 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.731874951 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.734933494 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.736650465 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.730841745 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.731627088 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.734791535 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730757056 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73112889 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73162609 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.736189213 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.739584014 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.732139019 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.739379925 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.732163663 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731833602 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.733916306 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.733440901 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.73375956 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732750271 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.736719892 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.739358895 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74589869 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742043425 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.735719315 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.736344262 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.735844706 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.735509002 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.738220232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.7320118 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.73434664 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733387857 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734662272 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733642357 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.735878385 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.732316499 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.733844504 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.732894924 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.732961505 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.733026103 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.732957707 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.736473434 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735682476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.730342203 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733127159 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734016083 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.736142512 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.730886334 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.734471846 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.734014687 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.734125438 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.733213453 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.741594939 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.731329186 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736928194 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73585639 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.736320293 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.734922879 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.734711306 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.737794133 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.735947951 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740992765 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.735401573 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.737415564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742453286 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.73674921 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.735689582 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.738903547 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.735288181 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.73275031 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.739326861 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.742147911 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.735286434 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.734230182 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.735435917 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737340022 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735333171 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.743289123 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.733075389 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.736215562 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.736336094 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.738479956 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.732536422 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.738411107 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.73801406 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.737255883 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738688506 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735147265 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.736250469 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.738022011 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.735216225 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.735985794 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.73516728 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.739570083 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.741870409 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.742571383 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.737938978 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.739272519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.739048715 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.739702364 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.737727589 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.736025442 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.738102025 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750019663 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.743065776 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.743586412 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.740721924 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.738877315 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742977184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.739036221 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.741445933 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737918117 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739186268 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.738189413 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.738671877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.734151234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740174206 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.737850922 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739650339 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.740443047 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.74076432 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.737809753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.739164482 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.73714963 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.737222467 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.737877735 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.738840024 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.737878172 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.741614168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741369031 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.738175973 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.740343488 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744716383 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739993362 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.741265907 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.740070328 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.739946823 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.740753026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.741181432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.738839791 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.742678997 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.744918274 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.743183348 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.747704878 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.741229119 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.748345108 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.739333834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.742901762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.744821732 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.736251252 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.739542084 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.740084604 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.738425185 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746840366 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.73906929 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.741937896 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.742595342 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.738747251 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.738593958 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.739092137 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.738782599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74003779 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.738936114 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748690402 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.741605457 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.744304854 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.743076266 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.737438797 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.739213209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.740054051 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.741110361 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744942513 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.739457933 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.742113295 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.740562424 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.741824898 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.740395758 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.740184289 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.740283341 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.737596093 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.741529387 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748690994 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.742521127 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744023902 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.741390321 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.749744858 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740067667 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748063072 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.739579645 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.743722841 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.740826798 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.742251415 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.745291968 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.743456865 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.743507326 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.741929294 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.74440934 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.7455999 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.741583904 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.746311335 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.744537852 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.741046344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.743145568 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752692865 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76185138 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.74378889 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745550212 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.739464089 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.745065382 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.74514135 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.741060394 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.74263832 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.746453743 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753337796 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748585759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.743927367 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.743326041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744877442 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741988052 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.742371271 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.742775736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.741787725 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.742470861 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.745057088 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.742450256 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.747176209 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.743166131 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.745229082 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745390244 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.746911555 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.752762967 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.742731402 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.744998134 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742899035 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.744186859 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.745491034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.74581339 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.743590264 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746558641 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744854455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.746441442 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.751479799 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.75067854 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.747522105 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.745202772 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.743291843 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.747053103 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.74672486 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743819182 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.743580709 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.743735839 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.745949568 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.743569297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.745324449 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.745719285 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.744904526 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.747422733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744327934 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748052683 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.754142111 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747037795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.742534148 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.745272156 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745511429 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.745868731 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.74757533 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.754160068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748536598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.754705439 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.753593944 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.747459434 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.746978287 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748980509 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.753026681 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.746086826 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.748352164 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.744952681 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.748470056 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.747882703 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.75040179 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74581602 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.753558518 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.748238935 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.747650282 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756230004 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.748875013 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745242757 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.749251592 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.750476577 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.748580884 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.74336693 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.747003033 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.746734397 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754235423 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.749495637 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746771278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.749372673 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.748805045 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.749109875 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749083211 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746710195 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.749218601 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.744477087 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.748971245 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74639654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.747657451 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.745335291 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.747882442 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.748664738 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.751320938 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.754110698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.745213449 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750649838 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.748566256 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.751030237 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747724138 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747488412 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.745570343 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.744717224 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.749381177 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747104279 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.750153878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.752368824 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.749186953 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.750423764 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.74882079 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747916604 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751797507 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.758100748 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.754453601 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.745291128 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.74910279 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.750761012 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.752950994 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748104486 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.747733267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750374516 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.752332469 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.74788442 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746811444 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.749366794 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.752327652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763666121 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.74912983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750117628 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.750317964 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754540089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.748643436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.747182921 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.750349774 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.751889546 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.752176317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.75429486 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.749720695 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756459179 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751153451 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.752047528 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.753223669 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.753546212 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.757993277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.753227415 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748817242 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.750492803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.755953686 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.765898808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.750715296 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762050333 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777403276 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.751529439 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.753245984 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.750392196 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751205375 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.750415934 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.753063121 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.749523272 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.751230248 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75048817 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.750159972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.753576486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.757362209 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.754052214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.751017053 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.750411465 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.75227004 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.753748799 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.74866873 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.749998729 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.750717159 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.750218129 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.75035708 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.751155935 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.752428918 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764596682 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.760385667 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.75236525 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.750962621 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.748713587 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.756785208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.755523098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761215247 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.758105518 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.750507479 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.751773864 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.754551863 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751767152 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.74873981 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.753522499 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.752790526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.753212063 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.750087473 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.765453099 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.759407381 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.757893243 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.754272055 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752306351 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.752550112 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754949212 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752716653 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752085039 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.755512855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.756137295 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755216855 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.751939788 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.752962147 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.757469461 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.75924725 seconds)
  done (took 1038.850593736 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750590614 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750258151 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.750957245 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.750814687 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750775644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751752388 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750274237 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751260271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.750694932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.751507732 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.751232146 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749910326 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751017498 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751964632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75085132 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.750059046 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751273983 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.751234709 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751194646 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750696788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752126135 seconds)
  done (took 38.453364161 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.75491207 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.751885572 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.752066463 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754021497 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751125848 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.754644352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.752237069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753782347 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.754655517 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752001522 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.754456251 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754679073 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.752328534 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.752046001 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751701996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75419398 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75534776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754189708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.754599834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.753177682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756020981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.752450457 seconds)
  done (took 40.260326264 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.754620588 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.754986669 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.75600028 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.752572666 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.755442637 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.752519093 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.755040012 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.75565573 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.756887815 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.758255002 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.756338344 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.758860506 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.76374163 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.760147119 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.758866223 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.755852646 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.900387873 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.7556416 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.755256306 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.755510699 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.754691385 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.762760484 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.753616719 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.753607354 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.757211187 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.755950327 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.756688257 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.756977898 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.756009074 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.759642068 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.759602425 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.75700107 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.757927738 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.759202822 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.758984309 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.759449518 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.760162734 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.756976241 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.754444324 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.757578288 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.7676931 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.774350054 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.756655286 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.765189077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.757716853 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.758512085 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.762434281 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.763044291 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.755230036 seconds)
  done (took 87.968725628 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.757409141 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.758208586 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.756068791 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.75840887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.758623054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.758400382 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.758065301 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.758323059 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.755936248 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.756179864 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.759060066 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.754934081 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755755464 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.758388666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.758559849 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.754420928 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754266798 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754476955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754066372 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.75528616 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.754627768 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.757268027 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.75809694 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.755595109 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.758614136 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.755931754 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755548628 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.758628448 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.755577107 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.755509314 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.759127307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75842342 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.758968103 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.756599925 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.752841105 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.758603606 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.759295114 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.756081928 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758981517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.756474836 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.759034144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.758694472 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.758961441 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.759889832 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75645849 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.756611545 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.757078444 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.756622034 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.756781534 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.759896522 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.758759588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.757378432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.760437756 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.757058099 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75962635 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.760512086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.757006682 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.756811954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.759502397 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.756998378 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.75671742 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.759704788 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.75739632 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.759744637 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.759425875 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.757577572 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.756973643 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760247403 seconds)
  done (took 121.197118427 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759184075 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.759876975 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760398728 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760166471 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759761105 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.760446328 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.760639029 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.761089387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760426769 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.760340499 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760437046 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.762449098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.7605658 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761187374 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760256593 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.761245304 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760034761 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761065512 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760646665 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760504405 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.760814489 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760635634 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760557315 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760529676 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761494418 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.761545892 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760421566 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761508973 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760806077 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761156784 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761658797 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.761475144 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.76055878 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.763172543 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.76235412 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.761394818 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760840004 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761448424 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.760883807 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761735347 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.762363086 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762066347 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.761919244 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.76158792 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76062601 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.761154939 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761949476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.76126948 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.763050433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761602619 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.762409577 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761469219 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761711692 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761716111 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.762676873 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.763400088 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761982351 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763231647 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76330956 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.763110878 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762955433 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.763220875 seconds)
  done (took 110.896179352 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763465395 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.763195174 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.761298101 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.760979615 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.763250891 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760838861 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.763548674 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.762944274 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762489473 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.762966581 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764008572 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760368807 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762173791 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764329774 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.761049607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762354673 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761157587 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761446844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764537791 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761353267 seconds)
  done (took 36.939821543 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.761373589 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763843734 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.761219413 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762147905 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.76465188 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761474917 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.764458638 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764558043 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76249897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764451754 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764183985 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.763767087 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761882184 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761704284 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764549813 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762527747 seconds)
  done (took 29.902777377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.762625111 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.764949611 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.764357582 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.764028598 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.76232358 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.762689054 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.765494311 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.76330529 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.7632998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.765766191 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.764815559 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.764949246 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.765939402 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.764476529 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.762736879 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.765699615 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.763339349 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.763043022 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.76621052 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.765992257 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.76382816 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.763996791 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.765795989 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.766242139 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.764804246 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.764718822 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.764064102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.763538367 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.763662145 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.766892741 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.764184991 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.764228161 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.764060509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.764210801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.7671943 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.763149789 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.766619216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.767016545 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.767186724 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.765905103 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.766532454 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.764045809 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.767364369 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.767394745 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.765043874 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.766374022 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.764537402 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.765475292 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.764139225 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764409733 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.767594355 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.766880939 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.767563838 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.767235808 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.76706136 seconds)
  done (took 98.775300524 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767686266 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.767602314 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.764527152 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766894359 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.768801623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.764569192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767896181 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.765657992 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765307516 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767921139 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767274329 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.767922033 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765404861 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.767857523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.76611036 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768430433 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765685911 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.765884933 seconds)
  done (took 33.497679462 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766696474 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766001452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.769578917 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765913249 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.76656748 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.769384834 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766037781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.769571946 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769470925 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766887019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76640797 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.769486104 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769263068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.770354864 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767125007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766380537 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.769284014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769084363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766368627 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766607779 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769694606 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768537589 seconds)
  done (took 40.593528013 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.770842035 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.769921788 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.786274172 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.787198374 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.792746505 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.798144626 seconds)
  done (took 12.403477805 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767698946 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77005966 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7679768 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771479801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770538744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767771116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76851383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768195042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770836381 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768042845 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768033825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771397619 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771264786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76878313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770739683 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77110668 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767633601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768511673 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768487673 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771793595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768380111 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770408766 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76883276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768782983 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769323791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768663533 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77108483 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768580134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769462315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772358858 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772151006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768416086 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771744184 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769640892 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772599143 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771779918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769997186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772843753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772930674 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769914504 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.773454119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772844503 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772610513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770408651 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773075405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770040877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769779476 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770079687 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770545374 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773027796 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772578224 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769846038 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772901053 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772378994 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773183517 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772696072 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77041281 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771419299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773200886 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770976021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771465824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772816899 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771448532 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771208731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774023127 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771167094 seconds)
  done (took 118.565248979 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771261574 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771781052 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771119507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771099843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772850688 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770698022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770717112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771401322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770815509 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771349926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773596205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771671751 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772208992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772539924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772495792 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77100521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771954139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772830417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772520956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775841242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77236476 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771834862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771779173 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771513814 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773672373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776491835 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772331603 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772450275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77259728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772725131 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77309116 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771757482 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772511805 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.773124588 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773303674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772188654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772455488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772463079 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772746445 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776611714 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773166052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775592235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774005462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772763178 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77373277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773139904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773378158 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773762728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773445944 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773251946 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773964982 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773012099 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77401058 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774104614 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773593198 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773284292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773418155 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77339658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773781867 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777287888 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773865165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774655229 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777049188 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773931375 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773513926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773432771 seconds)
  done (took 118.725568357 seconds)
done (took 2420.462427122 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.813094201 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.825033692 seconds)
  done (took 15.343635214 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.939871224 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.891871922 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.777207298 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.820924154 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.777326666 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.792577632 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.792427134 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.778171037 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.777284308 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.776520341 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.778536017 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.962156733 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.828955149 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.777756464 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.777236367 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.87051138 seconds)
  done (took 50.845639102 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.780553973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.781464712 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.790229964 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.783010399 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.780533674 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.793281707 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.811346672 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.784381892 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.815964487 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.79137834 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.853561265 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.790757398 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.78090791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.832816591 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.793002277 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.795334044 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.871027379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.856237277 seconds)
  done (took 34.19293217 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.857212243 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.789640404 seconds)
  done (took 10.361114735 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.798257816 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.784047778 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.782425485 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.794149883 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.810830072 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803403364 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.778421668 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.780456121 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.816731106 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.825222729 seconds)
  done (took 69.704254407 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.78756651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.78254244 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.782468407 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.780523435 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.774341596 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.778492384 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.781781192 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.77928473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.46700422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.817476144 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.788884331 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.789552375 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.78372358 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.785375257 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.780835415 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.808153053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.975021342 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.780000525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.779275799 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.789412467 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.78557413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.858537724 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79676387 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.782995173 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.813062739 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.467427289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.792592278 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.790310478 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.925666814 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.780022924 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.783540487 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.785405557 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.786678235 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.166516339 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.07223961 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.782622758 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.793221784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.792047537 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.780412267 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.895329209 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.784943374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.790644551 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.658455856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.059848773 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.899346159 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.82660277 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.149599328 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.788774916 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.785660943 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.814309937 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.788127791 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.787144652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.797985571 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.290256458 seconds)
  done (took 127.956671916 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.781574238 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.042297619 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937373074 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781033017 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068702217 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987775203 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.781886578 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829944231 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.781770962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.011123659 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001704517 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.890579965 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782235878 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.779441735 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782343419 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.779252594 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.941144281 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85438198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783093581 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.780196966 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811780553 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025031674 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.914288883 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.782962155 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.803322734 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992492096 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.91640987 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.888927898 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.223838914 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.779178298 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84656207 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782548371 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.784235547 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.780513932 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938763377 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.879340973 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870643931 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.782820315 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780893904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.779928892 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.454991054 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979969002 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.880060791 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.925047925 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.029072267 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986851075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.574392813 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.781300587 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.520537271 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943768795 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.016988461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.013030076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.907237731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.784657419 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.310204886 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.78092766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.780300387 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019631229 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014237655 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.884902359 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783863582 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.783391261 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.780855801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.027875651 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.784051115 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878529993 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785373665 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78171193 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879824937 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888252921 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.014344165 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996701236 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817699648 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.115995106 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.269582069 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032301464 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.852348121 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019165976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786268296 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.78248889 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868901763 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.738358055 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.984688074 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032506843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.0394017 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822493082 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.505635674 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.781991887 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.012628543 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.008045322 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.085912948 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023946334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.936819968 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.104712924 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.783215364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.783151313 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.042587745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922874124 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.786056027 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.145560944 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019457506 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.350801324 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.815199136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127782498 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91967484 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786549059 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.427197017 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.784783428 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012359039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827809029 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.785177643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785129444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.006359757 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.860217795 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78466594 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.427965191 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.849317644 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789017012 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020394898 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.787546944 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050822703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787668309 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024202722 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.791945502 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819453713 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.01579516 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026065903 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.787920538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.032387757 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038734614 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.905248695 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.007410916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.423330004 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788081926 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077438225 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.787829124 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.786129101 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.958773685 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786806926 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933467251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.788550771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122485564 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81192872 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941486091 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788859107 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.044433499 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.823204957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839764898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.788178695 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919947895 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787104736 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685417176 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941879129 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788812162 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.785777789 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.515579922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.787294167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945086059 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020195841 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814258269 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862682098 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.463248314 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.787047277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875765529 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.816507199 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.13180318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.786813724 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.002382433 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.790525396 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.333372262 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.788098011 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.028879537 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.971694509 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789903008 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.787820532 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.692882695 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.786093703 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.78680336 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.95139205 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.189025147 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788523046 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993074825 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792729526 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929896462 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.790188468 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.866448814 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142561028 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.787494545 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.787647927 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.787917792 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.789239446 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.788889464 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053714536 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.820517751 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.310949536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.928967762 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061278384 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.108947189 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.039841541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.83656795 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793222147 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039369488 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.791265761 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.85501793 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.790890547 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.813376513 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027043208 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792950963 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002267331 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071349262 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.712692789 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840233266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.792517508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790623156 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.749113094 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947505071 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883014672 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.792823978 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.789231032 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.91583459 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92334043 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0068025 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.791111439 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.125768783 seconds)
  done (took 885.526675577 seconds)
done (took 1195.637186523 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.790709434 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789953692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.786822739 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79358598 seconds)
  done (took 28.884714681 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.79815961 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.797626242 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.7957496 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.797875833 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.796901852 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.797106791 seconds)
  done (took 12.507710949 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.858435627 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.792302969 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79486617 seconds)
  done (took 21.170190301 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.866114197 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.208450331 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.908254052 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.240846496 seconds)
  done (took 9.948019026 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.797126544 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.796409419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.795877203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.797597983 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.798800377 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.799799079 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.796651381 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.796794998 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.799729763 seconds)
  done (took 17.903716474 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.129802256 seconds)
done (took 96.267733138 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.688669045 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.795298852 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.981804196 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.919870114 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.854242687 seconds)
    (6/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.930633916 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.92942457 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.123673861 seconds)
    (9/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.343528926 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.924369453 seconds)
    (11/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.937706897 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.897833499 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.259705833 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.079870219 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.834612641 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.912151536 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.975754157 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.820442376 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.265782712 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.823604428 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.800338904 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.792126218 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.787636214 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.795989691 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.307099559 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.893245094 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.086297698 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.854465149 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.810005353 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.084885907 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.788176771 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.847464001 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.862271937 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.798459049 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.909767539 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.974852751 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.10497068 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42938859 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.796245598 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.284314248 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.795166292 seconds)
    (42/309) benchmarking ("sort", Float64, false)...
    done (took 5.547818606 seconds)
    (43/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.361835553 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.906556806 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.833153183 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.049446667 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.570342608 seconds)
    (48/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315116256 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801246982 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935506563 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01164389 seconds)
    (52/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.797337281 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.213018602 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.507654962 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.967121095 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.790379394 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.399086714 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.156338448 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.873603125 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.982273777 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.836547078 seconds)
    (62/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.348354842 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.349299003 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144936185 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.434421295 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.136966465 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.897445527 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.273744362 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.018173815 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.801414377 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.234399293 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.812733847 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.902868403 seconds)
    (74/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.112545387 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.466871589 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.141982791 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.916872906 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.13498102 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.824812574 seconds)
    (80/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.942669304 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.988735064 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.188171235 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.902188063 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.000249773 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.902928025 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.969448756 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.912734728 seconds)
    (88/309) benchmarking ("sort", BigInt, false)...
    done (took 6.797116473 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.040314754 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.798709682 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.673082144 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.219766413 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.62654108 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.219224302 seconds)
    (95/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.314875886 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.799617872 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.296384899 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.207483616 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.790625811 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.841469846 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.910823723 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.912001659 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.87831868 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.876557319 seconds)
    (105/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.883626893 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.266495809 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.365370895 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.12527821 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.181433233 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.231948883 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.944758858 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.489281953 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.683062108 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.80614306 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.8817786 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.909238323 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.802034545 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.799009209 seconds)
    (119/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.919351441 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.99822861 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.799967295 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.906394977 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.054924039 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.378000499 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.963194215 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.962428728 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.79176635 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.291534493 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.110214333 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.823127445 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.92937022 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.06948325 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138612236 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.80298491 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.82503656 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.800791604 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.043764322 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.414098837 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.019467053 seconds)
    (140/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.824297259 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.047943247 seconds)
    (142/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.88492284 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.791763992 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.993386084 seconds)
    (145/309) benchmarking ("sort", Float32, false)...
    done (took 5.51912511 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.983469016 seconds)
    (147/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.88663223 seconds)
    (148/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.814181478 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.824198603 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.43604411 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.484481138 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.03216428 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.803088147 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901259045 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.15584475 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.099426571 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.015638332 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.865668544 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.167361554 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.182802383 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.192999852 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.795774459 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.471975252 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.825888379 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.801150579 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.024416407 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.320074836 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.143126325 seconds)
    (169/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.904974086 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.332856315 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.029587935 seconds)
    (172/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.127832355 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.90654374 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.91703096 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.887217705 seconds)
    (176/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.882405782 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.793633861 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.841456772 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.872570716 seconds)
    (180/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.968322514 seconds)
    (181/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374763396 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.819038466 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.999123099 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.434800151 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.617998056 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.809502486 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.222079059 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.826801665 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.826955526 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.02448153 seconds)
    (191/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.9030451 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.834725731 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.111176351 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.931116773 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.804985141 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.7831561 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.893543289 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.78845071 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.642291625 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.817180244 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.864033368 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.709512351 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.875817955 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.708855796 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.214138129 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.010247544 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.640457017 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.983899445 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.030895308 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.093828502 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.448775543 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.217006567 seconds)
    (213/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.796579018 seconds)
    (214/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990865053 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.833345348 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.91004573 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000402344 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.80896821 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.551549771 seconds)
    (220/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100784903 seconds)
    (221/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.823968124 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.205753733 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.942712011 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.891168886 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.796628442 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.893921662 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.846809364 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.869322334 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.80556593 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.365692127 seconds)
    (231/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.951579295 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.746415368 seconds)
    (233/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.153875574 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.502039304 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.103276922 seconds)
    (236/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.824258615 seconds)
    (237/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.907661591 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.815444173 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.831135814 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.020492133 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.12540036 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.808331335 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.069731903 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285051582 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.112363127 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.891527319 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.797348073 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.962784918 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.893714981 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.968890228 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.138435679 seconds)
    (252/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.801295981 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.599560566 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185194794 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.897310374 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.798905256 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.894156798 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.268676546 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.83148606 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.800610874 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.837536391 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.831344872 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.806840039 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.153386203 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.859871852 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.895645544 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.16982217 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958227588 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.881943494 seconds)
    (270/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.959188675 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 4.78043766 seconds)
    (272/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.989832153 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029123376 seconds)
    (274/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.118159601 seconds)
    (275/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.817177719 seconds)
    (276/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.832980026 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.500721176 seconds)
    (278/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.888672005 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.761971693 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.086084779 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.890175185 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.88842306 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.811076679 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.938242284 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.911174302 seconds)
    (286/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.808744919 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.563756723 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.807909842 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.836895055 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.83963867 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.720755417 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.192815197 seconds)
    (293/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.010996901 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.500554075 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.201058966 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.010655165 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.80945968 seconds)
    (298/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.834562111 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.208794687 seconds)
    (300/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.938857323 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.886263635 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.036821281 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.213574349 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.198932457 seconds)
    (305/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.503004587 seconds)
    (306/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.931412515 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.158247526 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.803963616 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.164633566 seconds)
  done (took 998.304847341 seconds)
done (took 1000.090575194 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.846774713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833819292 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.821262196 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.842331194 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.930238515 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.846044547 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.832431457 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824338802 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.869116781 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.87138478 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.817970625 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.844738726 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.822285719 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.820174293 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821878748 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834174816 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.127080798 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.847946266 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.836909594 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.831899493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.836778858 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.817798948 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.872884193 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.845229075 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.82698409 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.824634641 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.823148452 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.840081728 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.931798477 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.824439503 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.824893023 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.831488042 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.127739877 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.848461831 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.817977464 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.839922898 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.831892561 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.83186076 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.827065708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.851705004 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.271309571 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825313324 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.822926818 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.824498113 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.825189446 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.828002334 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.82285172 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.831060297 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834754527 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83383318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.264238984 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.842291835 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.82378991 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.825284989 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.834659526 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.821452112 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.831777334 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837244843 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.841383717 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836489859 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.118143589 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.855645868 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.827198357 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.838620858 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.829177707 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.300715483 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.826650897 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829430516 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.269487506 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.835796645 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.302882876 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.836817769 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.827468857 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.836303461 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.854227836 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.128778143 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.847901192 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.825551427 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.830407437 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.820565223 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.835368145 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836015021 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.831583721 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.826871629 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837634822 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.850083225 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836152425 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.824447567 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.834193043 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.842150081 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.830155317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.833908727 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830257861 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.821675358 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.836210177 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.833438746 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.826217981 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.826566271 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.832070582 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.837148425 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.26852127 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846158544 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.823551199 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.8239417 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.826267132 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.836966791 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.266593511 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831163717 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.849452006 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87410029 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.830111253 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.119087119 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.854630195 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84011924 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.835874079 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.83138014 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.823728246 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.120831393 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296184511 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.84553982 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.830425475 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.823359433 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842200109 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.830853577 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.825120495 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.131713076 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.857682688 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839893965 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.947240615 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.839035408 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.857231013 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.824417839 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831639554 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.85377626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.841914531 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.857911088 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.833749272 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.841949581 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.841605141 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.825828027 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.836606631 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.839159324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.831287426 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.835439336 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823060202 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.854421699 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839047163 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838605232 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.850686993 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.947706209 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827724645 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.122731129 seconds)
done (took 287.003192705 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.897367845 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.820297455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.928571687 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.823557235 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.907028428 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.912071144 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.820354705 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.820486779 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.82124097 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.198916377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.822136105 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.822587238 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.820043393 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.821268357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.909279433 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.824518374 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.821549846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.164130808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.824404093 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.898716735 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.82163062 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.821439207 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.823279833 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.201558521 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.822667508 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.820525871 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.899504632 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.824246267 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.164049156 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.82434903 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.823239729 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.165456625 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.918499174 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.842810712 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.834723563 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.831386137 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.910928645 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.828718726 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.909610739 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.909648884 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.927444914 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.865123469 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.825709512 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.81989326 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.828334914 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.826425773 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.822463672 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.853257208 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.826466758 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.823388724 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.163511192 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.836372521 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.834079042 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.82347707 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.822708959 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.846848285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.824169582 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.826614124 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.919518614 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.826107043 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.892285055 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.200166853 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.202964294 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.82717403 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.826777365 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.823283686 seconds)
  done (took 181.342707102 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.894391961 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.898985898 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.893019099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.831915693 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.879175394 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.89589015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.831376795 seconds)
  done (took 14.876906845 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.834053726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826165043 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882859646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882006557 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.825069595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.994174909 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826361337 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.839775634 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.823840546 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.88179309 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.827005003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82700236 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.83341502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.829360872 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882442185 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.839982389 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.943440986 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.83019647 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.826876117 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.979712035 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825708536 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.835285087 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.884299923 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.841723282 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.828226083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.835878698 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.455978191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827384661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825238597 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.828184861 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.824682968 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.87156346 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.827905072 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.821877009 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825264085 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.964283465 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.82686829 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825310975 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.828380474 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.830940875 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.828053848 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.827916165 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.828231064 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.825322327 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.828531716 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.855184962 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.828680639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.829253919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.828237233 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829487311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.881008246 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829328246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.826641038 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.828057592 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.886829229 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835935312 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.828764668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.826437116 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.829671054 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82701508 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.981647546 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886854525 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.828654245 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887412202 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.829512277 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.831160966 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.830818659 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.829141347 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925756382 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.829293591 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.883991635 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.826336971 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.990145063 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.85649204 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.831287685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.835051969 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.83572603 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.829623592 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.830365101 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.839024993 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.82820682 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.833912173 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.837555943 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828242026 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.827883597 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.964866521 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940615656 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.827465125 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.845736035 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.840177375 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.828636245 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.88735997 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.829595133 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.828723496 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.897684346 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.948520244 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.889560411 seconds)
  done (took 202.036993831 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.837321175 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.841103124 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.834059255 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.849347807 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.833288222 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.833351306 seconds)
  done (took 12.785766734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.835424862 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.831651124 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.831072698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.832727603 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.831932906 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.831149539 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.831121775 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83549653 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.834298151 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.831685309 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.832272253 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.831993383 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.832002653 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.831856511 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.831505066 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.830525858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.832772498 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829456408 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.833021357 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832293747 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993108623 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.831977813 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832346681 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.834417132 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.837277332 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.83156556 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843712817 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.831884634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.833130163 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.843117844 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.836195948 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.83346579 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.835563466 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.841122778 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.835507663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.836166325 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836444588 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.833239351 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830051948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.833597351 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.833287778 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832739397 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.833577521 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.833718624 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.837874314 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839347229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.837231034 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.842806117 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.833337761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.835082092 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.834824864 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.832457875 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.834458728 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.835406103 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.83762852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841267227 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.837798908 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.834371841 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.833292575 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.836147415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.83475409 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.835155234 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.838539008 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.838017936 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.832397106 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.835215254 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.837754238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.837425948 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836121622 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.835665345 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.837480701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.831893253 seconds)
  done (took 135.016576362 seconds)
done (took 547.825800907 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.892648042 seconds)
  done (took 8.652492633 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.850954758 seconds)
  done (took 8.693286144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.449967501 seconds)
  done (took 10.210915639 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.842879277 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.881548548 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.835463942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.840016889 seconds)
  done (took 29.171762688 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.208231101 seconds)
  done (took 8.96953339 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.842135698 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.827503157 seconds)
  done (took 15.495370107 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.894277986 seconds)
  done (took 8.656771383 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.925912157 seconds)
  done (took 8.692786105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.83488208 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.829032117 seconds)
  done (took 15.440384578 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.824225662 seconds)
  done (took 8.587351865 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.464158656 seconds)
  done (took 11.231375861 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832873754 seconds)
  done (took 8.608694462 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.834086759 seconds)
  done (took 8.596993307 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.966446345 seconds)
  done (took 9.728285507 seconds)
done (took 162.498050476 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.834043247 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.832321367 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.836132702 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.830376888 seconds)
  done (took 29.095800695 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.869563045 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.870002008 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.87149358 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.881197128 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.87355083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.871960714 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.862993742 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.862310771 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.881059316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.874411605 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.872841237 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.873479049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.871107744 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.862998427 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872769589 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.87138398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.880867475 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.873721627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.863827441 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.874336383 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.83725676 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88062382 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.873189619 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.83804176 seconds)
  done (took 46.628628404 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.036973448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.910746152 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.994364249 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.892688286 seconds)
  done (took 9.598109585 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.889232753 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.891257599 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.901825797 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.942431648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.966903576 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.901614789 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.864090913 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.858984546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.845700026 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.890941743 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.967235871 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.88521261 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.9842087 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.838911241 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.024452279 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.838350784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83779452 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.891092089 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.942038887 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.959373215 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.839017442 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.889529215 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.89298912 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.886097955 seconds)
  done (took 47.393528406 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.836689674 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.845572592 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.843063508 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.838084622 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.837867132 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.83814227 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.845179988 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.839922571 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.858925862 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.839751573 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.837102237 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.838575247 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.837308949 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.839590238 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.83779342 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.851686265 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.852777264 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.839171146 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.842748414 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.845218209 seconds)
  done (took 38.610688285 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.834679866 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.689114601 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.187461055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.090368272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.834238256 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.834405966 seconds)
  done (took 31.236735766 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.853086638 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.846799707 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.841444094 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.898149361 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.980242826 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.849348975 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.841894267 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.850999909 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.887354438 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907508335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.861146324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.869145548 seconds)
  done (took 24.252673186 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.837530431 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.837363807 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.840284239 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.856272807 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852731006 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.85004968 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.849688804 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.835639608 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.856954031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.860999731 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.850826738 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.85557904 seconds)
  done (took 43.953841132 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925612427 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724502011 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.861668631 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580606789 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308655119 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047904826 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348141654 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170882731 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.839482312 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109034381 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.820920177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942956267 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090022239 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835254835 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853899857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.315368018 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123743281 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065698065 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862200988 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573163902 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883540577 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389696996 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.637603648 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888548718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04782754 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.969108336 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.096784419 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.800118979 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969161637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872296617 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847162964 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838287633 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11041984 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208295064 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942191321 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847626845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.492205155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.553088911 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.834879407 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.606847603 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572458819 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.948156871 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845524441 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837901981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771899465 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345263965 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21665674 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.842857523 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.549808222 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.837859696 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85016674 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928213216 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.842881706 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.654123006 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793216532 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.119227534 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.835079987 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846001509 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407469187 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908866257 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370568783 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.81348508 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.032427541 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.588486984 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230630343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.982389285 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.843386866 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842435136 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772922648 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.576908742 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887841219 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985830488 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.859202775 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489278195 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143786651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.907707625 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781966743 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126296203 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.092011653 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.814629633 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068427802 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.79743121 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774287608 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.700202722 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773548696 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102510774 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87730375 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.490545947 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880988345 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172490138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851631633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857930701 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846716826 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.063933021 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.730245268 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840415805 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.603162515 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991714072 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86215225 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172762544 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774654913 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.84486148 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095895 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.052735252 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.091720323 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.358864316 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989215869 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841030477 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.919963579 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.776089446 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892525345 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.109291542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897188929 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913660427 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897631209 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.794683437 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137285667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869415874 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.00523057 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.854891464 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968064399 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.17753559 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136329497 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906217848 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841778858 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841158811 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659464559 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392642016 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.108477182 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.852284857 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355933576 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890363337 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.842498104 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778444697 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.448905238 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842415569 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.813418926 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067630131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.823545845 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156603103 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777419822 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988050714 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.956555547 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.064843544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48218208 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.906953975 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099755935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344547921 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.127390116 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893162109 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8618885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961058064 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865054627 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.299634792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136140543 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.846377135 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.847721081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.62894018 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.844072616 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844201179 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.848983993 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.64537419 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123039219 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864636516 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847192174 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.733944579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.858121178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911799689 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850552068 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853839062 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.3930797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601806995 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.856062012 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.474302307 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074310855 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854966629 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.585200389 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956401726 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.927099032 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122918164 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901805245 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.779664429 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.556066892 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.538137077 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845687388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780624883 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.846717582 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856831988 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857928579 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.227527275 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119286627 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888756226 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.677244352 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.887120294 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858744333 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.852417056 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847268436 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395124958 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928019872 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391040293 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89347213 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984536971 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.860520474 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781558155 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850765401 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852492556 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.84614203 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.814410799 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900296036 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.586514675 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220368567 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104366372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.540249258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864909438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.616299348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.902505173 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.866688593 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621953905 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812265541 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.879900213 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874812836 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.85975764 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.630564235 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543159608 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415915957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158643008 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15985195 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280645729 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.359360027 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152010038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183341357 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083973362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378204163 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908065685 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188651802 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793555831 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932191481 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.488427107 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18953904 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863296302 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076742702 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228426301 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.550787571 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009192843 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059681062 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883749201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.791067015 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811842074 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.063982041 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990462612 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.568214276 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041939925 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180628453 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.498666096 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.931289121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.85087276 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.528326179 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936296896 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.567739435 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211014249 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406632055 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.764217661 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309399152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854258661 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.296201421 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197725514 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.190238187 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.972120728 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786715399 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861253423 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861781324 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.860046453 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.848715001 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.719740535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.106768087 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861797142 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087123185 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.138873778 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142262608 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.752442553 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.8562353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851020122 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145916355 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.656188524 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016411279 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.32138752 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.379860712 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858632335 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7857596 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786652423 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.543576284 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860189201 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.828026563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08285249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.041533048 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807170145 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393905995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095941916 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106155782 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.865753434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123200498 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122780036 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608718855 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880678875 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.952124654 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.501152483 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.959525506 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120758735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089648885 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654559213 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082781627 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882177661 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.67731585 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854335165 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067765137 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.122791589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.747018704 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075706757 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.575717339 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.866539126 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178082003 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910487689 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.712043466 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99466786 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.04917266 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865616268 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938239833 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863316544 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.864984602 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.864661447 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900450518 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721509563 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.968217427 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.867746582 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942585279 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929066444 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.38615321 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863716245 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130720686 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214194203 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180544792 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910080299 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854854649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855092536 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788829992 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99030017 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.301405966 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129124756 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.984620864 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.157017244 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88023429 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.519855566 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.244260831 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098640218 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130628329 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.752203888 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854728415 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.880678464 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.122460669 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866159197 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.066301513 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090830916 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178900585 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327494532 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.115778543 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223435972 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129968019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225046861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856470411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445245204 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.862625537 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549580496 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.897284498 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737181228 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112764945 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868116411 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233027771 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878805707 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.053996199 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.373130005 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682654602 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143534585 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841566141 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910805332 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131855447 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245364968 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168108644 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92938118 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868510659 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.561102267 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995813781 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.723330507 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.130411219 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859397399 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070360566 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.567600721 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866963837 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131485063 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162479098 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.855642729 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.735169369 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867839125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.869325267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083169994 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123975464 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111586082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868878709 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867624117 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.677929386 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12980155 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913067292 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79233621 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.863072095 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957025588 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10704773 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879114116 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.376216985 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.570670682 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155827918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.779393745 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880582922 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381163702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220716599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179045177 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400147726 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088629999 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.420165478 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.850512641 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16157816 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.864804275 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371964613 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16520097 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.864236411 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.484492398 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900761822 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.129535641 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17565769 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.876536632 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619128879 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.83053294 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08384083 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459263043 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802007117 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860687116 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.930283329 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861322775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989548777 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871757575 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.744222527 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822681385 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.608567115 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353665541 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.865531272 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.855436642 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.562153694 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.494443317 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898074972 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004357756 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868789823 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.585695794 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.153916546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115974377 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49865285 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.878716221 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.865908843 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861705167 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790371528 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057705818 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.244471687 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159787488 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.335717523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.900035124 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865721419 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.077653813 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074565778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.714698043 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990133687 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367274056 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901577738 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.621704456 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.541961699 seconds)
  done (took 1674.961772255 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864328309 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.880320219 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.874165966 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.920495506 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92627624 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936163301 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.909145648 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964736643 seconds)
  done (took 57.069877567 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.863605995 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.065267604 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.87485795 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.868932153 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.874551172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.865512348 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.035343184 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.874878021 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.875278933 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.874561113 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.865977533 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.865807643 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185768994 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.889015331 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.866256607 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.861605072 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.873741726 seconds)
  done (took 74.310115983 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.867607173 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.098528265 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.901441042 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.875691751 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.839612381 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.873260819 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.914049329 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.890018433 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.872345326 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.085059516 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.49977633 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.869558236 seconds)
  done (took 90.38359383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.877820293 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.873108789 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.873693841 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.873822002 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.873566697 seconds)
  done (took 11.172260052 seconds)
done (took 2180.457172569 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.205676749 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09902663 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099112341 seconds)
  done (took 5.993785596 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.015613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.06348561 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.181893156 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.201732956 seconds)
  done (took 10.261731949 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.174004444 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.239193622 seconds)
  done (took 6.208330542 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.282767655 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.866698232 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.25955527 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.866715312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.868806033 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.867635238 seconds)
  done (took 22.403830756 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.868798444 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.870699629 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.868251693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.871271706 seconds)
  done (took 9.275586519 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.858255487 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.55602839 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.861892515 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.875654202 seconds)
  done (took 20.948515412 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.617786792 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.268023262 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.611895366 seconds)
  done (took 9.294642292 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.285015957 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.752861401 seconds)
  done (took 8.834872934 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.133788876 seconds)
  done (took 3.931022649 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.896644212 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.140322964 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.389511838 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.380683738 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.473231282 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.719985206 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.193776235 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.122600403 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.28037843 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.308054015 seconds)
  done (took 24.70321123 seconds)
done (took 137.267341628 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.261328256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.244819507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.031384191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.2309324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.11900107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.030397712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.20962144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.212173098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.728651098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.721957684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.269682364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.11861413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.959012998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.234884875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963771694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.110041326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.115547748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.28557089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.963978442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.123813833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.212445692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.857127664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.111475352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.873436617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.126958727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.043571393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.434111571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.114216019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.117810105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.444948623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.046235195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.275599773 seconds)
  done (took 171.392287865 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.620254622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870611024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.86897797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.871293164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.117336782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.871243188 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.871168389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87152464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.025239011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.005792833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872211631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.105416007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87568444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870687902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.877923111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872353078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.184517255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.713090727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885669573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888186205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890426842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.027827012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.887299303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.059618099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.171438041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.888895282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.866194501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888337973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876947906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.850822357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.879782996 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87321262 seconds)
  done (took 207.102050584 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.872201941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873214879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873581679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873434472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.873429991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873045286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875822937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.872784621 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.56130426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555894914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.879420698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.87878434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.878374652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.873017051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.877135107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872840152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.878507367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.879057922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.879295853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.879194762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.880803185 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.58922926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.878423343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.606503995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.879198441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880417239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874131815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.882064432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.886144721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.886638099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.885887515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874639299 seconds)
  done (took 220.697182311 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.074334299 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.878050309 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.878819694 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.816421894 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.879673185 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.879384847 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.819677794 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.075815944 seconds)
  done (took 19.126049605 seconds)
done (took 620.128725913 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.337631418 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.184979472 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.062266679 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.903160564 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.144310651 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.941377931 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.899243179 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.962202324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.62404026 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.966194317 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534029205 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.918502035 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.632952468 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.922997642 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.020887052 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.956426084 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.442684946 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.527287735 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.077600964 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.968466355 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.088321519 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.850522969 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.975179962 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.648335047 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.647762529 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.898462583 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.077787001 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.446849271 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.909355008 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.060092355 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.650693946 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.284864839 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.912072159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.898223907 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953513001 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.932240014 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.23189763 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.911301379 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.029476865 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.663355873 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.955986759 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.512994337 seconds)
  done (took 103.370595251 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.877972588 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.876836095 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.875575248 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.877043102 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.879097069 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.87732437 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.876020552 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.876442116 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.877719599 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.877039659 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.876287728 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.879262117 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.877146581 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.878753283 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877432045 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.877772606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.878649018 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.880126724 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.877096176 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.876888546 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.878095731 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.87789608 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.880980197 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.877220359 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.878213961 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.878379504 seconds)
  done (took 50.63661931 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.882461798 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.033676046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.135257683 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.90212419 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.883780599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.887089091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.902017415 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.88718709 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.887874311 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.886535349 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.9755478 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.888800628 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903355938 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.135774135 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.89951004 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.882042213 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.882968749 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.88455229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.037986019 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899768233 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.90372154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.887518358 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.903452447 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.899636801 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.886310198 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.885406749 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.88940095 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361614066 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.89341187 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.978148461 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.929478621 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.908841536 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.335835375 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148613898 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.938271679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.894541058 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.884538631 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981728854 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.891975809 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.887068488 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.904802483 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.891585993 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.137053206 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.374214649 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.898314537 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.884789178 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.37043034 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.988709524 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.927677093 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897451485 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141268864 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.902141298 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.885639066 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.887166872 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.924081992 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.896783585 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.887023781 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.237251591 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.898367265 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.904787631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.889899558 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.887358652 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.046535918 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.896055181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.034346012 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.895289519 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.893522125 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.887904489 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.139141271 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902387187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382126161 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.899984779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.886157487 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.979734759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.039170568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398000331 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.899647048 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051099238 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.351602143 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.910690918 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.895383626 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.354047946 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.915479499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895163165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.889710229 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.88788638 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.887818361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.931097566 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904374886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.31717812 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.38218807 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.248848517 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.913971993 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.905061333 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.889745214 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.235280073 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.893826683 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.88792713 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.134205704 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.389582893 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.901476926 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.898125801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.368651569 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.902143515 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.907792933 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.897396516 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.145042353 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.903914334 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.931791473 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.888271032 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.896589037 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.892099291 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.907817776 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.896534647 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.888248358 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.355241986 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.998191253 seconds)
  done (took 234.227383593 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.884083566 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.884472871 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.884760931 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.884295671 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.882190508 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.891172093 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.883149623 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.884657666 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.889704907 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.883381119 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.883942899 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.88427725 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.885450748 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.891540005 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.347245703 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.893625608 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.542473691 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.886645015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.887001411 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.886178757 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.567470546 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.894077003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.887840649 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.887279435 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.888023905 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.889862122 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.888091337 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.923540169 seconds)
  done (took 168.482583742 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.89249925 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.07504217 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.90823439 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.930169632 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.9030118 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.889326293 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.920720756 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.91712493 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.899321069 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.889607064 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.89109336 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.956304232 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.908206778 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.030049352 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.926048664 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.923726752 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003052047 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.903419145 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.890624068 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.890229318 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92356457 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895962636 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.951791084 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026670413 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.910951116 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.01396814 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.906421735 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.893753236 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.894745129 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013667571 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.90817618 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.953748518 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.927334046 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.913428819 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.016607425 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.014007464 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.001715071 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927509061 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.90068934 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.891798567 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.891519476 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.890805342 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012900815 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.912229154 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.896158068 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.012153678 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.914791328 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.894738944 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.903977132 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.891290727 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.909192717 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.913487172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.963519662 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031362819 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.927365771 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.918718433 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.920453456 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.180099327 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.90460548 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.996540268 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.897351703 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.012714489 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.914192316 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.890809188 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.894395984 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.899716518 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.92303213 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.92501479 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.004537457 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907098683 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997909186 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.929351761 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.901591532 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.894329244 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.896018998 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.01484762 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015972783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.933057426 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.933679787 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928547564 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898882258 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.897494692 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893534731 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.914893661 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.899036382 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.014041526 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016264433 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.903468415 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.896302311 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.897327018 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.897147833 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.923471441 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.022471753 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.932983088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003204671 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.969628632 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.976372908 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.911904067 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.910174956 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.900583198 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.96208928 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.914498668 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.907563207 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.226983305 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975581248 seconds)
  done (took 205.521161538 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.362046179 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.950139718 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.95488186 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.215632384 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.326946972 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.780161921 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946760042 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.945688477 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.970324809 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.137083809 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.020733523 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.961986966 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.933961804 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.920898603 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.946159474 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969486073 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.956648589 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.285662184 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.066956554 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.058953507 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9285698 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243048928 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267586578 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.362778066 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.982648491 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.303774341 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.62189926 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.200190326 seconds)
  done (took 62.448973509 seconds)
done (took 826.490643699 seconds)
SAVING RESULT...
DONE!
