cset: moving following pidspec: 15918
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382121662 seconds)
loading group "string"... done (took 0.567167511 seconds)
loading group "linalg"... done (took 7.194495713 seconds)
loading group "parallel"... done (took 0.153978631 seconds)
loading group "find"... done (took 1.142233592 seconds)
loading group "tuple"... done (took 1.779590562 seconds)
loading group "dates"... done (took 1.304724609 seconds)
loading group "micro"... done (took 0.219565532 seconds)
loading group "io"... done (took 0.946435334 seconds)
loading group "scalar"... done (took 37.405067674 seconds)
loading group "sparse"... done (took 11.862729677 seconds)
loading group "broadcast"... done (took 0.936264029 seconds)
loading group "union"... done (took 12.207891363 seconds)
loading group "simd"... done (took 4.422114077 seconds)
loading group "random"... done (took 9.041782005 seconds)
loading group "problem"... done (took 1.844191807 seconds)
loading group "array"... done (took 20.810310622 seconds)
loading group "misc"... done (took 1.679267058 seconds)
loading group "sort"... done (took 3.332383209 seconds)
loading group "collection"... done (took 17.229757362 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.509933647 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123675565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11724925 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118231867 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146129548 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111957779 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122263637 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083956163 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.780334651 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150121327 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115915009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424914516 seconds)
done (took 5.096810136 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173648838 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082274958 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081811795 seconds)
  done (took 1.281056806 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064694165 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121689367 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06581049 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066160809 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066571888 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065266197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065198615 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065131056 seconds)
  done (took 1.634829175 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072678747 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067785924 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065628994 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066976127 seconds)
  done (took 1.391889829 seconds)
done (took 5.672298292 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.784948693 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200911176 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185291043 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408643648 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129543639 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157017326 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64128937 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311284431 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186902315 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079172703 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10807478 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.325724662 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108242856 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641800996 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076588568 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089341548 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.134878846 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432828459 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066341006 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081157207 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087814777 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126995121 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086140189 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073439083 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146430678 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066733122 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13476776 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080065637 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065463187 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210559958 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171150055 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66363817 seconds)
  done (took 10.22071286 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094965163 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094847471 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06712493 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123836294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095903938 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068482235 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07000627 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066264647 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085607256 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127229025 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086758979 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100542979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064387285 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067529809 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08353071 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203114182 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08204229 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081862531 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069673514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074303078 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103597038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077514195 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075653508 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075943653 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128208614 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179597764 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097475177 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095956511 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06524459 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077862039 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113384411 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12521942 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064592988 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065106377 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122207768 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093856551 seconds)
  done (took 4.524023713 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.997753093 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141723575 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089457968 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133063144 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063553178 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108366364 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064598743 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079892366 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207295174 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368824318 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.58631574 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110448481 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102270109 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066736228 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067135904 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065856476 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.474083348 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094713853 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106535402 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081739542 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069420601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067672153 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365831293 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06710943 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063421747 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068330496 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056532685 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124697483 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067661533 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.93970208 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125025487 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065503513 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099205582 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160329763 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088294233 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139466768 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066474539 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084593262 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063415708 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152244467 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06992571 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065079097 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083606188 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102123884 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112723417 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064953907 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065635353 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16052732 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063417119 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079098183 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.629762547 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152950532 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077991116 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063756425 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25172689 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089813675 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068125183 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063538932 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063274515 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178673528 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129513511 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067012946 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065962597 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067224111 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067740394 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090311537 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.064432652 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.358650874 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066257995 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075294179 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.869124739 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071685812 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068502403 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072861212 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071281133 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086698115 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064878418 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074427259 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064855405 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065108821 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066146782 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082789625 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.372656344 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065757982 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066788934 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063815778 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087969433 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095491269 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065303328 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064364779 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099510435 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067314686 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065238666 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105658598 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065382166 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082580384 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068425932 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111842864 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06784072 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19490203 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064432075 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095096817 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068633503 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097467336 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0789617 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066594247 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.416189481 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064290104 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064776031 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063800385 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064086115 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06691631 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064956377 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066498366 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078583666 seconds)
  done (took 20.815227487 seconds)
done (took 37.675714947 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234239648 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073234128 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075186957 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077094475 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073046791 seconds)
  done (took 1.738702593 seconds)
done (took 2.923829311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121677738 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098814821 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062888306 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097087134 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063807407 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100586516 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099817128 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080401802 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099520948 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063481201 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099124927 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063395902 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063940306 seconds)
  done (took 2.322293038 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08325357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0841379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069399516 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082393175 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063415908 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082054351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081018219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088358388 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081552307 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072165686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062927172 seconds)
  done (took 2.032791106 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082219059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083707821 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068871667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082153902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06315079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081888714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08169658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0854377 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081263189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073388396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063041512 seconds)
  done (took 2.023584643 seconds)
done (took 7.554485901 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077131387 seconds)
  done (took 1.247229252 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585529948 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.064546854 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080482584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109314922 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18751708 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116377543 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268379795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085523534 seconds)
  done (took 8.849712963 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101656804 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070822421 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068556071 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071227148 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068605744 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066798254 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070646085 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07096381 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067413919 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069692136 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071076459 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068079375 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067598201 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070755233 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068069148 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068235915 seconds)
  done (took 2.384932403 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091384392 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090058369 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073607212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0736278 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07077606 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070894121 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072818661 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072203331 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069877979 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071507526 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073395906 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072782852 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070214007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063407207 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072957863 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073717967 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070342213 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072673062 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073170395 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074192112 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073623075 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063257317 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070219397 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072439285 seconds)
  done (took 3.034281432 seconds)
done (took 16.693807704 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113070954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070788115 seconds)
  done (took 1.364431092 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080035431 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081652303 seconds)
  done (took 1.34898696 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081566854 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063978655 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089517054 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076649245 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064846509 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064840654 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086522066 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064487075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064538423 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064516762 seconds)
  done (took 1.908818393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067257403 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07710802 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068747497 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080261721 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072674396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063091822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070549046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067232326 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076056781 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061460729 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069734544 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081398968 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069700262 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083151793 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070287422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067666195 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069468448 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066503014 seconds)
  done (took 2.472533453 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065027667 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066214329 seconds)
  done (took 1.323350746 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066176068 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061868034 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065916589 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065004224 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0624945 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062050511 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061917815 seconds)
  done (took 1.633853347 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382790668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11140386 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307988775 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069914186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081032627 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255178999 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06447076 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069435435 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070197217 seconds)
  done (took 2.644901119 seconds)
done (took 13.89148366 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078798116 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084525072 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094536934 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.370499164 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090723154 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064813899 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112840198 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190490051 seconds)
done (took 2.288413708 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209995017 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.627258038 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400006952 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203722544 seconds)
  done (took 2.422752161 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341263681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086717574 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057722042 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065549057 seconds)
  done (took 1.750506127 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065211327 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06858221 seconds)
  done (took 1.331190801 seconds)
done (took 6.917092156 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065755981 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065739574 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083137738 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062333818 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065033558 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065373535 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062511749 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062394916 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065420171 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064788946 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067497803 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065343464 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065101181 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06269185 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062380722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065648223 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062959248 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063617992 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062978628 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062643181 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065118601 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062654685 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062293114 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065626489 seconds)
  done (took 2.79194386 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083017642 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06586397 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070759218 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070465169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068498362 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070537639 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070272957 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06502292 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070042552 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067594261 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068330793 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06806365 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067465838 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068518688 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067381542 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068664148 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070204337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065157072 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067266292 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068744341 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070333309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065387632 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068470007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069814649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068290655 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069371226 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067524879 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065213582 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069860381 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067985231 seconds)
  done (took 3.273463168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068818158 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062741343 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06365529 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069401029 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062872227 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063639823 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062317273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062767685 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064348394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062664402 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063669022 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062728431 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06252405 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064133601 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063842203 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06662615 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07791236 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062993142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062886894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063360898 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06617027 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062916487 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063000809 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062260887 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062863983 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062318783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062654139 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062040635 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063120794 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062818231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065869286 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066504417 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06202502 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069157204 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066069819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062013245 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066497948 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062018334 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063536063 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062460713 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062153255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061748004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062209101 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069347408 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062408269 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063748299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062611167 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063708457 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06276832 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064938467 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062124413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062922916 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.17453784 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063833864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066595046 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062111085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063551748 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061772378 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063404693 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06217146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061875592 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06191319 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064750626 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063195295 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077480681 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069410364 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062169079 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063754105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063387061 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064878436 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063983224 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076132053 seconds)
  done (took 5.952363131 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090120609 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085789336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065023363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064277284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061116197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062952032 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068768446 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063007829 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06485981 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080727326 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063228109 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064056298 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064021236 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065992355 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06270712 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064444017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070888452 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060674225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063211634 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066742017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063326503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068654105 seconds)
  done (took 2.705978899 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153750682 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068902903 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1048547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074221866 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069106011 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073953491 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068508593 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068630596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068797788 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066464871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066627144 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068277715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068608386 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066391809 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066287088 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066309774 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068851756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06648541 seconds)
  done (took 2.569873231 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075120092 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064796212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086802478 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065203243 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065224092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067376236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068998804 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073355852 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066886789 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065252085 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073362885 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067285345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066839065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065039089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067122675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064536646 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067280195 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064406655 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072436564 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068885567 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068510522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072383473 seconds)
  done (took 2.730652949 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078906787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067110288 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079864852 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066863065 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060925833 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063085169 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069213566 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064793687 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068629333 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066875132 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065021108 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063213188 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067425973 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064973259 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067259639 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065046744 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066544248 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064414776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067184032 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060624591 seconds)
  done (took 2.553817193 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0847821 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06689 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066180824 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074111863 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066329995 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065914393 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074006048 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06602548 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066027539 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086911805 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066591157 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066301457 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074274484 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071252916 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066205924 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073417264 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073739585 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073197382 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065938014 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066080384 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087191284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065989748 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073536605 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066462936 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066542704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066259158 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06608178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070546463 seconds)
  done (took 3.195480822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065988531 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065142218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062475355 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0630047 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06269816 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062831272 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06274759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062854201 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065862173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062604043 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065519124 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065096208 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065524295 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064814882 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065115872 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065064659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064803106 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062557588 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063174289 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062124027 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064729724 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065440261 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064776659 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063084451 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062603268 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064996016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062577119 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062958764 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06462649 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062488995 seconds)
  done (took 3.140105211 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07494469 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072477215 seconds)
  done (took 1.371201818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062150716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078717896 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062479106 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068934314 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068850523 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066095756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07225074 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068241467 seconds)
  done (took 1.767214589 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080921866 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076853471 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066961571 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078118304 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075330044 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0816526 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132359884 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066275664 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071751081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062844858 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079168966 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0641015 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071167378 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065141102 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070848772 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071821219 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062894214 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070418878 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067210901 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063779467 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066393847 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074095762 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068038383 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061152965 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066644086 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087101308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075894021 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064713918 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067655377 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072571259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071118342 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058839504 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064964727 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065339733 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062578686 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074520786 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079395004 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067512971 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073372362 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065525821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074494363 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060184194 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069843151 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071357726 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074866821 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065116207 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065482905 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060112201 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063180114 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067130289 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06041019 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067671636 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059631883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071524006 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068610704 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075418103 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063857482 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066276795 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06847266 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068561905 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07211845 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067237249 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068722834 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064574721 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075191916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069576618 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074179037 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06025978 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058917654 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063037714 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074218487 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087715968 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070960223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065494192 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066421088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062875151 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06828246 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065989481 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070854984 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071389542 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065561236 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070488165 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072579321 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065850308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067587363 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072361378 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063117118 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067582583 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063373832 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081011368 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064347723 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063271306 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063558434 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075611214 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068908126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064987615 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062873777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072001023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059077662 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065284777 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066039079 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065880609 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075094802 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068770715 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068783406 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072150288 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072253923 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06431275 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067796968 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061105521 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065154805 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063247905 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070897618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05816704 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066483964 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064994568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064689067 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072149618 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062053648 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063792152 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070780295 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.19587504 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066881835 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063978153 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06965343 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066613338 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068448616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073620497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063840343 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060700206 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060789552 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069243691 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065576832 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070080911 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070506953 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06897946 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059952981 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063594322 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070825099 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074786247 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066614216 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066465669 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072387847 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068090533 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064890191 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072537039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068172528 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065524439 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071762614 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066327827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060722021 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068817588 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067938528 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064709486 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06948124 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068498043 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067694141 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065763717 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063959074 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072243233 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065997531 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06447759 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066030192 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064293552 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075844496 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067502935 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061109587 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062541262 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074292872 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063839407 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065281197 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064985418 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067692021 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066129161 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063928643 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064912682 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067465239 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074570292 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068990061 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066450205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070591309 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076576707 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.0647993 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067901447 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064249403 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06621055 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066643593 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074173324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072151006 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069092246 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06806396 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061636126 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071043166 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073451677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064673453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06349244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064143375 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06874704 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071061974 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069165738 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065707202 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063489197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065965673 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068226513 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068531431 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064970145 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064515411 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071499792 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063778512 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071211805 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065830759 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074968934 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068701433 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060224107 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068019627 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063405963 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071262144 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060427321 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063354857 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064603878 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065804865 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064140716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067752795 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059215471 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071958151 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0729228 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066021104 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064364265 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064833775 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071989891 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066859647 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068643574 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067908119 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070095564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074191892 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063581886 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067733521 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074458414 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063523748 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058172832 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068945808 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062628429 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063391125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062661341 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061970109 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067078467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071712146 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.200689672 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060063297 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069365811 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063915244 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065470174 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061896407 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070872598 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068997827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067406661 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072723011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065887636 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065822902 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069848248 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065663799 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066610847 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066535047 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068941378 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066675606 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067498809 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065097385 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068969059 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065749725 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063485086 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067212019 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065671473 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066052091 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07097376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06491672 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067399645 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068487951 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066504373 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067052648 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066191753 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065043937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069375624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066453456 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065449867 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068507821 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060752203 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073186943 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065267151 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073418184 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065699328 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062547635 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072728943 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06810162 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070764316 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066682092 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066439909 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066944378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066016881 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068143956 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072357505 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063828667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075981901 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072535014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066523948 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068405298 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065630766 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067157941 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064211947 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066416517 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064965717 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065586694 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064772579 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07014543 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068500119 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066390913 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066895661 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066328025 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065919506 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066864835 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059890079 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064564356 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065388339 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064916297 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074440742 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065721448 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064995221 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064367167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066770036 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064723734 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062458391 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072870514 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073552061 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066164039 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072641277 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064507366 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066594409 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076048407 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059448343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063114994 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062890899 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063122898 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072585049 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065537851 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074352794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065070236 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06498519 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062638681 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066251591 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063827414 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059623799 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062945635 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069434436 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064819716 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064487019 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065880716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068294382 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065865957 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075029727 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064458113 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065887804 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06482265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061477537 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063604259 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063444701 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066988237 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064786374 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061658859 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062180839 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064034771 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064900661 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065724056 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066075361 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065711522 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070711304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063921543 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066897752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066743339 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.19247575 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069021132 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066346417 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065995104 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065419484 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070244924 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069325121 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066607883 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074987524 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065932042 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067194196 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06579297 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064458631 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065750577 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064876662 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065192518 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065290838 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067214708 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073600518 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063692481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0694438 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065785145 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066444913 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071585741 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065902242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069604832 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071571088 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066904314 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067284262 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073855432 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06954077 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069110726 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066656819 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067568113 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07134474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06457459 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073131214 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065908081 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065941431 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067760528 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064213285 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066091297 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064798626 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06495568 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071512274 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066566526 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065146145 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065235714 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06392162 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06709904 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068406272 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072749925 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067585765 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068171492 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060864764 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062916766 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0664347 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064100079 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067329411 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0690049 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071537177 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068288475 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065483444 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064740008 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074600219 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071137851 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068839804 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06350565 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06906303 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065972448 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06750751 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065914246 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06577924 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067015748 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06854684 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067000374 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064445866 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072018767 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06851949 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06612362 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066521134 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066358917 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065571029 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060574141 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065587944 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067469741 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07014258 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067387018 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066117465 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07627935 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063578087 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065328515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068683225 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065019044 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069743814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061073047 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067389919 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066316844 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065880775 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060221321 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06491528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063352356 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067736017 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064934303 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060717545 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076267571 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074519394 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068220942 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064065837 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06399789 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060468414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060441566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063910767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065798841 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066492677 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074388352 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063618998 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063252492 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059493571 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063551682 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067150923 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067178723 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062063262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058949463 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063441717 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067109016 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069405858 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062481064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064077996 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067356176 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06680873 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062352973 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066443787 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060865977 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067907276 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076131023 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064363974 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064675563 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069864271 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071495199 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064375782 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059078894 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064043349 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067419316 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064410293 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063995861 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064663735 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078097402 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066736289 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063325117 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062913322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06650025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063257342 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071410203 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065014276 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063872523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068199112 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065575521 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071098317 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066425841 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07082788 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066934633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066495557 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063085196 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064606506 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062088838 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063037816 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064725032 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063872534 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068420923 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071075644 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062675275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072795765 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07152024 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065444803 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060745378 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063294416 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061772346 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059331269 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064578385 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061074191 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061363058 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061332432 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061917038 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.063907843 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068055936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065063384 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063376053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063468879 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057551485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065570763 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06533448 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06496112 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059774769 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0630529 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063087687 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067587069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065299194 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060703395 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065177712 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064856239 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064099836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058764073 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069797137 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062683597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065824621 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062866961 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062946882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063737845 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.065868628 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067041495 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064681361 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065133356 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067710866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065386704 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06075088 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0602682 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068325867 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061306747 seconds)
  done (took 41.565255283 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106885978 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064735199 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064215778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064411314 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075217508 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064346 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063616789 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064201498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064230734 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066496471 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06287967 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062669232 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07115885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078407546 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073934514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067150438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062694571 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064173103 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0626715 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063992234 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071188502 seconds)
  done (took 2.882357565 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074931577 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077836679 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075065499 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08349236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071264182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070798766 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075370316 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070766228 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079400373 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072847409 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079139832 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070915745 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07280132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072619668 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072646832 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071043637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078832933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070793215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070332024 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075505451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07070648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075324612 seconds)
  done (took 2.953134117 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067082048 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065801516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068921102 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061556803 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066103966 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061435615 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069175013 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064408632 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068968514 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064973041 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065305892 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065417351 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067989392 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061091818 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066586812 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063842202 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107687154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06900976 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065792289 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066869169 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06134032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068022622 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061845721 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061464895 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065171922 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068714305 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066518101 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063812646 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065317709 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06479245 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065410586 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063791099 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067592868 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066623021 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06549203 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065018433 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065388726 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066719378 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061134181 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06366203 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066559228 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062176114 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065810126 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06727144 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0641188 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063869611 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067761322 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065827021 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060684118 seconds)
  done (took 4.563096989 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07881351 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109544799 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06711118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090605038 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079126451 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07168027 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069872321 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089856282 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062620034 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063280543 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080609639 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07818104 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064785869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069972498 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072361186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064909353 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066073517 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065305222 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068581531 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064395596 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06839861 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072199386 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079042418 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078154705 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06903954 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064241798 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064652819 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069440236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076883168 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069417098 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069973299 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070327125 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079465999 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07069973 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064189529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067994293 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081020343 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065187854 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067744382 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063476622 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067576975 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069403387 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072467332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080660005 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06561492 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06973675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064738921 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062033612 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076993248 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067390697 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072746645 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078249551 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068388699 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064983586 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069513433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079149288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064691243 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063160584 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067977876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077149775 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063489954 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068776831 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077618506 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066480824 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071540689 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077328069 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069395547 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068538648 seconds)
  done (took 6.319220139 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074641972 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094813505 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082577191 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081672286 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074529428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075228512 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074436266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074753256 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074651738 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079256965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074714416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115785624 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070656301 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077190052 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074739877 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074894144 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075186637 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074550609 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074728505 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074777053 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077716606 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081911149 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074795793 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082118821 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079289506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070105153 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074111075 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074505571 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081829822 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074264119 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078787105 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074415051 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08249869 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080978625 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07807537 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073796184 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064223995 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07395804 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073660816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07375149 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069409947 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081767178 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073861997 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069484435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074346013 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074198524 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081901345 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078620203 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076447079 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078497521 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074494427 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08130321 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074138003 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074319376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081685449 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084519141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081396625 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081862873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074772039 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081863055 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081838525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085437819 seconds)
  done (took 6.159294713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083090018 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074582584 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081229948 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061178035 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063643391 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071024516 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063381765 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063658397 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073131642 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073120873 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075206815 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070891329 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073920128 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075398282 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071709971 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074169009 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071181329 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071381103 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073426684 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070853069 seconds)
  done (took 2.779904665 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073647764 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081705411 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065829005 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070630078 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068077984 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070785966 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067930037 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068329667 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066040608 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068548708 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075588355 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075076608 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066528891 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070389446 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074718418 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070619409 seconds)
  done (took 2.471021222 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082544201 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072780081 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079029737 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065809155 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066033974 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061945357 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064721294 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060767285 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061331433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076972854 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064985594 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075229049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065062859 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06375817 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061791368 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070677666 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061395248 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062521594 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064729883 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07727062 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068864214 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063583475 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06846086 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064976906 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067782247 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0696889 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06479196 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065529525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062152509 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065235573 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068102363 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068837196 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062319568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06293389 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064053479 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063188589 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064979081 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065140874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070511813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06492282 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063641054 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066714851 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064818474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065452508 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061584162 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065102355 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061068315 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067110277 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062593346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067523341 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064766165 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066815259 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065316448 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071595583 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067380603 seconds)
  done (took 4.995617401 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078046799 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069187713 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061609769 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063547009 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069175834 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066351808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068795996 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066211385 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066464756 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063187597 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067350923 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068333453 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066310904 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068794644 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066469813 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069036211 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060902102 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066681945 seconds)
  done (took 2.555383484 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071030735 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06525674 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072284693 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065306146 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065663676 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068109903 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061122487 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063631452 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063665227 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065125237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065216136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068175878 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063732895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067012036 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065015368 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064552469 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067147513 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06318201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064500212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060844552 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067458501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063549641 seconds)
  done (took 2.784617306 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093237884 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08230419 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139587129 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078909137 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083397887 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070879331 seconds)
  done (took 1.893136678 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090293605 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099288695 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06597069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068493147 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07555766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069199722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068747805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068826072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07743631 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074664361 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069522608 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077361218 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07735467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077224346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074857834 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074345989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069339128 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069719273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065763305 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082750916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069416362 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077702471 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069551584 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069088032 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069036353 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076558481 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077993581 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074967738 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069538421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0777633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0748505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069403383 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077603453 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075340857 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068608523 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07768985 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069425703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082456334 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0750323 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076574845 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068508997 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075455012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0777251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073481769 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077299192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06956064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073592969 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069425465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069448581 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08488802 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075131548 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076252402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076728564 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077851391 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077066625 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08451597 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075517381 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076745123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074715336 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074784006 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07664216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075241759 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076309612 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07485532 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074991822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076679438 seconds)
  done (took 6.287771614 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102390429 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066268137 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069422026 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075043601 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077855942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069064083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069710167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069370464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06944315 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066215731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107791685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06942042 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07689538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076864248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069814191 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069832984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069983402 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077256247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066430091 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085210785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070017072 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077264575 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080512848 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076574787 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075807204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075137589 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069549942 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069724518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069144593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069470051 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073548097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069354515 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07664115 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065805929 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076235322 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069340999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068987276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073627019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06877927 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074253745 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076266765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082174648 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06892554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068842394 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074858681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069583639 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068854548 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065909878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069343466 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065829524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074580836 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074606093 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075097613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076844807 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069452303 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069483209 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069549859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069548747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069338481 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07474174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076533536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06954302 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084909127 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070146841 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069147441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076672413 seconds)
  done (took 6.197453996 seconds)
done (took 127.654102886 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184512871 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163589617 seconds)
  done (took 1.689808772 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068486428 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098213931 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076450555 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127764051 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066164819 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099374475 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098989589 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07682939 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06572498 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065383532 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065079585 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067803298 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130502467 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065650495 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065087797 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068329809 seconds)
  done (took 2.659302156 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097933296 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161485247 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101260548 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.0645757 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099089467 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072156327 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064571112 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074591064 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070483366 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064516469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072065383 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069432932 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064496064 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0699088 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070664948 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07172746 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064357827 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072177732 seconds)
  done (took 2.7876552 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099456291 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091030162 seconds)
  done (took 1.549666743 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162999824 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105916543 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145273309 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349187555 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162911646 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147979523 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144373251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144780636 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118336809 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13900368 seconds)
  done (took 2.974191982 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098464025 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152951411 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26524597 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115989856 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071931533 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09350603 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116915366 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076539808 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079386025 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079054526 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078932305 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075814647 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098772317 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072900276 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073217916 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075353495 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103519066 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072142632 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074003618 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075429251 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099413854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064624728 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072362231 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071897309 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075990485 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076468005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066065287 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06500205 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075235204 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073677358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075297424 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091755672 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076344684 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10472649 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069812572 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105298066 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075454147 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07253963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074043895 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072745011 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077940863 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077927992 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072343273 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075064563 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064915718 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075795039 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064695121 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064731277 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077036865 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066354753 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07721768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075949412 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104991361 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067695596 seconds)
  done (took 5.93085267 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101974699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105365666 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071378748 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112004578 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102393329 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071460554 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10148753 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095219957 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103337669 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069336936 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067551255 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069859081 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081623658 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081492169 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114481298 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106403464 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073127713 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070528251 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10548589 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104313211 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067750108 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096649731 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090612776 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102460918 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066621384 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069550736 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067594229 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069403894 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076242099 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076937563 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068755271 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079214469 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083530355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077086491 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065959374 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067044718 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067992647 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078319255 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07865047 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077425894 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076178449 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066971666 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067403258 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06889318 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069490056 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067107761 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077870501 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079065299 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077686549 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068426727 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069225555 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067286737 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068294653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078869832 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076626037 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079279665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078896899 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067799059 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068323118 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071497631 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07969726 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078631788 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07826134 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069076979 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07814083 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0682349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079568509 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083147153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067926614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069470737 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067564291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068507067 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068765022 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076827556 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077001421 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069082721 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06895254 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067311832 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079582155 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077148078 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067168661 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076070544 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066091697 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069829923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068688237 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069187568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07664916 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079502667 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068665364 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067684589 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068725756 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067708079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066535788 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075879289 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078862717 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077987978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077751229 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068956082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077310006 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076361821 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068914053 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077418652 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067309642 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069072328 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06883151 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077313014 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.0755045 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.206861563 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072364837 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06795394 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078106029 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079963563 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06852827 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077513346 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079070221 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078333938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067755918 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080713396 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068847823 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079120628 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06875413 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079486865 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068456115 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078974868 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068398608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067690656 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069045968 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078552391 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073339109 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067921964 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0687462 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069564869 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078334769 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081769791 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070419167 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07668293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077402757 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069268076 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078001721 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069192737 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07833372 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069838981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069244127 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067167772 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08107199 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069336515 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068328015 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068551081 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0796786 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068509615 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079184984 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077430604 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067949463 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080630407 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079904055 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0770499 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079485215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070031516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067412606 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068026563 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06939919 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076950153 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079335572 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070175533 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068153255 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076817496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078229501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066727739 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076948371 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078124258 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078819745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068314491 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069089253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079253794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079437891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076860723 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076702906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077637267 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067729727 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076599711 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077693789 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067400464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082278067 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067531691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081659845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07778345 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075535933 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078488216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079190532 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079433709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079282243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081736023 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067308228 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067574153 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078187662 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067238236 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068927543 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077318287 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069385581 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068722133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081902825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067863872 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079002559 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067373721 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07824418 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06663572 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0689733 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082024598 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06731142 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068426425 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078252194 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068344822 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076550173 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078702409 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076314743 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066522767 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06795731 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212254489 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080812783 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068516377 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068067628 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069959053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078357186 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077183802 seconds)
  done (took 18.500903537 seconds)
done (took 37.456767327 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207081284 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15117331 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182015161 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117424237 seconds)
  done (took 2.114128083 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114999352 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100519123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091429132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064533905 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098089528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064604702 seconds)
  done (took 1.932403927 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308139016 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208980344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18668236 seconds)
  done (took 2.098342418 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200386415 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.1886885 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419334369 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262002634 seconds)
  done (took 2.573971729 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144305575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088142043 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066111994 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082899622 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13219967 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157892775 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09935291 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123869969 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078440653 seconds)
  done (took 2.421081249 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148217581 seconds)
done (took 12.677530759 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.232185804 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.218094427 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.19300482 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214954788 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229157644 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102165193 seconds)
    (7/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185750755 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081742223 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.238098777 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122443154 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088592972 seconds)
    (12/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109179287 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09380711 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077310444 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104216547 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162961762 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073489615 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189054849 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183539863 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180416978 seconds)
    (21/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074169132 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193410532 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076096791 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096526802 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090815526 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050523192 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120061657 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176589781 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181331733 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089681684 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193016704 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076574889 seconds)
    (33/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099652628 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075731501 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072141739 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09943023 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071095995 seconds)
    (38/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194089636 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068763772 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086918832 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102144592 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.173806207 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088661878 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147951791 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065273532 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.061416526 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.202617769 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073831792 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108334527 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051103855 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090183727 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073696752 seconds)
    (53/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072526477 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064291402 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072257926 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084523771 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089139989 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07187557 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.138828579 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068255806 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124103983 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086244528 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049783441 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.049657251 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091493935 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066599449 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089948474 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062002637 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.15528366 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073287395 seconds)
    (71/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.163577107 seconds)
    (72/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.150953534 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143604077 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066325324 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0751817 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074041589 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099688142 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070391744 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147911077 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.196426049 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072079818 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071528785 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06442331 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049793154 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070400597 seconds)
    (86/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071777802 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070932502 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195129932 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.148079007 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.163157885 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.144616237 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.066254976 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078814881 seconds)
    (94/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061643677 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064567765 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091500552 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074505698 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090673413 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050349672 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 0.133105483 seconds)
    (101/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06733009 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063371522 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073051953 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.1827274 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068650622 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144000185 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074518563 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090115084 seconds)
    (109/309) benchmarking ("sort", Int8, false)...
    done (took 0.143244077 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070150968 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076368949 seconds)
    (112/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074557599 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065728051 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144675185 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087991939 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065972542 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072959844 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153703646 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072270699 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110302102 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140862181 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109798773 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053232556 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176554253 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064615097 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185082507 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.145330946 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07295403 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077766206 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072096506 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175112601 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152501578 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075860758 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.050918471 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071014161 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092753189 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084024948 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09416052 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049837111 seconds)
    (140/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071061701 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.04987935 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05135842 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193420711 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091305094 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070857901 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066153636 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069003656 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05042744 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064356193 seconds)
    (150/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05067375 seconds)
    (151/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080519179 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152778919 seconds)
    (153/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186572081 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109094188 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067710498 seconds)
    (156/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074017227 seconds)
    (157/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09992098 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064106051 seconds)
    (159/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115064468 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071599109 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.049760868 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051197635 seconds)
    (163/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061333671 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074389949 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064121534 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075441149 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072726991 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194739591 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.270411621 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072782959 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099663822 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.189003414 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061347069 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064250892 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064809763 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071666124 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069346904 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071255019 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07446312 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098966697 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099719592 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050382591 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049541573 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.049758944 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078137218 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089002966 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063572588 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049817341 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088254069 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092529159 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051121822 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178764483 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060172743 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193469032 seconds)
    (195/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087208296 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068753011 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064318518 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.049500909 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071000642 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137733712 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.226628926 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068530013 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137638579 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075574694 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051096124 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065643096 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089552904 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06667697 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065590406 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064912354 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155740223 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183559684 seconds)
    (213/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108125347 seconds)
    (214/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061980438 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073241078 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050064787 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071463856 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.0707376 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063486064 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075585341 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050280201 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107913344 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051660859 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086280507 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064922016 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051817842 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074402261 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072849621 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064469754 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091383513 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07759194 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109988853 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06425636 seconds)
    (234/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065306312 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080305377 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051611057 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085722401 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051031468 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070855047 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07004006 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063292603 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109089434 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063891529 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051731124 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050746809 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05123879 seconds)
    (247/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120003934 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065701299 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071736525 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135710703 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087891463 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069983371 seconds)
    (253/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052501374 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139085277 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097909969 seconds)
    (256/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069092514 seconds)
    (257/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077004843 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049749791 seconds)
    (259/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064348334 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051273651 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125281946 seconds)
    (262/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060045638 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052546829 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064586491 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050219456 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071087819 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064477788 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064371643 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079191123 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108004185 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073502127 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06229625 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065451394 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169503628 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051500002 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065724503 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05215655 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066236223 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072928018 seconds)
    (280/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066498545 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140663102 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137373482 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063840459 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049894509 seconds)
    (285/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077266882 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051797635 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072484431 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062879164 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061191157 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050112973 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063845433 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063012011 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051677828 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072247403 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050126727 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05115346 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.049818016 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070678317 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072176172 seconds)
    (300/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06630464 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089799741 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067029792 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077526316 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063520446 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069935285 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 0.129626827 seconds)
    (307/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066432788 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17624354 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098905896 seconds)
  done (took 30.655550299 seconds)
done (took 32.058264739 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083042035 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092556984 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073652973 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092198897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079691427 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07489704 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071581168 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07746788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079032872 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080998047 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076801726 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053152079 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072959485 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072964815 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07378105 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090109998 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07745965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072406326 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07216444 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063810295 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071827829 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064340656 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066232878 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053384077 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077588399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070766933 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071606602 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073458797 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064423966 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06491117 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068252264 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072813408 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064094975 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078220255 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071224108 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0720237 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073364754 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076244285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066239718 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064569149 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073584812 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06424642 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072932587 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072959003 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071211607 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070340102 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071837172 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077298948 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089909119 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067084226 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073747597 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075230054 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074749661 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071878902 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068736868 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071689268 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06958755 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089919784 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072626611 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066654063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073517068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073250716 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070161517 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072098805 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071645671 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074541164 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074353992 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07095118 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073271836 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070592916 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063984406 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071409328 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068014701 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064132801 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074719705 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076474338 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062960235 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069985164 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071441566 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070586998 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063455469 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066008417 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066062253 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070982761 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065934615 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053162883 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068084591 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070664031 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063586817 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07215972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07074088 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071246159 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06600182 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074446551 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06333508 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069582748 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064471697 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063902678 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06578591 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068605817 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064154916 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066564806 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073928074 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066217965 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070664257 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077817947 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064122936 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071166136 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063626337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064180162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078364793 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073730809 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064283931 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066890942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063816585 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07178377 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063403225 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063910799 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063771215 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064305954 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070694143 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064158812 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066370465 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07185737 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077190991 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063491861 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068219544 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066033822 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063719385 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070238991 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063880461 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063599962 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065634706 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06054379 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065408939 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06404786 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071832168 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065139184 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206728378 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068240593 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073165839 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070362295 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071073508 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070842133 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063334101 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057927352 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067344341 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066160898 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066967822 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06505021 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066990034 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065487828 seconds)
done (took 12.291770353 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065261199 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138944446 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095380253 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095346774 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085108098 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065554152 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075329118 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099952157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066803637 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099812821 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086450548 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084972766 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112612727 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063477216 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064912456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068486443 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066551426 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080789442 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099610383 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085824908 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114437286 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064136822 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091899488 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088649105 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087178828 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093119647 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067864381 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06901959 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068497251 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101286963 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087403473 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068427235 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066102886 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097499304 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093112993 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082917314 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06507636 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082172661 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065285866 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065199483 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067078785 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097451906 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080028566 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079862924 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069427288 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068088802 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066661244 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082870497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088784994 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077926681 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085026154 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10040685 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068088076 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064385674 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063710059 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084814872 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064479919 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067868071 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064852347 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067278998 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064677765 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068427279 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.07966928 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079696555 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069077085 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078899235 seconds)
  done (took 6.73142858 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082864007 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090752618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082097532 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082926805 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065275556 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065223148 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065507931 seconds)
  done (took 2.026372489 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065536561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087156448 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08839352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088467061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083678508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086872093 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075238033 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066784452 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087253035 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066371071 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086633488 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099457557 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068897043 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07316566 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089861988 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065467197 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089586788 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066256438 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068435662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089538873 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068182558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094924644 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068981112 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065545575 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080081226 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065881412 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112835396 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06961415 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067366817 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068605918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063835916 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105932925 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079496875 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073257042 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065498098 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080002041 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080280851 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063818799 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082294972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074271716 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079739924 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065926064 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066445553 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063401903 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070244765 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07590387 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066713764 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067113683 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068282174 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08634597 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066500594 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079694373 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068429266 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070953415 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066890325 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07234229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075864675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066452725 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085417651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066617548 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082571997 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081856963 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079405396 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081740951 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067705583 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079223994 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079485682 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068012454 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066946517 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069093592 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081667666 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063827074 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066942089 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076560098 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06738049 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089249472 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088574714 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067050833 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078857445 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066188618 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065388309 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065827011 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088568481 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070788021 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065728023 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069345255 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069474632 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064382566 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064776596 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069228592 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063649557 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067370237 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069042583 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069376689 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068938077 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082311526 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068012794 seconds)
  done (took 8.720966861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067909727 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06782043 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067834021 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06712265 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066920299 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067175566 seconds)
  done (took 1.918480346 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091918869 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068130051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079861921 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071500058 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104204927 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085941292 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085742805 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077213019 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082941577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077736916 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086273888 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087143693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091023894 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071077684 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085466525 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070216471 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086059986 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074040047 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076974398 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072161184 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085595121 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071663029 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072472094 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080848851 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07442513 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071256601 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066824921 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077550962 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077254992 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07705987 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071341981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075170172 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069872058 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077020672 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085520684 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069662863 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070510763 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076638823 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071160963 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07455777 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086903477 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071217239 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073098412 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075871917 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076482718 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.068957333 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076070145 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073451203 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084837673 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075783219 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075979302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070175789 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074236088 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076403519 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069495736 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07658913 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075989874 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085973014 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071553143 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069827517 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067663737 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074485032 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076953106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074107264 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077114887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076109091 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069809984 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071794721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071886101 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071007532 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075945375 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067974777 seconds)
  done (took 7.000016953 seconds)
done (took 27.877927541 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533156776 seconds)
  done (took 2.014646344 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609146885 seconds)
  done (took 2.115003352 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.609104779 seconds)
  done (took 8.112294377 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396715238 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489860354 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719825419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130103825 seconds)
  done (took 3.287360589 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710976938 seconds)
  done (took 2.225561469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213212146 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201094262 seconds)
  done (took 1.938491747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372768943 seconds)
  done (took 1.874637942 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133518859 seconds)
  done (took 2.638281234 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25487269 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173987063 seconds)
  done (took 1.935803551 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478363574 seconds)
  done (took 1.986988791 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.834366757 seconds)
  done (took 6.34453278 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210900713 seconds)
  done (took 1.759875633 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239785271 seconds)
  done (took 1.745680311 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699685548 seconds)
  done (took 3.207518021 seconds)
done (took 42.695764566 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077986899 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079747112 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080018584 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076592427 seconds)
  done (took 1.811948385 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07632508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071611381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075571886 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071765677 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075738715 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071728387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072990306 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075483452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071469033 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072483724 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071666076 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071750127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073685664 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073515471 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069890563 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073748118 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07477069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071383428 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074100289 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071699711 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069418709 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073684665 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074184867 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070236053 seconds)
  done (took 3.260151279 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07639654 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072029107 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073691286 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071251285 seconds)
  done (took 1.811602098 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076615867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093730551 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088261501 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076738356 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091741127 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08582737 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067992606 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068082283 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069471759 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076362672 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066324798 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095031927 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087129828 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076525787 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078845228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064549088 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066624592 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.0862934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077315878 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077320108 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068596109 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076920164 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06713256 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088356021 seconds)
  done (took 3.387331086 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085295616 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104179101 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081254414 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088019494 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090696658 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063832246 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086144628 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09017605 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124405077 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06418657 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069323759 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064142799 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071627647 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063835432 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079656651 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105543137 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108919616 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066801458 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095568621 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064232274 seconds)
  done (took 3.191775447 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071225284 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068370616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065270696 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067356227 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075739542 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071328644 seconds)
  done (took 1.945838191 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06717776 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066296865 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065958118 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065575278 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070666753 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06590495 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064368359 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065674659 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066220587 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066149028 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064648809 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064275014 seconds)
  done (took 2.313694751 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19924677 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066852504 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066674531 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064727696 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068611172 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065315296 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079113137 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066274562 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089625074 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065108908 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065218254 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06675094 seconds)
  done (took 2.486263924 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204679517 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074844296 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235336791 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147435274 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108481993 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113761827 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109849977 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112000572 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139261292 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098434898 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164854658 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16438993 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105979297 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135240308 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087337688 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099133206 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151399188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160419053 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103475098 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164637338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142878574 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124007795 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148700657 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099601927 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104305494 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119264778 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06982618 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078411873 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166877814 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130751019 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141445791 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109375065 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090766252 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174390188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17007643 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138839252 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144565429 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082928314 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103324319 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132893682 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199243643 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08719205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158354822 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106778875 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219194139 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133962 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118153017 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118995879 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102784801 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089221377 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142328098 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181472653 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136415966 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08661029 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121546917 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111760183 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112618278 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112093907 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179522124 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159676181 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126969078 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07002416 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105840484 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151221237 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131807872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109646713 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124028902 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090176453 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13310799 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152924336 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117805701 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143140072 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115045482 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086703653 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117703529 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138245675 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125102178 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158097679 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122139175 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071614394 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121606528 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099697825 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079458789 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143343801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073863247 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173437864 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096969753 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106904584 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12233042 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107791624 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107332862 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156797418 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142210284 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101567357 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064366938 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246482583 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120230938 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14497468 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085610999 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107387502 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11696407 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076507523 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135494827 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073701688 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122708185 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076521781 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125621812 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12748366 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075230833 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121409471 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101463128 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099146701 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131275628 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157900213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086518033 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080614553 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166687942 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119824918 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100670056 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141778631 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154022848 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100095138 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098951291 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147689834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177156173 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087304802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161400155 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104574697 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081734373 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085896619 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121933877 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109717986 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12155309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080104211 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116520587 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16553895 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073614555 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094130132 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131676275 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077114185 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079059962 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103944271 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102904528 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094165034 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098333605 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101247785 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133570695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121861593 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103819538 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120951339 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096859671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313830895 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087096177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100633008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102600527 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068606406 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133046756 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154857232 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078449884 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162101988 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121127999 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114796565 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117652778 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082949412 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14019711 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077862303 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069140391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142338354 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108756188 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109362662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149991161 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113989635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123818709 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116964848 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131237576 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129062253 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127626949 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104394537 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086830079 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109910344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124445122 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071289678 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089028811 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078234159 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101739678 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094234255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081583083 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138724728 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122179844 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107550946 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110055082 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094568562 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145796393 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074862632 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125851786 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117644373 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093776113 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150291966 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150630505 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129341796 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097766454 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134426296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069044622 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072363738 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086555117 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121284399 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080487257 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081573488 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258992915 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147491463 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127807875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134166783 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121194458 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118231815 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154125573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068767085 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116926477 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144563035 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119561537 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103702886 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08859513 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097170341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14029594 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106372208 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181004958 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115237645 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121785426 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150192624 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098569273 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078661431 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101258076 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133684278 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102477883 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141228278 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098743479 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087162863 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108206033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072792954 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096471803 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125395503 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116436408 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132241743 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113597783 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130381259 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075923518 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11382201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120164674 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119977001 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062978879 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118618652 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159104641 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092818154 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116516221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151009027 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077792492 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132538305 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172286091 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142600045 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083182564 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251993656 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120407647 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127265214 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118590824 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138652526 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105764165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134927602 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107580377 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085683669 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086501478 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096135708 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103842516 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093754635 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105431509 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111580058 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094367174 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129500689 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101418305 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109761078 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117460681 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097294142 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089000256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094951305 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174368623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11698829 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168576957 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09932253 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142561296 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161490933 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073108476 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077667695 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076827134 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13731076 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083180262 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127356235 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105381498 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115267012 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121789186 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140171325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094044633 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066728687 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107612631 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130273953 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121384477 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096933936 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101691158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161468198 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100062873 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078553789 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112181644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114146466 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101170472 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169829118 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060275397 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10388549 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074639449 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078374111 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125522086 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294306177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079540578 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100872822 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117227155 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110273286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125743622 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099396416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108886339 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124180215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147134838 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126868954 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088124832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110057476 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126879067 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15433431 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103595143 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094574361 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170341882 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150542732 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157454566 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086280142 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112315141 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113536971 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108035912 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135757358 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08217793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160753475 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080141297 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133711575 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100978917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086944569 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12742189 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106466645 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086244473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145446498 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115446244 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081304897 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075893962 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115782687 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117805194 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104668707 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073860068 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136868541 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072664956 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129800211 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156580063 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078815551 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106030434 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094331291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077402087 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104721911 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099944381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085143857 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.234796303 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174871995 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086478322 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147133608 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13125301 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110388934 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133531254 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100885451 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637713503 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07584842 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150262354 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115376839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171049998 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09868237 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116336975 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107558314 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119677349 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142423415 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102143587 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179279149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129978956 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113908446 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077661432 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100251529 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102372895 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086485957 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106939548 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112409163 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113155454 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090890321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113708633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122139599 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080692234 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093927709 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154208015 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114880655 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141361822 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139925378 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084144216 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116828578 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135621652 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078294702 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118481614 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150249358 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104042974 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097197362 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078742276 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098046829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15626401 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071383036 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155916913 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117734106 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107459572 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110318111 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107741719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123971273 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1016472 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115947267 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088165911 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104750155 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108579064 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077847557 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073545921 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100961445 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105109454 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09437008 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092214415 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095544783 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144964919 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069295971 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094267626 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109683201 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136273463 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165805663 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.085548364 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079521128 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112416989 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109181693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107054888 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115138335 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075391109 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078163322 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077306514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079282884 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104995898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108262594 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10908874 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106250178 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151286209 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.07882801 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222736679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08925536 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099469622 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.067420212 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073383585 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090363573 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091806889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099183612 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103575819 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147277303 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090696048 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.084294232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084849437 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071168153 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079518952 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120652681 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101738408 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110541375 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092541086 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.059330881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099837236 seconds)
  done (took 57.679815334 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108466221 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08338681 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096572122 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144839793 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123107986 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204645097 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153661062 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188666042 seconds)
  done (took 2.869124453 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067772449 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094952389 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102083263 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082594502 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06610272 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067571632 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230639974 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080272438 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065561497 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097654238 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076908182 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067822772 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424307584 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065089288 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065996797 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060605703 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066579715 seconds)
  done (took 3.417757357 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382761385 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614425552 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.378975989 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071774956 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.415579573 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087395674 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.104820449 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128870518 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071546723 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532971798 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702503981 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123194969 seconds)
  done (took 18.259324668 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073424042 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067822327 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081410671 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082316431 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071227275 seconds)
  done (took 2.017208383 seconds)
done (took 105.994301351 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079884838 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.601100373 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05191283 seconds)
  done (took 2.321787606 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081411658 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084662366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08382489 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082098954 seconds)
  done (took 1.983623697 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073335578 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074607261 seconds)
  done (took 1.793303702 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229767974 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165103206 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094013546 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082865139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079010899 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079217186 seconds)
  done (took 1.886855663 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0707683 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074072673 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071946284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074570491 seconds)
  done (took 1.932304926 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075065665 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.050614358 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053559817 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056467775 seconds)
  done (took 1.877505633 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086342775 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07886346 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07696929 seconds)
  done (took 1.884887476 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099520594 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08406578 seconds)
  done (took 1.825580558 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080723566 seconds)
  done (took 1.725482318 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098699512 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099570494 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129731632 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108868074 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137137402 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107872612 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083079658 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084024948 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074781697 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084875918 seconds)
  done (took 2.652482842 seconds)
done (took 22.092304445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076854499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.450168085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35901614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088042763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677424512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354811607 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967883614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090957979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113303193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066254039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082839929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647627926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.956276925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.411771221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94275322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.312336243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646988509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066820273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066476923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066913124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.946221579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065657847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066291659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066427008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646188622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370703098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066540887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.313534171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066330359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068217101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354160667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066708136 seconds)
  done (took 16.172809603 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069051987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11790275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072131097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083451857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068959492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068374085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070133081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067736065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119913436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066408058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083316291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066160425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070545788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067035446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086350337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.081161531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067124796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067366317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066789639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067332497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08580434 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066327132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066914486 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067241732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066477081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07884956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066840934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066837325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067237869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069405205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069170184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067191861 seconds)
  done (took 4.021788271 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116832448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126456324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072615504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102933073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112360749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068506043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145602434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092097787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128065808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066185182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083220697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066924439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100552056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067149327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086455781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06674706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067352519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067260958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066635157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066742079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086198856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066304971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067101095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06719271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066670686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080874419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067290832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067289619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067165999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068511272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069961597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06775985 seconds)
  done (took 4.271212675 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07082682 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074048428 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081371049 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083659264 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067879424 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070664277 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071664908 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068083145 seconds)
  done (took 2.249315837 seconds)
done (took 28.363854831 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077321912 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068085199 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071743902 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081563276 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072297277 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077368589 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065917008 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07390429 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071334652 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071812573 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073741327 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065768073 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06954592 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066587603 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072520896 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066576167 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078688911 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070584723 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077316062 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077644847 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068455243 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071374419 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073321494 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077573967 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.076830202 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077108142 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075699649 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072631249 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06750508 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06905715 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075167402 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082244026 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06653937 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077216642 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065934071 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065901819 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070602482 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065673512 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077129123 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074845604 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068250358 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074355938 seconds)
  done (took 4.684697826 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086002579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091008889 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083568833 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060364468 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065846249 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064192826 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087574822 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058186882 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058100956 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08654401 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054331925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058136343 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061983629 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052367102 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061087398 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055451303 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060460941 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054383397 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059351069 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058244675 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087254648 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051910199 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076086295 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062389339 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.054513302 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06052045 seconds)
  done (took 3.378418321 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072553328 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084569319 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088051591 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12753706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103344122 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077606645 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07860849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093704173 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.0868271 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065311042 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068829061 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090990299 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089239954 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072145021 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.065532442 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084449683 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082787374 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067380735 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071814981 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093813156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08513029 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084904398 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096926692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082094356 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065032668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068297208 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069710858 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07984 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070756071 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075242319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069431559 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069651641 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068014809 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077830755 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069254955 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067238673 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090401822 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076257237 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076665161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066437311 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069734376 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066503071 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090673203 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130051191 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065411885 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071931868 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074084232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075363373 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066020799 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087635382 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077239228 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065372751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068929068 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065712856 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066038812 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078807071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067987282 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067900541 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075321893 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068954148 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090448932 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070459404 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081404177 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065612491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073158399 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064903575 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066673416 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064929976 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09339365 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0673297 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109474368 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067377149 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066838216 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07484308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073493196 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072127235 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067253225 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081542993 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076428625 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06903791 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074122865 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069297089 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068925263 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089683604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068316286 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068073808 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066934249 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072318864 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067827574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067235838 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079171926 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066140375 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069321246 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082586956 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06569908 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06804139 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073114029 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070685603 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065360966 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077020801 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070565297 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066518486 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075678953 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065788643 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069029347 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078767414 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072347087 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064497418 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070268479 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071757619 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066547082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067552386 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068702931 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067928481 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074972402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072358471 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071097262 seconds)
  done (took 10.466902087 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161194984 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155855924 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068544621 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157996545 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075525014 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07746812 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147598231 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093531632 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066170366 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06699673 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066841811 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108786864 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104162648 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114044335 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077125224 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066063401 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082821173 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11240754 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149750759 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144271533 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083505122 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075579046 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068148175 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067204045 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069362235 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077129361 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084032441 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075699836 seconds)
  done (took 4.397722137 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079418147 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098770171 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072826164 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089198778 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089085783 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06665516 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068691168 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068059242 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079113676 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077279571 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066378798 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072629994 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073267846 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070112627 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067548062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073238836 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073748205 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068501172 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070429688 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071963339 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076807144 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090480682 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069756377 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065575478 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071757495 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065467089 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06247192 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082408449 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066737201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093711991 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064603568 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074018767 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08103513 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067371653 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0666259 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066767517 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065914946 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065975369 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067453963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064833176 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064689298 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.055970982 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065528469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077473325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072517373 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.054702076 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070667342 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071291045 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071396059 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063478058 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068709852 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068338302 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069158987 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073267529 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071245358 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071587158 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066975763 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.072894113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074984075 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065661397 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062915095 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065135978 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07095732 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063579295 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074725352 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070663383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064426785 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066377319 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.067718851 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07335003 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065729547 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069320817 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063419821 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067613577 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070974306 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068031988 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067159254 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064841482 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065484611 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066348346 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.053615854 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065801125 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.051953115 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069166932 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064356154 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064612918 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066068607 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071229327 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077641178 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067053733 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072026489 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066769874 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065247879 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068670353 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.058623321 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068882649 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081910859 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080339563 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066507632 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063966669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081176724 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070905781 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065489887 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.054951239 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073823017 seconds)
  done (took 9.028211203 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08819739 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068709163 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084374999 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090797775 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085685288 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07449514 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075707599 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068234214 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081753768 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072470123 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075838783 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066287519 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076629444 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076092034 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069012229 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076332642 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070751669 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083555128 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081088122 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066863508 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075422806 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079026655 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088748016 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080420284 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079359541 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080487086 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089192683 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070677838 seconds)
  done (took 3.879114628 seconds)
done (took 37.49019212 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.742499034 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.911726637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.735724771 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.099290167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.801889293 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.857544098 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.815521268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735100278 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.786245003 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.772539757 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.942199918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.865024674 seconds)
done (took 64.741731316 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.754112797 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.877722506 seconds)
    (2/2) benchmarking "String"...
    done (took 2.012536991 seconds)
  done (took 5.567696167 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.048491483 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.2947495 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.98272238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.732707715 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.738981147 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.073837587 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.526743653 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260828026 seconds)
  done (took 30.287924694 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.856823275 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.971125386 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.406728309 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439510646 seconds)
  done (took 15.398305249 seconds)
done (took 62.815070246 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.753467473 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.790977087 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.757933847 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.718204337 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.79064108 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.744229436 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.124020863 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.827171084 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.735585031 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.721197972 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.734979435 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.166638288 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.741857771 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.089576487 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.745775421 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.741526889 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.798238827 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.374798862 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.891293056 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.745061108 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.734065077 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.798130087 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.733649758 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.737877002 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.771037839 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.732406922 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169670128 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.740884998 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.563061966 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.738158679 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.794399858 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.385497272 seconds)
  done (took 203.56881589 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.737292102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.708216645 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.775941945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.787629298 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.091263798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.918979396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.858951316 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.136226678 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.741316985 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.739738296 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.94450703 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.737496681 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97347058 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.687164809 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.765309278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.843231774 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.916974082 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.976993624 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.769826981 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.870085847 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737263562 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.76481397 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.713362162 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.925953594 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.754567801 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.757201431 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.742608426 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.767012656 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.93015073 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.89130342 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.763914029 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.754891386 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.933495228 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.610175756 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.756801326 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.766370957 seconds)
  done (took 168.230328586 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.1406278 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738723976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.736844871 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736950996 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.742975557 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.738714509 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.858666701 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862631687 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.334772109 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.308825073 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791796738 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567055491 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.737315311 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804569139 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.75102459 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.74062227 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753917152 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.764611764 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740153931 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73833057 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860542493 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.751347139 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.867519653 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.747043765 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.738457082 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743646257 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.107640493 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740071932 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744160374 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.981850838 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.739873583 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738590991 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642400741 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.408127221 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828789419 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740620147 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744132925 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.740423407 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.739355236 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.960107379 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739909868 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.741048009 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.743018183 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926599284 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.740577283 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.861763206 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740785476 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255509379 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.739450467 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739021187 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.67809074 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.45338744 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742815451 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.738000438 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.741564936 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.740022047 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739222539 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.739768823 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.745760553 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.71903052 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.815570344 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.741512649 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.743852136 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746550468 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.740199362 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.740896242 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74030431 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.914047745 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.800316822 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.868604918 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.003769073 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865648487 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743611663 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808560789 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835116917 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.740673627 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.740264879 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740847905 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740401434 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.821771593 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.741602616 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.861996948 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749744772 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.741799791 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.790990504 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810215276 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.742490928 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647095058 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.743274363 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.741718741 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.056096187 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809180937 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741854782 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.740447428 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742541236 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.863865555 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863485329 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.540690637 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.744523601 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.755163505 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.745087304 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873110142 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743283057 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.940014953 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.746061467 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823735207 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747692335 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.744127281 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.741245338 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743545292 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.742363712 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774453674 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.742163966 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.801368848 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.117216488 seconds)
  done (took 398.318513748 seconds)
done (took 773.989707672 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.433047436 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.385197364 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.484616528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.407288252 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.375605407 seconds)
  done (took 13.771509429 seconds)
done (took 15.456609234 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.832929423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.832325143 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766138369 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.832664261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.763349979 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.831544108 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.812753697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.769476919 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80052758 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.769671897 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803310262 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767814755 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756601171 seconds)
  done (took 25.025979969 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979481236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.988430098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.814748574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.977344574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.790155112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976503288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908792771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.894406575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89939405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760607676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758327276 seconds)
  done (took 22.435358995 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984980051 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.987756295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.821399148 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981056049 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794731074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985291117 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909409855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897401745 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898244479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761078012 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758495583 seconds)
  done (took 22.467851624 seconds)
done (took 71.614066906 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.753253912 seconds)
  done (took 3.440649597 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780053938 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933381135 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.761623919 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.756621194 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753314031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.755431937 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758375569 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754302327 seconds)
  done (took 15.942627298 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.753316072 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.752849228 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750387363 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.753162812 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751347214 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750282938 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.75373827 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.754108187 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.75158186 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753840881 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754456191 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.751865749 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752119913 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753777409 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751320513 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.751992048 seconds)
  done (took 29.729556293 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.752867273 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.752521511 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.75166855 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752223871 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.750792931 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752988067 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.752057459 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.751824325 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.75142927 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.751563495 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752746572 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.750571824 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.751876528 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751467695 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.752057189 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.75275906 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.750802394 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.751939635 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.756464423 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.75255547 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.755683915 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.751670429 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.75216106 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.752966732 seconds)
  done (took 43.747617956 seconds)
done (took 94.547612472 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.59111583 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.450587845 seconds)
  done (took 8.731811897 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.756125753 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755307718 seconds)
  done (took 5.244465858 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.75533466 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756095183 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756496174 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756936858 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.755584388 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.755930048 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755527206 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.756601771 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755690579 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.75515142 seconds)
  done (took 19.24972794 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75614399 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756847306 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.753460327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.75673936 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.757363383 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.753726451 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.757608928 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75733827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756169008 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.753646157 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.756227014 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754045683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.755423227 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.754648132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.757821773 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.754719729 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.754926381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.755732668 seconds)
  done (took 33.294214279 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.757101141 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.758696781 seconds)
  done (took 5.207574991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.754667588 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755135467 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754216605 seconds)
    (4/7) benchmarking "year"...
    done (took 1.754573 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.756031989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.755313795 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.755104361 seconds)
  done (took 13.977140079 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.759540699 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.923151754 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.993274283 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.391491224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.759836317 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.76117738 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.697794705 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761889521 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.762228381 seconds)
  done (took 19.503246407 seconds)
done (took 106.898190129 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.622974334 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.759568313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097558015 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.815978286 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.808010602 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.093897854 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.795325061 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.057868367 seconds)
done (took 42.74320351 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.847292549 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.299109739 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.341854968 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.178559949 seconds)
  done (took 12.513072215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.739484647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273771421 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.793499667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346504959 seconds)
  done (took 19.868997575 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.126573495 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106452513 seconds)
  done (took 5.932753736 seconds)
done (took 46.856273539 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760600978 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.760923218 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.757949916 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.756587501 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.759616488 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.75970995 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.757031925 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.757191411 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760024566 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.760318888 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.759727219 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.760078927 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759795957 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756888383 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757534369 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759600826 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.757283201 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758309549 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758877858 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757251483 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760315038 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.759211537 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.75747568 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.760491508 seconds)
  done (took 43.909404246 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.760086352 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.759181019 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.761545468 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.760971731 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758044776 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.76223698 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.760340736 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.758853468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.761342238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.760884985 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760075281 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.758388894 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.760718811 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.759337535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76127686 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.759363964 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.762667817 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758687299 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761611623 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.758849239 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761649915 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759263995 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.758751345 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761185119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.758913414 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759668673 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.76154038 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.760194754 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761546906 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.759897868 seconds)
  done (took 54.506444079 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766828193 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.769761533 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.764929445 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.763799307 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763487159 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.763038945 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76324179 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.763492073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.76512388 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.764091871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.763093752 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763313308 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.763531709 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.764233477 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.763070816 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.763112978 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.764326982 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764288836 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.763837167 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.765339687 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.764551964 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.764157317 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.765358447 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.76463313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.764760367 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.764788822 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76384007 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.76337271 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.764298116 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.76457427 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765041501 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.765278775 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.764997665 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765212195 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.765341408 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.765365636 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.76998068 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772917542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.765794143 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.764907816 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.763819972 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.765411783 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.766078572 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.766147971 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.764638303 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.765457851 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.764304367 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.766060821 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.765681651 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.764707877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.766240925 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.765008454 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.765922695 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.767906244 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.765873046 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.765835993 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.765034361 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.764962411 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.766380224 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.767285366 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.765288981 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.765414106 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766239016 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.766985574 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.766865601 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.766517674 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.767406373 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765941556 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.766294368 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.767104951 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.767816832 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767349793 seconds)
  done (took 128.807789893 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.766076435 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764558553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.763478561 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766776414 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764046601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767287147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765485991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767265401 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764176131 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767943453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767004028 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764844318 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765118932 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767424816 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769489639 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765896991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768043848 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764896667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.767163036 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768171314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768596888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.764493702 seconds)
  done (took 40.559652848 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768034788 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768305716 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766460037 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769058929 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765119117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768838412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.768817617 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768527851 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770866271 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76589368 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765632771 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768015994 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765121162 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765830664 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7677705 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765867718 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768763918 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766691392 seconds)
  done (took 33.516312329 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.7660588 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.766590445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768334874 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.76767197 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.765908159 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.768455449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76799117 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.769286467 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768795643 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.766304333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.769581891 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768760755 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.771540702 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76663279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768720339 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.766213852 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.770661148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767698751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769770822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76583686 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767533876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769362905 seconds)
  done (took 40.60182758 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772013488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771341741 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766940745 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.768467147 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.766526914 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770525781 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.771860294 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767581104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.770524274 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.770916534 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768439743 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.770111382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767283588 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.769102206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.768287682 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767535158 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770443116 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770006518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770903739 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.768046995 seconds)
  done (took 37.092111677 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771913386 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771241909 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772289225 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771048108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772299612 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.770919877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772171544 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.773240907 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771346562 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772327977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77161252 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771527843 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771376254 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773254087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772858113 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772512654 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77223289 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771263509 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772454188 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772986198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772963901 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772677007 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772362864 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772023697 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772874904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772010531 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771916383 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772448488 seconds)
  done (took 51.32739413 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772253926 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772845251 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.769407306 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.76999414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.769741435 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769850156 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.769669704 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771312787 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77250055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770958114 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.773636906 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.773423674 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.774831149 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.773737263 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772764884 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.774212843 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772242052 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.771330676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77235048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771620177 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.77353687 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774425829 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773634043 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.770928264 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771359413 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.772790472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771315484 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772274712 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773776434 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77269306 seconds)
  done (took 54.873978432 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.790949501 seconds)
    (2/2) benchmarking "in"...
    done (took 1.792816888 seconds)
  done (took 5.291736539 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.771554389 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774915999 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77359185 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770371126 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770413663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773630242 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.77251645 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771594516 seconds)
  done (took 15.887342063 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.773479403 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.77371142 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.773781956 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.773605283 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.774457485 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.773556011 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779634023 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.774495955 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774793479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.774400845 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.780262996 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.780526732 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.77586263 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773721447 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.773906732 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774680572 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774316538 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.774449462 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774480575 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.775295647 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775055645 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776888622 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777063543 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.772892949 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.775694926 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783562298 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.778950089 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.775066586 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.77591912 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778603477 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.774730225 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.773329892 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775703075 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.775512037 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.773957292 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.775381799 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782511597 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775970301 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.780129405 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775384371 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77629278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.772446087 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.775504541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.7769426 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775577757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.776312696 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.776941453 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.772362994 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.775953684 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.77834096 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.779976284 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776204195 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773867647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779415479 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.776653697 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780823679 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.777182994 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.779108345 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.784922063 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784972479 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.788258962 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.783401704 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778464516 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777013783 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786725097 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.799272029 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783059578 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774378543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774038075 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.777537987 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783104992 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788777205 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.785123393 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777123818 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776672091 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.777858417 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778237505 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778454375 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782834592 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.779813107 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.779105774 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77720142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.7872708 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799557243 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.77810153 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.777531634 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.777968341 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.778617426 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.779847465 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786455366 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.779751337 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.779711555 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.778182739 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.778360415 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.780476633 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778984512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.777796038 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779737131 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776457651 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779252766 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778052758 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782300622 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.787511504 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778827244 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77959313 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.785224921 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.779328424 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779951597 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.785661981 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779632291 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77968215 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780228543 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.785208303 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.777128739 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782064059 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.787533551 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.78024564 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.780607893 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.779860351 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.780665456 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789228045 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.803412998 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.780244617 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.779242018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785488026 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.790476158 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780728915 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.782975096 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781027905 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.777662956 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.778387174 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.781697419 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.781038415 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.781512323 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781114473 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780843656 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.779768432 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781130848 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.781157682 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.78194248 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.783051678 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.78173906 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.78168436 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.782603284 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.781525945 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783527602 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.786716744 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.781329159 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.782307318 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.782776508 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.779520383 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780702571 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.782368374 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.782826708 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.7824807 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781710636 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.781758447 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.781445373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782393652 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.782476392 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782483528 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.783198646 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786026444 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.782129598 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.785799626 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.781625897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.779675951 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783052831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.782493378 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.781726763 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782823321 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.782256029 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.784952337 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.790020397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.78396023 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.783024298 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.784823714 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784001384 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782049885 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784027608 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.785361798 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.78941077 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.783411087 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789174232 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784172381 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783629128 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784125768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.782656606 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783132037 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784251245 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.786225934 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.790797616 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795803762 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791972459 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.784549215 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788869303 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.785242795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.787689085 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.786610183 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.784243294 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.784831911 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783945131 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784319413 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783735122 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.785415283 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.784048961 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784348999 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.784621125 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785178601 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.784053583 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786332838 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.785281526 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786703518 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.782753409 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785142749 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783747807 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.783942627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.78281298 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.783566888 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.785636383 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785206505 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.78498907 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.791017601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.781987643 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786423601 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786566261 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786121909 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.784844534 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.785729709 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78710491 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786162642 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791519797 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.786018374 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.786369008 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791785581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.785766738 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.785990702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.788516571 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.787190301 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.783529529 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.788426393 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.79255484 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.785945288 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.785988754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.787108356 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786209182 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788286487 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.791670302 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.784344533 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.78687837 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.787312297 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.788695064 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.784329803 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.787873504 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.787615653 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.787719892 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789677084 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787021838 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.787937196 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788256213 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.787760681 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788172958 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.787545237 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791767726 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.795310464 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.791941132 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.788117073 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789314546 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.789821568 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.791423557 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.788134658 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.787706019 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.786537926 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799955862 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79485389 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793610178 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.788871611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.788204293 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790936928 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.788581082 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.792507007 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789456362 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787770852 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.788644519 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.787450764 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.786322673 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789429763 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.788951594 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78947882 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.79009767 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.792320789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788681635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.788297819 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.78798805 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.789856194 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.789615078 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.78897141 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.790883201 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.790739573 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791100941 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789059334 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.788908442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79428365 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789458032 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.790319651 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.789407591 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.790554841 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.788960082 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.79039002 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.78955003 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.793156318 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.798082192 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.793044229 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.798654346 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.791517934 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799497871 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.791412994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794440152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.798011053 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.788581597 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.790688084 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790942519 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.791286662 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796025273 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.791522255 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.791140418 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.794773123 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79025069 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.791291077 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.790744245 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.791993141 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792356374 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.792578889 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797472681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.792596102 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.794970135 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793346915 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789173324 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.791260081 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.791268823 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.79115751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795404554 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.791648392 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79256728 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.790650683 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792161402 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.791851034 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.793378197 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.792294876 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.789196515 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.791589161 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797503778 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.792012676 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796174396 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792760068 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.798327666 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79307335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799115976 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794059445 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.793433439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.792228206 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.793340672 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.794124927 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.794187751 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.794909651 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.793243959 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.793140585 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.796143164 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.794140794 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.795148728 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.793857304 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.793218862 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.792594447 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803013153 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814332609 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.794402566 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797582255 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.790799513 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.794853916 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.797488713 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.794748922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.792586414 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.795566241 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803738827 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800428459 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.793484853 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.793923959 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794206835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794596858 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.793696114 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.794422045 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.794866364 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.794422737 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.794488467 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.794979624 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797539978 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.795347442 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.794624888 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795091747 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.796126423 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.80343944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.794471626 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.795229257 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794894042 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.795067093 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.795262548 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79626148 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.795612937 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795304416 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79538586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796640572 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801263645 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.801657644 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.796845487 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.796776974 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797137815 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796325601 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796076436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796911796 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.795837416 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796255018 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.796747647 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.796797061 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.797078946 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795502052 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796412007 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.798589059 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795796594 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798778238 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.803241742 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797113586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.794935134 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797058559 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796089979 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.79548424 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.796176162 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.803389609 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799168175 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.805724028 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.804760425 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.799945704 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.796867278 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799116709 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.803961094 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.796817732 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.796848232 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.797306507 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.798683036 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.799145278 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.800851702 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797167463 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.80465689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.797985697 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.7964745 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805396746 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79804538 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798334739 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.797967032 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.80167841 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.797394667 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.794568913 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.798386521 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.796251173 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802999611 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800004668 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798956117 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79921178 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.796519522 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.798980223 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801239654 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799088969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.798997806 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.79666158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.799101245 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798094271 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800338469 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.795941454 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.79830296 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.798618698 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.801201713 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.806416721 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.797683844 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800987758 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.799407065 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.799037626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799722388 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798887403 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795541191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795581132 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799453414 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799108784 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.799224142 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.802343924 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.798330944 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.800220313 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.800499749 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799808968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803018776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.810560874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.806151165 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796653316 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.79904709 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.7997773 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.802695473 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.799891438 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.800678098 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800534602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.801434783 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.800968286 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799683887 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.800599345 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803698886 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814563548 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.800803317 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801243205 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.80226643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803795443 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801429923 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.798268655 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80131216 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.803735006 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.803345095 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.808576182 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.800198867 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8063118 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801415148 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.802601993 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.805482448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.804787724 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.80856645 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.803892013 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.802340101 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.80296029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.806211902 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.816512987 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802518872 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811767597 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829590451 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.801873526 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.804042659 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.802093593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802048605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802107555 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.804307702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.802838332 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.80378256 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803443674 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.802687442 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.803425063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807918206 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.804289469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.803068605 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.802635177 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.802611645 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.804325625 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.799399874 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.803011169 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.802991177 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.802773708 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.803909347 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.804072208 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.803169515 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81549346 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.812867619 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.803993994 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.803565212 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.800685824 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.805841818 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.806307438 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812569155 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.810942355 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.802905095 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.803966422 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804859234 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802710051 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.800726978 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.805815668 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.803457138 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803572924 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.801494315 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.815613037 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811934934 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.808925511 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.804744816 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804314718 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.805194678 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805945051 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804338231 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805037738 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.806672664 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.805096286 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808204559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.804986439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.804823192 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.808483582 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.812594884 seconds)
  done (took 1069.165962439 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803366348 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802315484 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803149289 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80241545 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802114789 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801823253 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802159026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802336793 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802408484 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802160996 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802820046 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803159766 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803383102 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80321352 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803338466 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802760004 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802865107 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802956571 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803624302 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802873745 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803210534 seconds)
  done (took 39.598263529 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.806416931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.803517167 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804027828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805601351 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803971057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806499192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803869285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806451707 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806000596 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803857719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807037696 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805223488 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.804648388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.803911658 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803586052 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807226871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.806348637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803443914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.806408854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803604087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807249056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805335224 seconds)
  done (took 41.454268875 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.808613871 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.807049225 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.80669675 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.805209921 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.808003303 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.804683655 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.80738331 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.807217467 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.80779005 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.807516093 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.806087285 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.808911176 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.814631737 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.812497771 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.80983406 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.808007695 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.952272991 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.808904531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.807250081 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808156477 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.805609007 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.812307099 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.805261799 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806943269 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.807293071 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.808611883 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.808558704 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808807853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.808962862 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.809358587 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.813432417 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.808475642 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.808581478 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.811148353 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.8089351 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.808623178 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.813673863 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.809596554 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.805538453 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.809916733 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.818463059 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.828784449 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.810406531 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.813770813 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.809068453 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.810202166 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.8141474 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.817114235 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.808285627 seconds)
  done (took 90.559470333 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809601646 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.809550653 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.807560114 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809430611 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.809292263 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.809512921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.81091955 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810318054 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.807534514 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.807785151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.810630624 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.807052134 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807784734 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.810225807 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.810954822 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807964894 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.807965934 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.807685838 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.808498854 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.807967397 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809325572 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.810255883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.81192339 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.808716318 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810272695 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808553936 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808050546 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.811081376 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.808567533 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.80773179 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.810656112 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810828553 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.811193413 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.808540934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807770615 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.810627637 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.812331606 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.808691378 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81220869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.809678185 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.811834669 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811751088 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.81150273 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.811858144 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.808792708 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.808871228 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.81004717 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.809031691 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.809262588 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.812108255 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.812059298 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.808971705 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811996612 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.809189929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811532817 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.812405351 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.81125428 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.810024726 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.811838391 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.809498703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.809813307 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812896349 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.810156876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.813211719 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.813152446 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.810117055 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.810819586 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813686568 seconds)
  done (took 124.827884054 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813529495 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.813273359 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813985415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813750378 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815240285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.813938343 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813442247 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.814726414 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.81382814 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813344833 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813754013 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.814577361 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.814912757 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.814189306 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81473153 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813227388 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.815560763 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813981624 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813905911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81494274 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.81637404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.814548053 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815060021 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815250652 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814472768 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814467337 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814278642 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.813791794 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815375987 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814720219 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814923158 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.814687674 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815383491 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.815694615 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.816590197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.815163633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816131353 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816745921 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.815090592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.815824994 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815354009 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816248616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815078378 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.815488154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815570016 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.816462391 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.815415516 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.817447952 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815986156 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817044754 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.815724178 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816938044 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816250996 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817880466 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816491353 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.816814132 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817426437 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816485009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817486706 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817574096 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816269572 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.816842854 seconds)
  done (took 114.29913827 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81654313 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.818087649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.815123576 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.814999007 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815644816 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.81335556 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816335521 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.816854299 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817080401 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.816531533 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817537969 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813802665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815203609 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816433396 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814188484 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815602594 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813946852 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814664524 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817952732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814899447 seconds)
  done (took 38.065844367 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.814294687 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818191149 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81595543 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81551888 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.816851128 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.814568201 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.81707933 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817878298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815910861 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817822047 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818711633 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.817661197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815392742 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815307063 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.817790765 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815498956 seconds)
  done (took 30.815178687 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.815278731 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.818322056 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.820682587 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820422327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817142815 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.816297375 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.819077313 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.816445925 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.81646412 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.819352933 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.819936006 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.819098655 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.819198599 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.819645247 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.817197898 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.819622283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.816452068 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.817165465 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.819311175 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.820300565 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.817782599 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.817362134 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.819650949 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.8189191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.817214927 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.817716943 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.81750666 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.816687838 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.816430428 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.820194488 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.81722239 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.817865386 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.817372069 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81745786 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.819545994 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.818900536 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.820357258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820297061 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.820169796 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.82128564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.821140625 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.817607177 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.820282403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.82003452 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.817794399 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.820281995 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.818170012 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.818563921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.81857328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.818321445 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.820372761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821065611 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.821837313 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.821942139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.822152343 seconds)
  done (took 101.789590218 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821808648 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822229969 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.82011535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820740608 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821315645 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.818719415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.820878021 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818643164 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818775587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821827774 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819477212 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821964284 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819489415 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822099918 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820699982 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821845847 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.819889938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819943417 seconds)
  done (took 34.525888985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820096628 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820580895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.821824153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81877304 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.819356195 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822886811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819995329 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821614469 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822214873 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.820401522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820987326 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822847015 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824203255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823139723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.820366205 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819823235 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.823138303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822358694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.819751518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820604546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823296992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82391524 seconds)
  done (took 41.828594372 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.822917705 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.823546597 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.838792497 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842400151 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.844347371 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.859560113 seconds)
  done (took 12.788588902 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821723188 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824517018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821346156 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823996425 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823836445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821809404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822365845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823029897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82364595 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822538964 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822505224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82487807 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824725282 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825182629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825045169 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825001987 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823715188 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82264645 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822800213 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824517527 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823151132 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825479576 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822476572 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823021424 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823615315 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8237739 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825752623 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823151574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822619407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826055303 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827122471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823342591 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825559724 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823829368 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825670329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825897427 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823775646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825366054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824831864 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82515082 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827608428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826427526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82589506 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824138408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827315223 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824336863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830450806 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82424003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824518385 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826730371 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826256841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82378924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825974702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826300394 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82672059 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827602702 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825455574 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825450547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828376822 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825399692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824949817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827097637 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824899677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827086233 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827520005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825652131 seconds)
  done (took 122.19782645 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825400505 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824569101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825553821 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824313238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825499279 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826181673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825269018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825400292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824375843 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824784436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827559116 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824968498 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825550867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824691316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824471141 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825027913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825418289 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825963342 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825464005 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828653144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826043454 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826630834 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826120483 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825609735 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826009702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828637641 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826066911 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825813884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825612592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827558145 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826291974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825638594 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826053532 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825860845 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827463728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82609197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826606179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826488729 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826264446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828606382 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827078116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829808567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828141847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827052751 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827293575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827619557 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827518563 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828501965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828087442 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827531595 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827532894 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828398689 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827927263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828078012 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827227863 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828072036 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82854088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827912371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827795687 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830194513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828891161 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828250796 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831238752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827985903 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82711635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829089404 seconds)
  done (took 122.334934268 seconds)
done (took 2492.320617261 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881056863 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.95227494 seconds)
  done (took 15.596490617 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.992685635 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.944873519 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.829971234 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.877876015 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.828448776 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.845833131 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.836486944 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.829734398 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.82977622 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.830094451 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.82994875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.017125569 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.8813465 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.829925051 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82956382 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.923085212 seconds)
  done (took 51.743015235 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.833293939 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.834130055 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.843172015 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.835514301 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.832403876 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.845048239 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.866543602 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.836045847 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.86605412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.844771985 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.901488021 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.843769341 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.83201314 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.882552305 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.84562722 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.847734494 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.923472962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.907374035 seconds)
  done (took 35.186402657 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.910268838 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.832684134 seconds)
  done (took 10.51497163 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.848691456 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.826498103 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.851839695 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.858707239 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.82970758 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.839587277 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.860649997 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.85987592 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.847614028 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.875755134 seconds)
  done (took 70.282383608 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.838597545 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.834608858 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.835227664 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.834070856 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.826106959 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.830757839 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.833398543 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.825950826 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520516783 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.86978393 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.839841697 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.839964674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.834201935 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.83474173 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.832121861 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.856049163 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.022270008 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.83191898 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.831541958 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.839873323 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.834755057 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.895127447 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.847109017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835759602 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.864233666 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.521166917 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.843142321 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.840397494 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.969376784 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.832014538 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.834837764 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.834481344 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.837535911 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.210566289 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.104874454 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.833840803 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.843272331 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.841975582 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833364206 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.943421115 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.836490401 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.841610031 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.712397658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.086055286 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.949673771 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.877938069 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.202384946 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.839349186 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.836154666 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.865940925 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.838556722 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.836310306 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.848167016 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.342083264 seconds)
  done (took 130.696034682 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.829888547 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.093540215 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987692781 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832082357 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120734119 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039615395 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833066363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880109921 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833063477 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.060833359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053282082 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941907011 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833546773 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.830763377 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.833072764 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.831150645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.992238157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.905749632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833374176 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.830549716 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863146168 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076480061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.966235965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.835789877 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.854234928 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044272405 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.969287348 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.942767171 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.284036009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.830468973 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89804238 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.832907454 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.832883146 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.830276288 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989192895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.93030711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922994338 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.833010244 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83152057 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.831957872 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.508299095 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02908118 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930345556 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.97772435 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081316423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.038648528 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.621116925 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.831914692 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.568559577 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995388171 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.068726633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.064203762 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.958723121 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.835878628 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.345132073 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.833008819 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.831133837 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06952632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065933769 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937801196 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835762302 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.834077889 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83207241 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079402825 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.836317938 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.930874603 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835219256 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.833699453 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930971527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940127371 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.066448002 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047419041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86794209 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.167608702 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.311524174 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083291598 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.903927509 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06913192 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83698498 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833278302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91943408 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.787056512 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035194336 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085411618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091483023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873681097 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.558815539 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.833933346 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.064631232 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059465301 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.137494158 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076128612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.989165193 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.142845861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834102311 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.83393979 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066867295 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974980409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837039651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196536806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071094218 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.402295474 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.865963861 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.179774329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970744184 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838360541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.477856796 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.83512442 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062438812 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879493828 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.836761149 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834524373 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056651711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.910538503 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834875669 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.477490182 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.902071225 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841128942 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072610437 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.838240462 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102658108 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840963023 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0764641 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.856915229 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871960447 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.068172994 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.07954186 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.838436255 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08381236 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084481296 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956185154 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.060885567 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.457323672 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.836635998 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129885836 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840270317 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.83809119 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.010744732 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839296695 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985568336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.840290768 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172753294 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864576375 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996041726 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840154083 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.095585283 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.87540341 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891594395 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.840674146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97236033 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839717506 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.755760915 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992100161 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838430102 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836214419 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.562220432 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.837264116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995733168 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.072337104 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864776373 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914518321 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.511475598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837548095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927070683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865514863 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.191544485 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.839463052 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.054592736 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.841849367 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.374868064 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.837699013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08169206 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.023486742 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.842650254 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.839630386 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.745574222 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.839508875 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837997835 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002815171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.99340613 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839057976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045188904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844348876 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981750023 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843101868 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.914438436 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196482533 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838968798 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841658666 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.839651677 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.840567811 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838961636 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.108004436 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873633315 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.364448722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981542852 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113349792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.160473748 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.09198076 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.887048018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.84261983 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091124809 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842902925 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.90617468 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.842211478 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863265571 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076266437 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845346161 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.055355344 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12469245 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.766356546 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.843292408 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841543932 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.797800691 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99977469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93500998 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.843878202 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.84197873 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.967445957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974496758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.057301348 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.841578183 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.174757989 seconds)
  done (took 896.788310776 seconds)
done (took 1212.570980526 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.839933951 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840672413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.830255813 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844291875 seconds)
  done (took 29.135293998 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.850068646 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.847350919 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.847961908 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.846674141 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.849842024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.846866973 seconds)
  done (took 12.868146783 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.868711622 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.843433323 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844599092 seconds)
  done (took 21.33845092 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.916983039 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.260276512 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.960177245 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.295691592 seconds)
  done (took 10.214746341 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.850251641 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.849532265 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.849823716 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.850576075 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852186198 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.851794107 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.850020951 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.851534428 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.853325198 seconds)
  done (took 18.442388081 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.197552183 seconds)
done (took 97.976277517 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206007036 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.325075141 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.011530566 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.832736961 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.833203389 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.310082295 seconds)
    (7/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11998816 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.98036775 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.830931925 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.236850672 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.854846983 seconds)
    (12/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.859545884 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.163037428 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.88878304 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.055909048 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.045587846 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.871243781 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.143448822 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.107358826 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.217734852 seconds)
    (21/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.868492421 seconds)
    (22/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.828582753 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.60067088 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.959852529 seconds)
    (25/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.849910156 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.894677122 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.962525229 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.934327426 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.210102684 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.1187566 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.957523567 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.949788523 seconds)
    (33/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.185504802 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.93301447 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.359851087 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.503951366 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.96127275 seconds)
    (38/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.188353992 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.911531162 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.758485437 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852183076 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 4.014518642 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.825519927 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.965634183 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.869736743 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.552340672 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.039833029 seconds)
    (48/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.396830611 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.86315855 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.831753644 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.7607841 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.961170524 seconds)
    (53/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.872044533 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.173640298 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.960831262 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.095444314 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.043630634 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.118966084 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.876184587 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.913649752 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.948160482 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.656501281 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.156375744 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.789851212 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.539523939 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.906337434 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.874568832 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.445024799 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996729094 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.898937652 seconds)
    (71/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.181892206 seconds)
    (72/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995842266 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.851895917 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.850282604 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.115491827 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.880205684 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.989907153 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.069871518 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.932292739 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.833942368 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.58022891 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.876610947 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.4317964 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.04958782 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.255301857 seconds)
    (86/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.874864391 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.972381574 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.031289332 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.94858126 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.31576627 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.241083295 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.523693748 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.93706967 seconds)
    (94/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.126518066 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.994419556 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.962059878 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.907405674 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.89886102 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068568108 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 5.584789446 seconds)
    (101/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.241026573 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.05593133 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.874711987 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.168020253 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.92197656 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.20316077 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.989405015 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.237825371 seconds)
    (109/309) benchmarking ("sort", Int8, false)...
    done (took 4.895377517 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.419199829 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862468122 seconds)
    (112/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.858449223 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.902170964 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.872599872 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.850456692 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.239158438 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.056259303 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.945359217 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.870915508 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.05687926 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.856326511 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.090599413 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.839430056 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.046761572 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257867667 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.850804229 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.2984031 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.873605773 seconds)
    (129/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.84991277 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.196244594 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.032095628 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.055931571 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.855742594 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.902852058 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.123835628 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487337303 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.12580714 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.863653127 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.22531946 seconds)
    (140/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.961761241 seconds)
    (141/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.161654047 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.841637496 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.318320114 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.539627 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.969302211 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.936739276 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.329476384 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989369559 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.545293623 seconds)
    (150/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.00623709 seconds)
    (151/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.76938493 seconds)
    (152/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.168216924 seconds)
    (153/309) benchmarking ("sort", BigInt, false)...
    done (took 6.85260476 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.166095993 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.921415132 seconds)
    (156/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.858288065 seconds)
    (157/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.050378188 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097421083 seconds)
    (159/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.164133916 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.979941089 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.89083923 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.845906213 seconds)
    (163/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.184361507 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.151694947 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185875348 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.932461018 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.979076237 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.274820781 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.120392656 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.881143098 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.024772295 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.160122461 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.371863635 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.099388148 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243164582 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.881705592 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.414632781 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111915344 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.962500171 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.18905208 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.931301474 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.988572323 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.963679799 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.158637097 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.370223239 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.656434812 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20124145 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.051220024 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.788764031 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.924501505 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.838571844 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.282086062 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.3704977 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.461256614 seconds)
    (195/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.938843662 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.938323294 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.85398016 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.094599538 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.884339207 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.855414767 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.94795372 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.923423783 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.853987827 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.895444651 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.777054044 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.993122778 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.250531114 seconds)
    (208/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.047648028 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.154481122 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.238404626 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.097204709 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.861459958 seconds)
    (213/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.028974405 seconds)
    (214/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.14841659 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.866686545 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.234187611 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.883842158 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.939476493 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.914005829 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.153622585 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166382684 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.842087395 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.478357025 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.796276417 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.204403779 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.423364498 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.676259266 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.080432704 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.196632509 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.498596965 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.551938412 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.941724341 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.493926385 seconds)
    (234/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.856502395 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.753781084 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.329553703 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.879740047 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.036521532 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.882577496 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87882253 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.984649837 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.844567009 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.940617036 seconds)
    (244/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.883204698 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.935732842 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.187683489 seconds)
    (247/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.861052157 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.946965834 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.888589196 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.792050314 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07565289 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881179534 seconds)
    (253/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.867494588 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.93965882 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990694987 seconds)
    (256/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.946170365 seconds)
    (257/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.875461322 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.935462479 seconds)
    (259/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.859727969 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.385826079 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.895900544 seconds)
    (262/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.026444268 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.848369867 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.951123155 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.932968636 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.892745897 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.859188008 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.188256941 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.029827733 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.707535283 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.32475879 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.411057815 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.061947392 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.951410213 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.329349562 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.95262411 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.843610935 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.274467943 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.095819446 seconds)
    (280/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.981783355 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.85923067 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.969508826 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083700157 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.106341514 seconds)
    (285/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373658047 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.849908838 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.477435363 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.942251849 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.177193344 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.961693795 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.102607949 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.008166526 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.188089042 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.604596698 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.044170587 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.000049168 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.230727702 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.897765245 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.886395697 seconds)
    (300/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.977648276 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.670072383 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.009442643 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.552861059 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.954371749 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.879698535 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 5.618986752 seconds)
    (307/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.966577808 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.862135751 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.933701111 seconds)
  done (took 1012.51264541 seconds)
done (took 1014.355932985 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.89260761 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888103245 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.872195036 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.893943041 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.982185769 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.90022705 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.8822624 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.874131903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.922700915 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.921667848 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.870477005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.899357382 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.873384617 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.871806345 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.871683629 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886558827 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.181479029 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.899815192 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.889144491 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.881170029 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.888875529 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.871415727 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.921913035 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.899393672 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.876399974 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87498433 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.876210085 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891670329 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.984368742 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.876690256 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.875402551 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.884115628 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.179896915 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.899406093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.870004713 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.893329059 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885017628 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.883062386 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876851747 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907209102 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.325483278 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.88012882 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.875665946 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.87534136 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.874275193 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.878874053 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.875034013 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.880779812 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886994382 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887419061 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.320055335 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895579929 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.876248382 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.875232175 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883826034 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87465337 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.880619603 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889561358 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893426746 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889945604 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.171218286 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.905605753 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876267759 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890450998 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882035314 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.357483609 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876281693 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.879379078 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.325247862 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.88539694 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.359514721 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.888391155 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.875526028 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.890018524 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907165558 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.182409547 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.89609335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.875081947 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882866303 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.87417533 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.887017616 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887841408 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.880172397 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.876069134 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889837948 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.905589369 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.886644425 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.87705211 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884632076 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.895208631 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88285267 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.886956145 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.880115701 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870873479 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.885810124 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883519178 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.879430219 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879536028 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880181068 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.887408062 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.32496274 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899510334 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.873900107 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873234356 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.875457143 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.891358613 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.324848385 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.884069171 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898859896 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.923959198 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.879613664 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.17402306 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907836283 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893134501 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.885862515 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.881638273 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872158639 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.173460898 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.349111816 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.898914607 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.879971658 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.875791891 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894168734 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.880976555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874494884 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.185023819 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.905940393 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891790053 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.998358136 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.888533379 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.908821799 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.876476963 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.880723014 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.908519489 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894054685 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.909867232 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.882533247 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89461341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.895149205 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.874772362 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.889855306 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889824747 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.880987336 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.886498061 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873009062 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.909177966 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89206373 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891540669 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.901233418 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000835976 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875786342 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.175040135 seconds)
done (took 294.915157019 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.94671392 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.876593364 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.976555644 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.876395084 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.958211977 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.969411022 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.872717759 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.873767538 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.873047465 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.248245824 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.87409724 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.873775326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.873427207 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.873674227 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960382712 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.876048169 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874328015 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.21084311 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.877339091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.94878707 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.87547343 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.874470067 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.877152063 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.249276995 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.868969233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878845732 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.954800521 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.877583981 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.215070546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.870494067 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.873103031 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21396062 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.975606662 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.895782126 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887468257 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.884540214 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.9663732 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.881197986 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.966343756 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.959121597 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.980996558 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.9184018 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.878054483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.869323744 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.881587095 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879247829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.876281011 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.905909988 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.872659091 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.876511399 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213739574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889337124 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.876176248 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.876629753 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.876366541 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.908649603 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876084789 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.879180145 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.970331933 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.880057983 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.946204237 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.251075536 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.251644193 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.879478479 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.877246628 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.876652503 seconds)
  done (took 184.836399307 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.945875354 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.95081687 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.946102913 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.883401886 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.9279591 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.948549407 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884409808 seconds)
  done (took 15.296814787 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.886641153 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879272224 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.929221939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.928659556 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.878553334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.028018862 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879254905 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.891169304 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.876858615 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.93229035 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880399577 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880124146 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.885987487 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.878394248 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.92750175 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.891783064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.995142293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.881940834 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88049553 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.031556869 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.877469201 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.887630182 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.934193829 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.892945058 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880798648 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.886377325 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.47169656 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880261137 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87746997 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.881157732 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.877969341 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.92253742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882061853 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881892197 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878179619 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.997103305 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882400891 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878750299 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.882011164 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88161692 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.8813133 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.882073084 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.881858446 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.878761468 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.882612639 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.905146763 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.880601096 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.881601287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882540754 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883098462 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.932159421 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882319265 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.879228399 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.879657578 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.936861918 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891120041 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882767092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.879404395 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882906199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879758017 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.034402472 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930582557 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.882645571 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.930586981 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883205602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.883698073 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.88255532 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.882946485 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.977008909 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.882397612 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931443913 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.881829236 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.042729157 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.906733683 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.884203 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.885381626 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.886284679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88303242 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.879087162 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.890046981 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.880741718 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.885179845 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.890054238 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881350882 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882262679 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.996264757 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.990861706 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.88181256 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.896548642 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.891401986 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.882373316 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.936967927 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.883927629 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.880892979 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.938151883 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.00041106 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939633191 seconds)
  done (took 207.036411412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.889653448 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.892483347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.88634504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.901276188 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.884855634 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.884480336 seconds)
  done (took 13.153215863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.886065989 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.88645327 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.884167346 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885077113 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.884620202 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886043581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.885992622 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88576857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.888289013 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885732236 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.886041221 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.886632706 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.886592136 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.885250738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.886762488 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.884452338 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.885838221 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883064035 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.886249767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885988462 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.034606523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.886173639 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885079582 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.886676353 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.890724727 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.886374459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895447219 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.885300335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.88642047 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.895732248 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.889748026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.887693772 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.887459166 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.893267417 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.891178992 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.887268314 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891021346 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.888322489 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884212786 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.887830759 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888431666 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887980937 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.888149051 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.887720269 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.889046847 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.891657995 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.891611124 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895136082 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.88793059 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.888518628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888077342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.887135556 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.88888077 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.887604073 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.888739854 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892203649 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.891791985 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889218157 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.88806063 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.888912507 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.888824331 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.888318381 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888837804 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.892240866 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.893962046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.889784865 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.889180841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892837616 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888546762 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.887968722 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.889883341 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.886017289 seconds)
  done (took 138.916455111 seconds)
done (took 561.061694474 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.965742836 seconds)
  done (took 8.784182081 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.020029359 seconds)
  done (took 8.921754185 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.506301545 seconds)
  done (took 10.325609258 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.903991954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.910262311 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.885836223 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.888956262 seconds)
  done (took 29.418177586 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.043234571 seconds)
  done (took 8.862736988 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.895950983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.881583268 seconds)
  done (took 15.629540628 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.960954999 seconds)
  done (took 8.781316158 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.086547655 seconds)
  done (took 8.912211767 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.900125421 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.921085317 seconds)
  done (took 15.654725669 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.867349077 seconds)
  done (took 8.687281684 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.552950061 seconds)
  done (took 11.37919122 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.88869656 seconds)
  done (took 8.722873025 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.927176536 seconds)
  done (took 8.747759979 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.09484428 seconds)
  done (took 9.916077086 seconds)
done (took 164.561548189 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.886402972 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.882057894 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.88192075 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.882458427 seconds)
  done (took 29.352309693 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.92358499 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.922844913 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.925042557 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.935017801 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.926440101 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.92432838 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.916776581 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.915613808 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.933839788 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.927040325 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926109176 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.927199523 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.924873517 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.916729696 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.926380454 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.926312422 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.934604361 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.925837345 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.918995682 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.927842758 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.892040206 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.935167424 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.927863739 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.89240544 seconds)
  done (took 47.974247336 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.093844584 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.962947047 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.045044065 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.944623379 seconds)
  done (took 9.868482741 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.942535661 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.94502298 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.955352606 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.995666635 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.029313097 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.953676498 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.918289946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.912727445 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.899734747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.944241662 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.020498795 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937469061 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.029640078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.892461399 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.06946978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.891636365 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.892252548 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.943539737 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.995924004 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.010341693 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.892466092 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944011965 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948395941 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.939884497 seconds)
  done (took 48.726147128 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890979794 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.898745049 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.896508715 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891744329 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891546579 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.892280451 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.896856777 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.89311331 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.912088683 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893504947 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.891939462 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.891447633 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.891113114 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.892213636 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.89171401 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.904317114 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.90671444 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.892277555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.895352072 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.898616766 seconds)
  done (took 39.735884058 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.886467811 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.740149975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.238115456 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.142281299 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.886446528 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.886401832 seconds)
  done (took 31.604054207 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.90599651 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898861504 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.89319632 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.94993401 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.032195489 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.902538899 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.89486413 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.903764909 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.939347451 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.960197555 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.914422156 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.921160365 seconds)
  done (took 24.940505615 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.887918166 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.889436677 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.890440613 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.906545063 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.90518783 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.902845152 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.901810311 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.888130559 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.907733032 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.913032679 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.902929041 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.907282957 seconds)
  done (took 44.631749864 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979368802 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.778411849 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906598739 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632296548 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363236724 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101041974 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401881475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223961752 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.893689746 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162809428 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944684197 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99721743 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143073423 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888699365 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909818443 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.375657922 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182006692 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12339703 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914841063 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652298215 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94007759 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.624788571 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.720236028 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948070095 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102106542 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.024526741 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.151749157 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.846710981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02627148 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927966911 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901559107 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890761802 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164666015 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270868657 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995819622 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90179262 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547795916 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.606434604 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.880443707 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.684926689 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.67209911 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009813968 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89971736 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890877206 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826603614 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406129005 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268479086 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.896770504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.603661531 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892625688 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903005328 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980960063 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.896147621 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.708173367 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846947656 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172179332 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.88990715 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898273172 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463289222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001712851 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449430453 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.870009923 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.090262934 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739282728 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293134315 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.039522745 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.896524653 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896195489 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828441558 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.656300423 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944271357 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038220868 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.912813347 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543586033 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200260239 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.969556297 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837530335 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185798243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.153125958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.872108919 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122799785 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85088409 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829773539 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.768227857 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829530672 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167658311 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93069439 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.534834057 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932159516 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226345447 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904857766 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911051236 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901384168 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11788759 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.774878188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896135471 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.695039596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046894614 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916833758 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232378573 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829679242 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.898373299 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149838662 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.106403951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.156344517 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.416830756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047874022 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894662224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.976228098 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843656196 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944811164 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174142887 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951739507 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.996303333 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953107028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86301212 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190891843 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920794463 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.06175539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.968930348 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022983688 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.224029479 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187179419 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960500807 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896586531 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895906687 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.741803823 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.498224852 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.163410409 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.897838236 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418451052 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945834943 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.897104839 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831002764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.502968841 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974376609 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.868787104 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121319507 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876911871 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211344354 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831888317 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042373296 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010391188 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.119657225 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.539722405 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.965285474 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154468926 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57359894 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.196155164 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947014842 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917497298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014610534 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919531199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.347363431 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191091745 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.900970672 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.90313592 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.721126948 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.894733652 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898483266 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.903648356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702479471 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177844919 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922285438 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907616963 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790056121 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.912884838 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964490188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903643391 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908067079 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.44296987 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648402972 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909009763 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.532659771 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124101741 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90972253 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.670296938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011609393 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.981756839 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177400851 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958092175 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.833089973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61053423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.59102824 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899385247 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834971498 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899528947 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909904569 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910453484 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.279178534 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.186326667 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943479676 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.760917545 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.94314677 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911983822 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.906111076 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902523538 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.446604905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.02128427 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459901796 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948069278 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038565923 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.914703726 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835283226 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904899229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905288143 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901172592 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.870084483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954774617 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.66569857 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277997965 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158417529 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.593866337 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919247426 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.707158894 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.960543333 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.923076499 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724908316 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917254724 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.920181855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923991197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.913911283 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.679898638 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.597648386 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471608769 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221621753 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208612853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34666866 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.41239453 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208302155 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238086927 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137873775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432583875 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96354852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244191447 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847315629 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987433596 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.545018793 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244611762 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917511494 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130319168 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294291484 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.772238593 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927729888 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115258468 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937760655 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.856392919 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866505698 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.109750172 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045321368 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.650309753 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09850339 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234877805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.602090033 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.019549407 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.903035273 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.584826009 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988835367 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.614475127 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.265750561 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.473829089 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893847103 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36492003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913406653 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351036383 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253507247 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438235666 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.02572515 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840583688 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.915341082 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.915538424 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.90471665 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.902336202 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.788160099 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.15813465 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916033487 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140950782 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.206906134 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214729543 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.807429589 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.910242127 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905846119 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217577937 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.704839631 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075250152 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.36841918 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.433967679 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908368171 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840200055 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841165302 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.598860743 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913778256 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880054015 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13373301 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.087671165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861666815 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445318543 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150997482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.161476334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.9211619 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182795067 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179541509 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.642278506 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935106503 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.006946632 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608970686 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.005661428 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.176517611 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.142652084 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706403723 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138620413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.954231425 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.686469691 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906818943 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121213504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.176076779 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.827259217 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132750054 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629964307 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.91625975 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227304848 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964315578 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.857832561 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051527695 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.10565763 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918745594 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993210713 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918137669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.917482989 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919867148 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954147314 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861848198 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.024106055 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.921497161 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997105494 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.020665518 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.440068618 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.914852175 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189743625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271003467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23981585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966442604 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909188531 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918196514 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843649588 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044461582 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354913058 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182465703 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038955306 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.209659137 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933566535 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65375023 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317079122 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153856297 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184423998 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.80442651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909987293 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93648334 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.177080282 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920503515 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.121703179 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141014505 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226369512 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379479817 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3666161 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27848045 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184476563 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.279910051 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911040943 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500254143 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.918667971 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587354912 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.950210366 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852421497 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169468015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920501387 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293231554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933781159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.111432005 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.427098231 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686495985 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199741265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.896223655 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967270085 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186793591 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.301256337 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224362851 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98419166 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921715188 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.616784857 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048727461 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.801539322 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182536274 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913429205 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124086446 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.622723518 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921681993 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196292033 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220780046 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.910349222 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.798592333 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921092207 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.922400787 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135847864 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173169706 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164083826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922415748 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921558283 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.728947261 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190664271 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967527381 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847570202 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.916527991 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010143967 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161597797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936518256 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.430582321 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.625201951 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215441229 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.830095475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936195885 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480207088 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285260789 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236564968 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451469918 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136889968 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471349769 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904133548 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217824257 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.919014509 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436403966 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226029196 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.918885413 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.55623698 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954343514 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.181162851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230144594 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.922662711 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.688735605 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.884284237 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138823149 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507581847 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856823402 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916212683 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.975608239 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915460242 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046591019 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925812493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.825021188 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883323105 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66438195 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407235505 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.919423285 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.907497638 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.615725882 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.74408173 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953407977 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058642587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923800327 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.626078276 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.208026592 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169389968 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.562956852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.926431089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.920417374 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916181974 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843346984 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114245589 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.297176367 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212522772 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.386253205 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.954789663 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921033041 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.132483469 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12824021 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.785099666 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043411713 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43835917 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956295441 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.68580447 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.597404908 seconds)
  done (took 1703.97738812 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93811769 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.953295576 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.945971691 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.938300656 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968040683 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935951211 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.94408864 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9635241 seconds)
  done (took 57.439858948 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.91571173 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.114186697 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.92606065 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.918954914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.926951833 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.918275278 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.093616168 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.927586905 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.94221874 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.92680892 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.920112148 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.924313626 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.25016673 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.942422925 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.91884745 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.92002107 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.930478972 seconds)
  done (took 75.299504653 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.919664266 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.148642822 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.949272072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.93281666 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.883765466 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.922937096 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.966936544 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.938562235 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.927154327 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.137275885 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.560911713 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.934240922 seconds)
  done (took 91.077334754 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.929719205 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925460602 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.926096032 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.924706975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.925694213 seconds)
  done (took 11.491626473 seconds)
done (took 2217.967047661 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.204405268 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145210534 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.154893602 seconds)
  done (took 6.154836687 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.069774199 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.115393127 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.237868825 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.2573717 seconds)
  done (took 10.539340234 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.228887208 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.292780162 seconds)
  done (took 6.376823321 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.33413434 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.936985685 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.314883153 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.918674751 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.921416549 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.922784183 seconds)
  done (took 22.622822216 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.923650122 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.927294445 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.923901123 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.928020499 seconds)
  done (took 9.558809552 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.904624525 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.593546533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.905701455 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.92303689 seconds)
  done (took 21.182216165 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.6723924 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.354246 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.667734763 seconds)
  done (took 9.550782651 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.359561769 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.8032366 seconds)
  done (took 9.019759321 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.186494145 seconds)
  done (took 4.043873549 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.952671824 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.194955284 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443482937 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.455582352 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.53654507 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.776473902 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.250372413 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.176577877 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.328253436 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362513174 seconds)
  done (took 25.333720008 seconds)
done (took 140.028545041 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.310307397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.303776002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.14787909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.276998526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.171119337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.146548779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.114250167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.261937799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.778278658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.770124592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.318636199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.170950223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.060804128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.289956752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.064977647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.161942875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.169817128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.331907886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.974480557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.170789382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.131599742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.905773202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.160157835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.923414475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.169401188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.098455909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.48323853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.161122089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.127172412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.497038374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.163116877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.327196541 seconds)
  done (took 173.001865227 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.671239087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924189962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.922267181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.923772053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.165027606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924792163 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.926881897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.924385682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.079865871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.057760862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.924334035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.161788533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.926110616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.922936584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926350192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.92365523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.198533569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.732445476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931190744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934816677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.939480855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.056919882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939722097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.097879614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.222399578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942694091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.920118617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941286955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.930067145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.90330575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.932291141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92535665 seconds)
  done (took 208.714243561 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.924513813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.926564031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926308219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926521243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.925498797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926939908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.927989615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.927235313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.604555412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.59742048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931719291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.930803441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931265262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.926713545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929880818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925448086 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.930738587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929272671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931926986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934514495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.940042499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.645364781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.934562942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.66663636 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934070125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.934627884 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.927852009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938943961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.942553123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942337677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.941203403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92887214 seconds)
  done (took 222.464454553 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.128625636 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.933671835 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.934557276 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.87329355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.934386353 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.93454321 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.87732837 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.13068912 seconds)
  done (took 19.634752108 seconds)
done (took 625.685182766 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.405763244 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.261834631 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.122879362 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.957596607 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.209744669 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.996236123 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.95340135 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.016337621 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.685264925 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.024680234 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.594908418 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.972261782 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.687226071 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.98045273 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.07432507 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.012365946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.494508816 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589050251 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132074113 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.02520705 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.143457122 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.905821506 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.030007373 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.700757999 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.708382564 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952861944 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.132077985 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.504490449 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.966222276 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.115285833 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.728161345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.346945877 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.965464711 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.951146978 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.006443213 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.988675871 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.29021024 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.964814665 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.08591066 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.717620496 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.037364205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576347881 seconds)
  done (took 105.878931999 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.924659069 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.923515119 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.922632828 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.923137715 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.925012297 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.922934621 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.922140116 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.921504612 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.922834167 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.921857764 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.923889727 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.92514209 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.922394033 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.923957021 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.923216618 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.923747639 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.92298767 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.924832049 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.923293399 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.923286119 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.923133149 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.922980926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.937715261 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.923534791 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.923798031 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.925047146 seconds)
  done (took 51.901470762 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.937854403 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.0844995 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.190288002 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956966857 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.936903384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.940346928 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.954622185 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.942136088 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.939081117 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.938894445 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.029802645 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.943971235 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956091633 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.191616876 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.954449945 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.93884461 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.938672826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.939329215 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.092306963 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953399219 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.958274482 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.943240741 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.956810652 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.952208487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.938285044 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.938121165 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.942633224 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.418493544 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.946111258 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.030662677 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98184846 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.960836898 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.390301952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.201937024 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.994697634 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.946543464 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.939714568 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.031784493 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.944706172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.938354516 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.956908208 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.94422232 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.191343994 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.427373959 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.955114189 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.940043248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.427539258 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.043867268 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.982102879 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.951897385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.195697223 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.958229525 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.940531374 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.939331474 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.976359447 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950657179 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.938748832 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.296394674 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950843476 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.958439267 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.945340913 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.941622136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10140064 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.956698612 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088170246 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.951492669 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.947801019 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.941708764 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.194049175 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95965695 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.436948218 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.955815952 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.942312312 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.034148845 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.093095439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.460072838 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.954668703 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104271957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.411777885 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.966063764 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.948134023 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.409307071 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.969276352 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.94878836 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.943439594 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.944552337 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.942108014 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.987720114 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.959037864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.362544151 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.445615668 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.310934705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.969668605 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.957592269 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.942641228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.29428875 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.95027435 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.943237739 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.188657298 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.447906161 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.957205659 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.949876753 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.421329906 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.959041372 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.961254172 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.950177498 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.19935799 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.958530486 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.985474671 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.943158168 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.949916982 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.945425232 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.961415888 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.950345408 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.943240782 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.412072185 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.05251265 seconds)
  done (took 240.665174269 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.938302637 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.937714994 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.937340541 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.947856115 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.936200862 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.942890213 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.936715346 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.935202794 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.942446604 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.937314626 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.935878045 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.940022924 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.939289019 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.940243216 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.409560789 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.946589635 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.592441753 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.937481052 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.938299608 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.939739473 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.622990377 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.948517933 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.939595212 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.939978126 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.939461454 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.93992413 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.948346224 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.977967707 seconds)
  done (took 170.044331908 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.945611882 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128647296 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.963747145 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.98394554 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.956629274 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.943307692 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.97051392 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.965002379 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.952493477 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.944516856 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.943209088 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.007653705 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961371125 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.078194727 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.978387638 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.97988354 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052268486 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.955705658 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.945304531 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.945294135 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.976224488 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.942030009 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.008173947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.078843304 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.965876622 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066008478 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.952059956 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.947524097 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.945979231 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.067057108 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.963427812 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.008255871 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.978154473 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.965805128 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.074344394 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.065803611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055713036 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.978496449 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.95311535 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.946635313 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.945926179 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.934675104 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067251861 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.966472868 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.948938669 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055349882 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.965988921 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.949683099 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.956856376 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.947261569 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.962130671 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.968553558 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.016864778 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.082081888 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.982782755 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.974402358 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.973755701 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.252656006 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.957800809 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.049525996 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.943724789 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.068911841 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.971086282 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.93561681 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.949387249 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.954721965 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.977132283 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.981142018 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.055204777 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.956598203 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.050093682 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.985039447 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.954377402 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.947893509 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.950304549 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.069518807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.068653604 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.984619092 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.987055285 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.980837542 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.946655272 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.948974161 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.937245847 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.966437842 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.952676286 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069555392 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.0695726 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.957684267 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.951166923 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.951491389 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.951037995 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.975050903 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.079653527 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.98597586 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047522394 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.019124059 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.026599875 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.966337756 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.962851247 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.954787644 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.014604066 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967395094 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.96114916 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.30366912 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.02311072 seconds)
  done (took 211.141348029 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.41460312 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.003149933 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.01044351 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.262131776 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.381678359 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.842966457 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.998456303 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.001812584 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.025724197 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.195061887 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.076116713 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.017264224 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.986480606 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.975097895 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.002725534 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.02264971 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.01080482 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.336807388 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119515596 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.10545831 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.981755755 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.295416593 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.31688639 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.419073797 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.034927416 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.342524709 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676332441 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.247977957 seconds)
  done (took 63.991188587 seconds)
done (took 845.48409722 seconds)
SAVING RESULT...
DONE!
