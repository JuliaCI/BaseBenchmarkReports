cset: moving following pidspec: 4238
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.598745711 seconds)
loading group "string"... done (took 0.502290509 seconds)
loading group "linalg"... done (took 8.721875373 seconds)
loading group "parallel"... done (took 0.181910406 seconds)
loading group "find"... done (took 1.24567543 seconds)
loading group "tuple"... done (took 1.994059919 seconds)
loading group "dates"... done (took 1.317551569 seconds)
loading group "micro"... done (took 0.206565896 seconds)
loading group "io"... done (took 0.583477022 seconds)
loading group "scalar"... done (took 40.895326205 seconds)
loading group "sparse"... done (took 12.682984121 seconds)
loading group "broadcast"... done (took 1.028491819 seconds)
loading group "union"... done (took 14.115738354 seconds)
loading group "simd"... done (took 4.862225872 seconds)
loading group "random"... done (took 9.742218848 seconds)
loading group "problem"... done (took 2.173078362 seconds)
loading group "array"... done (took 23.729707013 seconds)
loading group "misc"... done (took 1.05800764 seconds)
loading group "sort"... done (took 3.55522844 seconds)
loading group "collection"... done (took 20.557454688 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.581184603 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131553893 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143125789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171597763 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202031591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134827385 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152359592 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.458973597 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.020661015 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.223373244 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124322551 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529801443 seconds)
done (took 5.576324001 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224258991 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072723214 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127194985 seconds)
  done (took 0.849231537 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074678733 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169867651 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091384052 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106813681 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10798333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10640876 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091593793 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107368225 seconds)
  done (took 1.433165524 seconds)
done (took 3.240538242 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.798354356 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.809172527 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.477764457 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123365641 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153025219 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126142744 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.306208432 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159579131 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11117054 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113562948 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176477397 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400171762 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.41800776 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.917417175 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092868109 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126854861 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.07906147 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690631244 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080674672 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127761643 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499368882 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.106927122 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113657358 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122835672 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204366555 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127062646 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17824903 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102223647 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670716634 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099553104 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179500694 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097735602 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157412288 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.22312051 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078645605 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105028693 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65996064 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187917673 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107055299 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09193037 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666507884 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078838918 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186449745 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104930945 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107957631 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184777732 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11350323 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077837514 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098189594 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099523559 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.15061225 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.447808697 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102644881 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.13943345 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.105509847 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.675694173 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099139445 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15346966 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124041456 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10538332 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093663719 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114395162 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.152687552 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.119618949 seconds)
  done (took 19.396304314 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115230792 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137451521 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092911105 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135705964 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136321386 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095065685 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082499027 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093535126 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107597184 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179784477 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134070551 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143433856 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090569127 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078392935 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116919139 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247015436 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101547418 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118892808 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079072681 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104923273 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136846984 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093653615 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107037705 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09246307 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166531829 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21531612 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106894289 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120421436 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090437668 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09778217 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140779449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156437139 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074623387 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092211949 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177158048 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117330707 seconds)
  done (took 5.040409671 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19376863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117672106 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184442099 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171516128 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145224011 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162129588 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113432652 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255943014 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.162252424 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161847923 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125652288 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112126824 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077881188 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094678361 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076680702 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723060619 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183748311 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147924781 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121426862 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099670953 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079394871 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370533974 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095694819 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07834696 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09969175 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069318975 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170670832 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100392102 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.219955825 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095620426 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106530337 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130025387 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195487429 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123804978 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12108456 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099764368 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159197503 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21000702 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098267479 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087634885 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094329352 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118725658 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113313129 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129599057 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098518037 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.105508112 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224253974 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095524761 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116804214 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.014092905 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194488725 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094123067 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0946514 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334094052 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113964063 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083089115 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09696065 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078462271 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280897181 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126721438 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097385074 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075570658 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100964822 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079566832 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096622575 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386581635 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102895722 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.903982995 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07965597 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.149729275 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097927045 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101039953 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082847093 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100286417 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078757743 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116325198 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077201706 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097046971 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077413072 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094221413 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081012487 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113494377 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097367892 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077190122 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156139812 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098165149 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114997926 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121287744 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080886648 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093697889 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110180682 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093561352 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080488992 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139259935 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102175036 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111662427 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080594011 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13837885 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092504426 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16599295 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092909258 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119322799 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081838244 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124308722 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114399066 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07760343 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099161046 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092735553 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078711776 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145116357 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09093277 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077623251 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098423574 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091063603 seconds)
  done (took 23.067333396 seconds)
done (took 48.153792938 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413015225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106475402 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106792182 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106506536 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105096829 seconds)
  done (took 1.565466947 seconds)
done (took 2.271326709 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310587759 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190746305 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097308845 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184336009 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083871783 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190018176 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157956953 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096168267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199658632 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080803443 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178790913 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080144464 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101306647 seconds)
  done (took 2.683614752 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090109366 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11306065 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07900862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103495701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074985686 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08843112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103341416 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124360335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088124668 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082459926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088850724 seconds)
  done (took 1.738092112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089536859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111645463 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07819752 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087634261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088724178 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088107115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104093299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097876057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1047172 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083814596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088661187 seconds)
  done (took 1.727217195 seconds)
done (took 6.846259429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.093849154 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.375683573 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120275922 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173436655 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329132608 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216243225 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.630865671 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132301732 seconds)
  done (took 15.948474358 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108380581 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111421033 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078829647 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095139167 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080233145 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093283134 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078672773 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096301868 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078111647 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09226036 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076673445 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091428991 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078416982 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096017629 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079446714 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094179899 seconds)
  done (took 2.199711395 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112548441 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111517946 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099943435 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087172772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098734442 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097898487 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.084846136 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09800308 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080219989 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096835438 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086495858 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100915982 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084124817 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095007358 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099231426 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.087970518 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095689739 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083795136 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099817402 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083077736 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102105536 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096342359 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085111707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101080377 seconds)
  done (took 3.079721885 seconds)
done (took 21.932750555 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161618281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081898507 seconds)
  done (took 0.955889053 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098503917 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114964222 seconds)
  done (took 0.930560119 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104397255 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094285839 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132522594 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111583869 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079649997 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07866816 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127060659 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094951406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078406449 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094772887 seconds)
  done (took 1.712800284 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084030954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097932091 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087629323 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116100812 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105411688 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081110927 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098658101 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083034642 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099614502 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07796399 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103044338 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097788255 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101628542 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114685611 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083754836 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.219802678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104165648 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08287859 seconds)
  done (took 2.554746181 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079356525 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079626205 seconds)
  done (took 0.878511756 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081560453 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092229328 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081350212 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096781325 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077029149 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09239881 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07734253 seconds)
  done (took 1.318437399 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.464742194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.24315702 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299100878 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110684786 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128805086 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346102549 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129720466 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.091402465 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10852318 seconds)
  done (took 2.697502633 seconds)
done (took 11.765580613 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088837751 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129111424 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.470821117 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11411026 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075800319 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155523291 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.254145748 seconds)
done (took 2.007512858 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336135901 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119249299 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084694055 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077649032 seconds)
  done (took 1.334265294 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076758826 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082927671 seconds)
  done (took 0.882935007 seconds)
done (took 2.941477916 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076470433 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075509022 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090832276 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.12213917 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07553124 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073089457 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092256184 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074913924 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093207429 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.075937945 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.091829907 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076433638 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072662278 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089900278 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076269517 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090549234 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073151526 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089426615 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076557829 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073365774 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093055985 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075551788 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090285106 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073802213 seconds)
  done (took 2.747696871 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102515048 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094323948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081809975 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098773769 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080380356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098576413 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097970366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.077841226 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098404587 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079065597 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096187807 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.080529389 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09486551 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080292859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094930578 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081215943 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098664867 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077240723 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095807469 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07963694 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097693316 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077235114 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096760492 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098764613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079960088 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096779334 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078456416 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093609773 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081944575 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097393675 seconds)
  done (took 3.412713624 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085118424 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07336734 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092076874 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084851358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090525435 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077268963 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090880212 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078225905 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095428495 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074666949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095251655 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.074497563 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0759687 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09529448 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078637206 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09767828 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091733239 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093777947 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076878202 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095816072 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080091237 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093448951 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077245246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073753341 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090587598 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073372432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091236611 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074261159 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090681213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.074844576 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094932831 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081587719 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073564569 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102615143 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079691526 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090212427 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082613073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091177907 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078119706 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090339884 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073542127 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090502332 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077467681 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084412992 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094125897 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075262665 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093546367 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078620409 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094313187 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081297605 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089799235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078048854 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095551559 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07932558 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080497636 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090878277 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.074382643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.090838086 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078952122 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090506913 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07503401 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074420162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096910461 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.074296251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113623661 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101279061 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078349034 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079196209 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094674927 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082046645 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096201883 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092378243 seconds)
  done (took 6.880381458 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080102152 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101019582 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076557967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092393348 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073413165 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074184346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097557954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074951399 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093041492 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093127045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091179862 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075362861 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093393344 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0780364 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091840872 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075890916 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101625969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07251313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09116711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078749471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09165629 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080780015 seconds)
  done (took 2.612617515 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216777667 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100043101 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136419387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109754701 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095040114 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109142174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081979489 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099529672 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097606173 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085021154 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102204095 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081786161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111026778 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100900609 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084618574 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102521533 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080968718 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102323171 seconds)
  done (took 2.632458932 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091208373 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094428416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100995148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095268156 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077817857 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097636806 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083583984 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110627457 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082371461 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094355428 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.104196334 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080166248 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096233859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077820698 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096672018 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078575053 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096275487 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078519538 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104635857 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084562528 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101108986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087482737 seconds)
  done (took 2.749146383 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095175459 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096555348 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09904331 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098588874 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075864561 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095204983 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08506758 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093772598 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086561757 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097166609 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078261175 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095596441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084379542 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09432198 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102647025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077650913 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095071731 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079034983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096117432 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077511484 seconds)
  done (took 2.541265781 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118249981 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110019676 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091502427 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119686942 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109555065 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092284408 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120634988 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091931467 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10869412 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121705369 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092183249 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11011894 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118889584 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.099331184 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108925212 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102908 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120113504 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119598125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091412495 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10882335 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122823505 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092501364 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120303483 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091960263 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108639822 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108544803 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092839681 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116014056 seconds)
  done (took 3.750433398 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077459325 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076491011 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091872782 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075241674 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091988407 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075142537 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074664382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091912986 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076961301 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09220473 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077112161 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093746938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077276458 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076593918 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094552423 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076930964 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09426737 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074456975 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091441905 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075259103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076842856 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093741284 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076918094 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092035042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075586866 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093559988 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075322456 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07432476 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094628902 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074501579 seconds)
  done (took 3.223310153 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085481046 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104687462 seconds)
  done (took 0.933558989 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076239607 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110563675 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075296346 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097779336 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083459172 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096164539 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08828146 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101255198 seconds)
  done (took 1.470351019 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101501429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116111912 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084452208 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108244899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096637609 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113669534 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159264837 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084534623 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102481863 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078062905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114925338 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077598897 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105797983 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083608776 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104760254 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109599588 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079305706 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088688191 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102556838 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080473544 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101994495 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109838353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088694798 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103671213 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080989657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106661881 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091178471 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107085322 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08303935 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107061429 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08509723 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089422688 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083172008 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101988608 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07950653 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11271705 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112450572 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083895714 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103884318 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084645592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104707572 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076990708 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105620953 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086107977 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108951201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083836972 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102342527 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077542063 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096102258 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082423652 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093987522 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081712387 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0892739 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087955391 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104411095 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096462596 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09832547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.082852043 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101030744 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081609296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103271335 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082295833 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106161947 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081168663 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105665334 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087602474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103748254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07757394 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089472293 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079624558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105197023 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102021121 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106926611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100609579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085585048 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096150442 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084211689 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10187478 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086892456 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106969254 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083661499 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104375525 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08865628 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099448001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0826412 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102556377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080969814 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098478444 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079518574 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116082878 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081098685 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096385177 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078787074 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107573089 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082220474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099771774 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079273921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105100711 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072197824 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101602026 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084176847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102942777 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090459742 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101172901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084388183 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104065358 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089501138 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100775948 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081538714 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093020834 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085194885 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098056699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086646723 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090771685 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08403081 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100078082 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084794676 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106090612 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080830609 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102182873 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089626217 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108364285 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098269297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076502012 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082728937 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101575505 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104988577 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090344042 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097704218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078357439 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077985986 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105077705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100485996 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086856923 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101362004 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084736509 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073236458 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098289407 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084264959 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10779225 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099382941 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086480737 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10634481 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086251459 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100749972 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088241226 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09987388 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079256938 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106099617 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083120018 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095415921 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089286914 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100543565 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081472281 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101090448 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088955156 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101438583 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084880253 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099938578 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.083737712 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103311062 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079313411 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101635561 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08137736 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109091964 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082884745 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095724966 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076297789 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10340317 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080189836 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100250224 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078922013 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100164662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084838897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09800176 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083177036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100322158 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096452737 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109121044 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085413789 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112831067 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090364919 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10102414 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085297975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100961233 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085049917 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102327461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088244555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103270112 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084288759 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100462885 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074956508 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103133331 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089223457 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097582174 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080110246 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096558595 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083758698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108291521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083954184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103081969 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081098153 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104070578 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088895516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100978414 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083082981 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097747553 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083471058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104972601 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084869555 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103254018 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090614222 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102444852 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077881384 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10622061 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080816499 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105361316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078416352 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097890814 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079887838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103710566 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082035766 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100117649 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074086748 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105938734 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090032104 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101457423 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079703269 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102269135 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092769276 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099551671 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088950677 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102276168 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086098488 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114913856 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079944014 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101146007 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090618653 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102152666 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073518845 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104727721 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082335581 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096068175 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08258936 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099713754 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08482962 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104955228 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.085002718 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091223733 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083728908 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099429811 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079812107 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096003424 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089486113 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102969919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083707109 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1109089 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086173529 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103388182 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085973696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101083486 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085338253 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103267258 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084336102 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102817494 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081988304 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097013405 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083782763 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09739882 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079961973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100904168 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085034231 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102887085 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085236781 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101250823 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089121601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101721327 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085231012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118913484 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098697372 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079800967 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103256175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086081961 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101081449 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083402055 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096074721 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088511627 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101077017 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089690012 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100567925 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076761125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101963134 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083902226 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103169984 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087130444 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103569523 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082947265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101595031 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084539219 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111177413 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080591422 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108506934 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086016182 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103932273 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083437267 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102313481 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082363672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097782129 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084107926 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103305448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084803467 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101662572 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086792603 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102377663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082467952 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100361272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086046186 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10269764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085989539 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092439082 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080000051 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098011227 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084541891 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105771219 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085110353 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100386072 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082574497 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103987637 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083038111 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093960755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089157886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104798316 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085463437 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111173272 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079642116 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102524315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093923983 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091413147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082248132 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098395209 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081054349 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107335904 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085485712 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108059906 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085277897 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098090293 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077084204 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103832081 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083279293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074168683 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099134232 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087097205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100322643 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082039507 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103085174 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086732866 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104584752 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105795243 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083753553 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084088183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103202234 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076885909 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099423468 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079715463 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102234419 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086079317 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099094359 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077712955 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102107678 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084633249 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102626098 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084740186 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100793564 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089815398 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102242851 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084554096 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108503144 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074533091 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102587363 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085015731 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102565455 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080092835 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10376998 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085421498 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10518698 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089346464 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102263713 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086759218 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102603536 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081251454 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101908855 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084717274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103461129 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080607808 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104467701 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090725324 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099369162 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085952162 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103795509 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081541804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104032372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086557535 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103384993 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088170369 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103433761 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084260593 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106272425 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084406108 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104493135 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086647685 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.100973933 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088811789 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097978899 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09165921 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103943318 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085831948 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101611532 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080292226 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102530365 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084142611 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101685697 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089133457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105073629 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079926126 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098721522 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081079238 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102700712 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090081293 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109174908 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085355698 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103933371 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079253951 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097031709 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086031775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099218201 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083821697 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105704811 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089142337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104061743 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081846884 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101809784 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089825171 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107582149 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087925801 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100172911 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086543062 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104811925 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084525092 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101052861 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083950425 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105112072 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086604834 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101780185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081546815 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111885843 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08989659 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10551074 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082938011 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104830954 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101495804 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080311251 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086962507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103576983 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105938171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085017909 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102587114 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095311252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098233469 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084530486 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108694611 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08401264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108224434 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079752534 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103561745 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087721983 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105758969 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080014872 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098724057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081490273 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.1029693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08119959 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078952745 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113391908 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108476089 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084660037 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101982302 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083287448 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097285062 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079901192 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080402469 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106078479 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083168147 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111372946 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.098097552 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081447919 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078975001 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104420453 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085326323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106924068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077596545 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097794553 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081240191 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103730235 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092488334 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102534565 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085121907 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104682995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084968744 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100561639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089936771 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096115425 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08694133 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113883994 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104448676 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087710134 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106422836 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09168467 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104300531 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080263741 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104633543 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086495095 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10368183 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087010418 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106148396 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099976198 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104972278 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.080923694 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102701969 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084743339 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099250925 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092383449 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106143087 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086264147 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106089216 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082964977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106409907 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091500256 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10603671 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087488604 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103937173 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084287836 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103539958 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083795933 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102394157 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086852147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105272063 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085182986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107110015 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080912449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114183545 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110406723 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087292636 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077596029 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100148698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081277154 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098124667 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086196925 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0978107 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083632344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102199069 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084058515 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106142023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088148441 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103722515 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087213339 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10399356 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075609276 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107501443 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086164404 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106588457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077896902 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104475894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087507458 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108441595 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0918784 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103339852 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085438021 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103228503 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088014323 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098696798 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088912544 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103655648 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084430755 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100956891 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086332222 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105930372 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087471107 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105949052 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089345736 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103734337 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090204567 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107940187 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079640634 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096548151 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090093324 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100847034 seconds)
  done (took 56.692733764 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144530042 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086622068 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076342248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096831589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121833593 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08086765 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095845028 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081751474 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099381022 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090060179 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09591313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077060356 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117552341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123529844 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120900732 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091991438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095916012 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08133843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096137106 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08105656 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115609307 seconds)
  done (took 2.859574352 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102291812 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114210189 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111751369 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098584533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10683627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113999431 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093221444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113683039 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11800028 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089647431 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118265673 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114010484 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089215503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108815652 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1076632 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091960604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117435141 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106715816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.095822937 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112336257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110573066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093089363 seconds)
  done (took 3.116885409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091096591 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084594527 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108152259 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.079468717 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103535959 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.079539822 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109144722 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080973423 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109003018 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.085754561 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10176977 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.085588735 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10934941 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.079194056 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103202106 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08226211 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110564451 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085860354 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105461942 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080607925 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123836226 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080163544 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099315582 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083010028 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.1138928 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086562044 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104973685 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085955749 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101871618 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085844634 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100464106 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087094944 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107488637 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.083301925 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.101595764 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086271422 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103830971 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.080658768 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.082029989 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107565384 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08063151 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.1050282 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091123552 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.101615152 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.082056163 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106493499 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086113037 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099451988 seconds)
  done (took 5.328311025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.116051746 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.153559173 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084001662 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14297303 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12092054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094545992 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106094509 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142326182 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079527357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104529223 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122168317 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098577291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105951894 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110118524 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089503379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104592251 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087550971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100178897 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090339454 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103894856 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109685524 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089325104 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118366639 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115883718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090177149 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102983105 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081772707 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111185477 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113813425 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092016187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110604851 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09301253 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119327377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103645546 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084825362 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108011417 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120946442 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086230805 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107513441 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080437748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107215375 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091617291 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108733996 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122284254 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086173596 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10654292 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0852568 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097862695 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115231074 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08984341 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114139304 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118583188 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090718712 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10490942 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091363117 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119346114 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105407399 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08420788 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109100456 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096041093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099562346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108200481 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098740763 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107879649 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093816668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117817909 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107400603 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089511646 seconds)
  done (took 7.998185602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114351962 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11062948 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121750952 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102669104 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110959182 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091089962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111532056 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110070004 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091277568 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117135569 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09098581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.157973467 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107591257 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11661421 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.091568487 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111967257 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090703107 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110303958 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108583765 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091610553 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111248114 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102405047 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110500746 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122935446 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122219174 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089212478 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111317237 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090972751 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121199522 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110929922 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103695413 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111403219 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109356231 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102283644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123241792 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11161189 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084877504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111097116 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090949168 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110283888 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087703968 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12156408 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111299515 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087858897 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110281801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11094713 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102794718 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123476994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117762654 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117235686 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092347985 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123250483 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091186931 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110593713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122902004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13064855 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102215619 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122576278 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111576019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122674012 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102822584 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130522793 seconds)
  done (took 7.569620911 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082733578 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082197215 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100712141 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.080705284 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102399702 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080006828 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081886175 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102109753 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082715547 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102913636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082382987 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099587705 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081513689 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081793658 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099566523 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08022824 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100499863 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080434953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101856618 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081375342 seconds)
  done (took 2.592259079 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090964852 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123393819 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083655284 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111064132 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085551454 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110697203 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085352588 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105573606 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085649101 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105662481 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114895341 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096556776 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104183523 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090153192 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115456611 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110441334 seconds)
  done (took 2.426758616 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103877832 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124459322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127733615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088518415 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100196008 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091500272 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105530367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.079746789 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.098274524 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092166729 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108015114 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.088951833 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105540987 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081363612 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083020104 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109357774 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079115375 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.107367098 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08533326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.128234823 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108277582 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085460945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107340453 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084539105 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106305521 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08819428 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110498484 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080725898 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101445476 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086617853 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105377382 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091079101 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100571692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087185759 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101549443 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080083208 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105924044 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086261688 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108907433 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085538583 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101638839 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085213716 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106444639 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.087999105 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099510078 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086681843 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099492646 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089568007 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105135405 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085872299 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105494603 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091143609 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110219632 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114559167 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.095053899 seconds)
  done (took 6.172070119 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099248522 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106800986 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088380026 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100789284 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086830884 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111568658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087558745 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106564601 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086149884 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100846291 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085712159 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108017735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08541516 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107781796 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086241966 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10810627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078025043 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104901605 seconds)
  done (took 2.551409243 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089291935 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083219843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110971913 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082473579 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103998373 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085435997 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100216215 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081227739 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101903512 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082944882 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10358867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085960404 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101138582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086091838 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103328681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083736618 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104816263 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082814396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083611964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099055213 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084559922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101928571 seconds)
  done (took 2.854735977 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100186266 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.133928266 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096858994 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143990678 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107656876 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086544368 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117373324 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.08751287 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124969777 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.085892781 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.107191581 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086529246 seconds)
  done (took 2.091871636 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109040677 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140732143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084328464 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107309111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116941776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089456767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108704202 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089077834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122639706 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120691189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088230677 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12275917 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1225175 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120622005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096839986 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11815487 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108933209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104312455 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13232163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088943353 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12258267 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088257248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109690074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108825707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100734352 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122939407 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121807759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088432776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122909613 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117795753 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087938299 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122740148 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121861431 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086452189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122771024 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108975599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132027362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097265923 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120382397 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106576846 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097952666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123035981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115700271 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101674506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110520234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116668849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088540797 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109839712 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13775021 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117600462 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100631955 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118232412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122602881 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101797467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157057594 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103179212 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120939855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117466451 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122490848 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100067931 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118067915 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121269252 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122626097 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097621587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121394538 seconds)
  done (took 8.176295577 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123379275 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10665217 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088445373 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122025276 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121185615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109231389 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089412433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110161923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088988094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106372733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.395225439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089341982 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121000033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119904323 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088752587 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109402572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110398057 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099549024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106452324 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136833797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087706688 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120028604 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119603557 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120782027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121167889 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097781677 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108800081 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088191523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109108595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108547324 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096574372 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109186973 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119217129 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085757872 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120586218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087885805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109240943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116285652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089307439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117762792 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120344281 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131623312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088898351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110199866 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12135713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089222512 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109237459 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085256754 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109618803 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085024203 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122474796 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121872737 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122260851 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099733806 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109541033 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109636465 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089232062 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109677937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089047415 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118039345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120829111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089082119 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137647418 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109906864 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088364854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120864877 seconds)
  done (took 8.207112917 seconds)
done (took 152.315294964 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101487292 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139459755 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097466419 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167589523 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083183527 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139125037 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117003185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119131646 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082780258 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10391258 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083481943 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107395751 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149398936 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103582251 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083945231 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107116987 seconds)
  done (took 2.60559403 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178913876 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283361682 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10317953 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109806504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089343638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107660153 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088158416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111313132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.084509605 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116210766 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106293864 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087000575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.115996788 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086212538 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106035873 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.085772365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11585734 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085657578 seconds)
  done (took 2.886037171 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114898476 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150118647 seconds)
  done (took 1.09363408 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118653423 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182935675 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301193667 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156366863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111860306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126686177 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1590141 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122888389 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198298067 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127624999 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106648415 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110888406 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136272978 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095381489 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115030115 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089650016 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138031615 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112929677 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092953349 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113010327 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115522359 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114391529 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116511998 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092981345 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182840208 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127216652 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091741785 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113389956 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.111728834 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093083585 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116752015 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105180058 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125260559 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187860725 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096039269 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.184178399 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099052338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110766543 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092092525 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111369223 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094628002 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116680788 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126453847 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090397833 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11338368 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098038463 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112537462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.09132957 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.119231162 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120832194 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098317132 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116780864 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16297112 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1202363 seconds)
  done (took 7.510776245 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.78447901 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152369589 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090038914 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885554918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14189177 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10334183 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789236596 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134665897 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234604273 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.802725354 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104795495 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126475014 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22874304 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25277447 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143013228 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.332549575 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671744941 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101564074 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141296085 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150171342 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118261604 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117817066 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130233009 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428146519 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111620162 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089251334 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117111841 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10271661 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18201431 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090191915 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115366938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180902256 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264772937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204548699 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089938942 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110674585 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088292598 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167650173 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265221218 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218340412 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178059198 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085705115 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110636676 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10227812 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131875507 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107660095 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164602914 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172944083 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174521846 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115048706 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123552199 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09858714 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123053641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161335405 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108341242 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313607269 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339407912 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11057282 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096816291 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129759751 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263998871 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089309745 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225387893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138069324 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211685721 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08877031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78089722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16761396 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088094437 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124995216 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117873466 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095363349 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12280575 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166690071 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40603193 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125573832 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093687811 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110337597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20701401 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089278162 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111429978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163754338 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113155828 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097411496 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127236133 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124870659 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171692607 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249534428 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125864107 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118146317 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09627365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123637892 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090191289 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21155673 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21798743 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157641976 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234419765 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102504464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187540725 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165844733 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123607268 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172118474 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096866689 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129757466 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124026229 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212313334 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120329106 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.112947591 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094683586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119133181 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146356326 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092652502 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119058082 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168312851 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480119026 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166099522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086382785 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115615937 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097616082 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183612897 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096862137 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258978731 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120159731 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169112234 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096693379 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108695621 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098103603 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.185949184 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104109767 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12010821 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127207012 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09856578 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.271077822 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197725664 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126049554 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243443302 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161036061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122517272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174450302 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119593294 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169100936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121578136 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10081827 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11292168 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772037474 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102510241 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118995109 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116425472 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165362809 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11007759 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090486546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.111514088 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086709537 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775298579 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09226142 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108982235 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091050148 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121567152 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119190157 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096400551 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117522835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16334185 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234233618 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123199655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097602068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111353809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160656255 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091009592 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112245368 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.089531724 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112180165 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098780269 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116913741 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091052623 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193901329 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159529225 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219289049 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.587070342 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112113002 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090157032 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232091389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088486273 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305637636 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119394184 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224634835 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167990055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086724979 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336498194 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167557918 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187131453 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115015337 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172583839 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086044275 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117493418 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161584426 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111355713 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09586434 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158091802 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127758501 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125790753 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140756553 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089405222 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227436797 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109358536 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169978098 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112066115 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102771852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30571663 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088795004 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132124838 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161794026 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115473861 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090125034 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.86184259 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089918797 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122413516 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123076669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22302234 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16630247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097303213 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1201565 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124793416 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163352578 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210433366 seconds)
  done (took 44.022951487 seconds)
done (took 58.944891656 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298637873 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260957059 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.289453281 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193164332 seconds)
  done (took 1.970766282 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178783608 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149828035 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12418324 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108147021 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152656046 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086608325 seconds)
  done (took 1.657914061 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.463642768 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.364928145 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.340493134 seconds)
  done (took 2.02920941 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252890272 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279122061 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320843214 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420278599 seconds)
  done (took 2.233527675 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206233762 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126073231 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10029659 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.139061246 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.171966406 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.176537041 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142564559 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152395657 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129428166 seconds)
  done (took 2.246842043 seconds)
done (took 10.998765942 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.167346066 seconds)
    (2/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.259183165 seconds)
    (3/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.328376654 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118313123 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.136648626 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130915979 seconds)
    (7/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.092990199 seconds)
    (8/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.212469885 seconds)
    (9/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.145477552 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124087189 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095505295 seconds)
    (12/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.127692672 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.182836792 seconds)
    (14/286) benchmarking ("sort", Float64, true)...
    done (took 0.228319775 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.264161051 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116145892 seconds)
    (17/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094680452 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125731302 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.236869571 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093998399 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.175000328 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.142498655 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.183269375 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 0.220746008 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144238013 seconds)
    (26/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097946776 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123400444 seconds)
    (28/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095455117 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.127367594 seconds)
    (30/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.233011734 seconds)
    (31/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139071146 seconds)
    (32/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.231132268 seconds)
    (33/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104210833 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.156454107 seconds)
    (35/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.158757798 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.248960468 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118564215 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081608589 seconds)
    (39/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122770162 seconds)
    (40/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116344098 seconds)
    (41/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117842896 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198896466 seconds)
    (43/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.213485179 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092474567 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.243662136 seconds)
    (46/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125266101 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159161277 seconds)
    (48/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094044842 seconds)
    (49/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.203071576 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090222393 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116186507 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.149480753 seconds)
    (53/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101852951 seconds)
    (54/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19629367 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121348625 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099512488 seconds)
    (57/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115751054 seconds)
    (58/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181953323 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101847927 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198420385 seconds)
    (61/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.15696736 seconds)
    (62/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091487586 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134631406 seconds)
    (64/286) benchmarking ("sort", Int64, false)...
    done (took 0.086682592 seconds)
    (65/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210297297 seconds)
    (66/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126395909 seconds)
    (67/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092704267 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.116550541 seconds)
    (69/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092718345 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117587678 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095118543 seconds)
    (72/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.156550114 seconds)
    (73/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181141605 seconds)
    (74/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.202977618 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09329302 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196517359 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115710586 seconds)
    (78/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091640598 seconds)
    (79/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.210880152 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195575012 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102029171 seconds)
    (82/286) benchmarking ("sort", Int8, true)...
    done (took 0.216292769 seconds)
    (83/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.116406746 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.143484138 seconds)
    (85/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095385778 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189190518 seconds)
    (87/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102018328 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.165749541 seconds)
    (89/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126240136 seconds)
    (90/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.127022294 seconds)
    (91/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.130606955 seconds)
    (92/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.127042559 seconds)
    (93/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236659499 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09283829 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19439511 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21604454 seconds)
    (97/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191131364 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.175565029 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102558939 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135921713 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.101246781 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088057626 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 0.183757465 seconds)
    (104/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122519155 seconds)
    (105/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082055654 seconds)
    (106/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.156535856 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099925056 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140736924 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107178558 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.126696927 seconds)
    (111/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.151594665 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092729484 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122831893 seconds)
    (114/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190819544 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099938207 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136985536 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079937669 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.119865602 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081586663 seconds)
    (120/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120750741 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099383808 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.147584524 seconds)
    (123/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116964747 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087551067 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123751373 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087285529 seconds)
    (127/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118822454 seconds)
    (128/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14064596 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.183814165 seconds)
    (130/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098950532 seconds)
    (131/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.075717592 seconds)
    (132/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102551135 seconds)
    (133/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186300338 seconds)
    (134/286) benchmarking ("sort", BigInt, true)...
    done (took 0.2449062 seconds)
    (135/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124729282 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076343389 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124095149 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19447902 seconds)
    (139/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181404892 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119063284 seconds)
    (141/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100209567 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094246499 seconds)
    (143/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190018982 seconds)
    (144/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085920488 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104117724 seconds)
    (146/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101778824 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11296762 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092889027 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.10327571 seconds)
    (150/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.148490179 seconds)
    (151/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101054941 seconds)
    (152/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190155501 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.171444161 seconds)
    (154/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099566161 seconds)
    (155/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126504713 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087364884 seconds)
    (157/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.101154106 seconds)
    (158/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093884181 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119056092 seconds)
    (160/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.135839971 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.119792995 seconds)
    (162/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094017372 seconds)
    (163/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123938495 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093360772 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101083206 seconds)
    (166/286) benchmarking ("sort", Float32, false)...
    done (took 0.174124834 seconds)
    (167/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095208209 seconds)
    (168/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139395148 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093863148 seconds)
    (170/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.102715351 seconds)
    (171/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094736948 seconds)
    (172/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173924406 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.101015632 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102777724 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 0.173407203 seconds)
    (176/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228252068 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 0.218935917 seconds)
    (178/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.115869478 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094400099 seconds)
    (180/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.107953848 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095206929 seconds)
    (182/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.105252651 seconds)
    (183/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099302799 seconds)
    (184/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076285716 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.10042812 seconds)
    (186/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.075486765 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.102330139 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094597124 seconds)
    (189/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.115041791 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094812933 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127015997 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101372834 seconds)
    (193/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111378464 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094627134 seconds)
    (195/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.163715332 seconds)
    (196/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117749925 seconds)
    (197/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09184318 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114012765 seconds)
    (199/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166237773 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088211101 seconds)
    (201/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180143474 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092368347 seconds)
    (203/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.126618127 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112977383 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084647975 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094621381 seconds)
    (207/286) benchmarking ("sort", Int8, false)...
    done (took 0.216328761 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.07798588 seconds)
    (209/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184212617 seconds)
    (210/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10324731 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116392781 seconds)
    (212/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077201769 seconds)
    (213/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128607352 seconds)
    (214/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095370954 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119261159 seconds)
    (216/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.184155718 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088151238 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.099621665 seconds)
    (219/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076490439 seconds)
    (220/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076665303 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138505917 seconds)
    (222/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.106288222 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094672128 seconds)
    (224/286) benchmarking ("sort", Float32, true)...
    done (took 0.229329478 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099700097 seconds)
    (226/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085276639 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088197635 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182893862 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.100567395 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092106485 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118412493 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.075762304 seconds)
    (233/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.100990632 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095837625 seconds)
    (235/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077566246 seconds)
    (236/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194595853 seconds)
    (237/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117796374 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101183018 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136024608 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117074913 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.076642579 seconds)
    (242/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096136045 seconds)
    (243/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.102781507 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092938507 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.101039915 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097163323 seconds)
    (247/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103425916 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09241159 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125128519 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096633124 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115369884 seconds)
    (252/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.075546434 seconds)
    (253/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.099768884 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.111518529 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102817142 seconds)
    (256/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076726501 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166783009 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080097168 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120636708 seconds)
    (260/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079267029 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114901114 seconds)
    (262/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076986733 seconds)
    (263/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101300777 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089648324 seconds)
    (265/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114917528 seconds)
    (266/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077315296 seconds)
    (267/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.100633471 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09662742 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125987753 seconds)
    (270/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077181218 seconds)
    (271/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079327888 seconds)
    (272/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13725256 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114764933 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088536539 seconds)
    (275/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167221715 seconds)
    (276/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077608774 seconds)
    (277/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.100547234 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077735673 seconds)
    (279/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077399696 seconds)
    (280/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.104349241 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091471152 seconds)
    (282/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.107467572 seconds)
    (283/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092552952 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118735673 seconds)
    (285/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246540858 seconds)
    (286/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.075855147 seconds)
  done (took 37.733292814 seconds)
done (took 38.597536866 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103272613 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152150381 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099588964 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143201046 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123392672 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104963747 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121988088 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102752491 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126901759 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10429885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125999351 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.082887289 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122781289 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09947101 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124287951 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142480858 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102694041 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120113911 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.091363372 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114741192 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.091498972 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115517045 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.093032208 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.107260194 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099262479 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122129059 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09399982 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124512056 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092558875 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11625909 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090446537 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120078377 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089834506 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126701582 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093804473 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.115809935 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100387949 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122573152 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094313895 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.116780929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.096869498 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11603221 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094814022 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121202444 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092178171 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115060116 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091689558 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127551654 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142919187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093390683 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096863505 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123346885 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123796459 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096724226 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114552318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093006117 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116418122 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118569166 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.115686172 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092328923 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120184513 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114135051 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114826184 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.091733279 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.115437891 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09871404 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122886545 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091765756 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121910581 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094478581 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.110983984 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092304372 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11403663 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089354961 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121046855 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099076792 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110458898 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092996312 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095107495 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.118941077 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092261525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113838202 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093147583 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117457472 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090412052 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108010034 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090588225 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118109095 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09183975 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.115430314 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094474666 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.118935889 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094426767 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124281807 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091756494 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117072766 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092740448 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117283353 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118038267 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09117807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088335972 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115401008 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096928871 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113281524 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09293436 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124244851 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090784694 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11918686 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.09099592 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116187484 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105845294 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123886112 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115923567 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093912135 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088627025 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120181398 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090107918 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114395558 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090170734 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116359394 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093322237 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11761205 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090862572 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118768786 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126160556 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088927454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090967515 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114658066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093096684 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120031927 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092868287 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113839154 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.092331777 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110863791 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090534607 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.114301161 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095646348 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11467791 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091352359 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117346548 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091660255 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118683047 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093127885 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117844501 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090161006 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.110092487 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093539406 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114103405 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09383885 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.116627297 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093047186 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111448835 seconds)
done (took 17.198908344 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099384364 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186492721 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149646355 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.153717674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.14746231 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.109440703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127282294 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147157571 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.101217644 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145081309 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.147852173 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137623775 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.128604396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.124420817 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133437512 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099055085 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.123022422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108669668 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156335367 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142754292 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150288358 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.100000346 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14453873 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142677837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097421409 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152050768 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12709044 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.100155427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126393781 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107193215 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.139266884 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128780193 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.100636112 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135347455 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105980762 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121804824 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133538169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095153811 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1232686 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.098913063 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136171238 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134270662 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095850691 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.130480677 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122996791 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103412289 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122803844 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.097606704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123720516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.094881205 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128219863 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14407877 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097192208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126190585 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123409114 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09998101 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125673934 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.102894448 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.125119116 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12638676 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10015598 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12605039 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104005732 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140672442 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12234048 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10157105 seconds)
  done (took 9.066673774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.113744099 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.150968995 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129045586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106791183 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126585397 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088616319 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112368083 seconds)
  done (took 1.754788521 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090279612 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14366876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.121834173 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146135051 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138152044 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.124786681 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130740284 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090433573 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138172096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123392943 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118357726 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169116202 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115742306 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102088562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148426058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090558959 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149120092 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113551059 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098460491 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146868536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095075997 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136966891 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103188395 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115258199 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136009137 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091741691 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182092761 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127906959 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090544882 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121765123 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0957712 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183370924 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136687428 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.09990834 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113341252 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117684064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135312207 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118975475 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.114667078 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11999094 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.111250872 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122021042 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098093554 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120730804 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09738875 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.130286862 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12602334 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099088191 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120408026 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.118371649 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125277634 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113649318 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117653982 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094524712 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124011336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121030834 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104924955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120163311 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118878616 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122364725 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115074263 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139682754 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137063657 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115515243 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13251515 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136870864 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.112662806 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121321043 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097614237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123015003 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.116479138 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119180632 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.124462267 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106153339 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124420103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117924282 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142366325 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094505249 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128318612 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094450117 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118367053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091414951 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.131149097 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093691033 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117140181 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107358214 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127529343 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119633759 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094303561 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.136434432 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094760443 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126714785 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125654741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095099202 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13005822 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118082621 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.125706744 seconds)
  done (took 12.520928558 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094001444 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.092583234 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121755423 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.092773173 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117394837 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093250556 seconds)
  done (took 1.54595733 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121483289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12062519 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108257179 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12267423 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15884604 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.116345051 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.142555318 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100598095 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135315804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131562554 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.115197624 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141843825 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.146366997 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09918594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.140362616 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09845138 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140540264 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096304371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130231813 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09589449 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134327889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123200526 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096165019 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137973476 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.099464798 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.123841347 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098906372 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13101172 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129980328 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10166533 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123847336 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.100997272 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123460451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101483501 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.140128454 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122839382 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094647768 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.126095457 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100401652 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12499833 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.117022662 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120840775 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104674921 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126411196 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125315099 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.099438994 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.125531314 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098721254 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.140043232 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.10194854 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12719044 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098943835 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.125326821 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.101507604 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123212669 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126167493 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103146543 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140878057 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098606115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123598696 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095880325 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125476206 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125688899 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.10131873 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12434163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101912122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124157376 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096231246 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120759414 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097854879 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126631386 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095466928 seconds)
  done (took 9.40044554 seconds)
done (took 35.20468759 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679386097 seconds)
  done (took 1.609352449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.823165509 seconds)
  done (took 1.755829684 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.342471094 seconds)
  done (took 18.3023543 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489420647 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583426452 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.978628313 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163964521 seconds)
  done (took 3.148727852 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952403676 seconds)
  done (took 1.903833217 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300489586 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265954627 seconds)
  done (took 1.505187163 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.808236117 seconds)
  done (took 1.75081731 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.498127541 seconds)
  done (took 2.439292443 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350321297 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201282721 seconds)
  done (took 1.504319651 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.565724534 seconds)
  done (took 1.511389619 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.167472826 seconds)
  done (took 15.116620012 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242722453 seconds)
  done (took 1.203050919 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301704109 seconds)
  done (took 1.252261445 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.571982545 seconds)
  done (took 4.524335612 seconds)
done (took 58.469601809 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102291981 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129929994 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104966537 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125615375 seconds)
  done (took 1.409329603 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107364649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125134272 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103619879 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124484223 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107242716 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124770032 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098244469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.18112914 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123612667 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101846261 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125229537 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098883431 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126604232 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098836182 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122425225 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100128289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128687346 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098929901 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126262678 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125651017 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096939281 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12613888 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101633669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123169363 seconds)
  done (took 3.751796226 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102118228 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.095428208 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122970437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094394322 seconds)
  done (took 1.373386147 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105568312 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136495898 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111108568 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129040607 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111708062 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135926276 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120171394 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094909191 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122187599 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.105740787 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.120530865 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.115488432 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137124951 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.090084425 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131175185 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092712507 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11717439 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135834634 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104757785 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131950661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095195549 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128951899 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.103328413 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13417803 seconds)
  done (took 3.773590935 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17667035 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134088884 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144168082 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.101809216 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169513533 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.146428664 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.094729495 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146281616 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.09489401 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142629767 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.125097876 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.146651739 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137587483 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122373503 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.094852853 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.126024068 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110895077 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.142426554 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.123203997 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107826005 seconds)
  done (took 3.548821134 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102380571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119819092 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092199993 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.092693379 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.127299312 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097629159 seconds)
  done (took 1.596311986 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091985567 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.090565105 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116005922 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.090734094 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.119453536 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090038548 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.113278751 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.090827914 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090161778 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11597542 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089043742 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114244843 seconds)
  done (took 2.176333138 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.376328109 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118695173 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119625865 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09495813 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125717497 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09318235 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131630655 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093030782 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.147841631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09399227 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118748801 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096472581 seconds)
  done (took 2.571846089 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210939863 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100030984 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263477569 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.421831461 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160566278 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166811675 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.325304909 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166510672 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.184324417 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140458363 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196611001 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159678244 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156287439 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182712743 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141451991 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.177705698 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179230269 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201607401 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151630459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207072022 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16525762 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169387687 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181805824 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154972371 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112936252 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159896293 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121563281 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105954603 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200334283 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173919434 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175803951 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151361813 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115300244 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229432558 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214403503 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205579661 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.355082917 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135558741 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191547912 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.184009336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253373275 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117166699 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222057057 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131222797 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131344722 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182655418 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160264882 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183287192 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133848227 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116739011 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211699524 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179166122 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.179720436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139646837 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345850083 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149398209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148495374 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189121782 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187638885 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192714282 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170098869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123086154 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246466436 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185035367 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181937294 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1212343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193413609 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101603101 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1770789 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195692381 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205758493 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166850335 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187975329 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137249278 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166854487 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171045316 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156826618 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179670493 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137858032 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122843309 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15352589 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114272982 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12922137 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187526214 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098927263 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229571712 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111981934 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.190801381 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240793206 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134752702 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163468825 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166660267 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167488481 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149565726 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.120813672 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122691064 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162451116 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160475027 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133470042 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159318853 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119200265 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130114105 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156603548 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099950877 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162737387 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136248575 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170571507 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166520381 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129318601 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141643925 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152582787 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161004428 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173299065 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187149289 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134325719 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107497211 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220929298 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135264568 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139255774 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176149784 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187047097 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.166796557 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140131644 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171302279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193699568 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144360315 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189316264 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143830084 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110179299 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153182815 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160567141 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158510778 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158857364 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104575256 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156161451 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219887255 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10385773 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139041115 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178019394 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103560163 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130551712 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144789742 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112277194 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144725879 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150609833 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140641283 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132584995 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162852488 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155613576 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161320859 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144380716 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194412481 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134870025 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163388133 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12373415 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121622954 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.182505099 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186375684 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131748598 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200598653 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170320991 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261552229 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167725632 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133314916 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153598294 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131716369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121755071 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169677178 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136504527 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16374921 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210471254 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235767126 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16704544 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15470568 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152906168 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169718842 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17665602 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157695497 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148409916 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166051054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170250537 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098130613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127185526 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10253392 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14494136 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133261003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10763484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209710959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16713818 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22683449 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162850108 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14507779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184471038 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127668084 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167328739 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174155872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115335748 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184735898 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182318277 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169747744 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145307858 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178025835 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123432397 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099918514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136410732 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168880544 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108101101 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137306926 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145059119 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184811141 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178319585 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152851862 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265799015 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17337167 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193870132 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097649424 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166964705 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172762053 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161262901 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184851938 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112409196 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162654569 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180409253 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146335852 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192303356 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165377113 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172938129 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227045838 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133907599 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133678965 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151719263 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169195664 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114903166 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169449429 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148742046 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138856465 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157227573 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110616104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12894996 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185279349 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147867728 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181998984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158782685 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174842816 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128528626 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118445648 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164143869 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149359191 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11941055 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175177527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188190282 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147413606 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162406662 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178714804 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105906224 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.373562122 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193359202 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187827672 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140717247 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14578152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137609788 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161390749 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167519548 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181051377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145903126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182721137 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162355376 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.147016539 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111205902 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150459773 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153071643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.154350167 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108106749 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158373496 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145103519 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188737569 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145777485 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161079726 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167251605 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122426881 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.15722374 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146981604 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203583907 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161242036 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180502884 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15895919 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.168637663 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202489376 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126759703 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105546501 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128775606 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182060027 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108302781 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162528391 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.248862185 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271601319 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136383936 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169052305 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14288061 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122731333 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135337369 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15179269 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264316172 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144704727 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111829987 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223510673 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126342534 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133986304 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165036788 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335418588 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147313589 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176227089 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119293665 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316085919 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127522802 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107345153 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163206754 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173391608 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141177459 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159022932 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16546753 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14780009 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163626009 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140967693 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225712026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246068915 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175443482 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179714786 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146452398 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16079857 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166099301 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179028746 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119518207 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14945879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166889351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185804362 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189007056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13591422 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16798081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166961145 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162482401 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176658973 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109441466 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228908141 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106759948 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169728009 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144025648 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126185308 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136200231 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.249861564 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136319661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179163718 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162016142 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108297006 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130177305 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154595505 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162598162 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119641581 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132507698 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182198532 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128188475 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138833481 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182977128 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133999862 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159109377 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147699406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114297428 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146162284 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148472144 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110962031 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172983397 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185309666 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134206798 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181899965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180437971 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169720437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164448913 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14766954 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638034248 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131517573 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184465666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150165531 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188227103 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1510336 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142396055 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16554739 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154017412 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171756947 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153612028 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224190811 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169635512 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161089415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10704823 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148818027 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147107926 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133299947 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12783813 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166936889 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143477548 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13982223 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.132577683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149389298 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148206563 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141442319 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187513829 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124300834 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213562146 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18289707 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114703332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170489357 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176107839 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133265241 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164670726 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175578432 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143897148 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152691725 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107339319 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137350773 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182453879 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100216764 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164974444 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164855806 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168115108 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167406655 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109694447 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162382018 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145785126 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165509214 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132491242 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.129212742 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16175438 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133735802 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102668059 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157874486 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162259571 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161229979 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129428102 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147645926 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184978203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.129185283 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108810194 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35605713 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164375971 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194804467 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.155749155 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108882885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149264765 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158838092 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15706962 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16403672 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.104121674 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135677256 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133515536 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156270471 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.155943703 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161189976 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198141903 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165208312 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20213505 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139169828 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266407696 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114256814 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158318844 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.132733804 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104313436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147637698 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137922043 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146762314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227520142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183360735 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156587809 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147149362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10308693 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131148668 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108415608 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164461213 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157898969 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162152 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146507308 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093092178 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148443706 seconds)
  done (took 78.832947982 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151264823 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137101149 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153521241 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200339278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171093287 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247450794 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211048362 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231619759 seconds)
  done (took 2.564975028 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.10532265 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162200131 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142524432 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129252014 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096092544 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.335849178 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142760845 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128109432 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.151986366 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.138631544 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.097332327 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.563518031 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098765945 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128459913 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119543972 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095280845 seconds)
  done (took 3.689700157 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.216461954 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53857922 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.976341502 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25009562 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.231098585 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157634037 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.745041398 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18875326 seconds)
  done (took 12.36846354 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.125589054 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143209387 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.139531771 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167117318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.124290179 seconds)
  done (took 1.764969279 seconds)
done (took 120.372431826 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100432037 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128483187 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101045701 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131428683 seconds)
  done (took 1.514306104 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.112921459 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.085341761 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.116730539 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084374712 seconds)
  done (took 1.459981749 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.424862903 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.113756147 seconds)
  done (took 1.6370367 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121298593 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137948419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111280333 seconds)
  done (took 1.437329885 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108532886 seconds)
  done (took 1.178746122 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102006907 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.103759656 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.14533875 seconds)
  done (took 1.421677984 seconds)
done (took 9.716230508 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117595574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434118294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389698737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140535478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72588117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383853794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039558977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159118475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143422586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122336443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112241888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705261906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023451919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009019446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3438367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677146318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12647713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127258818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098316435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017827164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095179435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096387959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126269672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674623181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426598298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095694205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.384165536 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121123719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099789611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410626025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096199095 seconds)
  done (took 16.927483482 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1010603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182724398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102328254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124726608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099194191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124872055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105361851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136073562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184665876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095665487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141163503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094043311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128951533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095833799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144780342 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094488527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125516412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098399291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130357701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097056783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14212683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094754676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125202871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096831114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122797827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107941762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123753643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.108545203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122988228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099478008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128534586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095269533 seconds)
  done (took 4.848193364 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147608968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19096577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13157262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130869482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172723526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124039625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.179355183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161296709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186633393 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123138435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112277519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123075458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13102797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123887525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115590041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123701706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098522048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125727395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101725347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125267735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142137109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095503926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097332346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125802278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095116465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137829642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095381092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136527424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122249958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101243978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128456999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096221856 seconds)
  done (took 5.178310354 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104492362 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131566845 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121096212 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140497754 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098158722 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131149426 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104660254 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125678863 seconds)
  done (took 2.03536189 seconds)
done (took 30.057368535 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113216618 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100888098 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.137872435 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.108640728 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.135684741 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.118704925 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123636022 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106750933 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136687148 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103920854 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139806292 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094465418 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124311015 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095749807 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136476014 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101239761 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.138462179 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105850536 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.143669493 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111064978 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.124496239 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.107836712 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105114811 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144668601 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.143944681 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.11599488 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139720194 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102814559 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124671383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096885852 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.1377028 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117867569 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126554717 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111694932 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128786368 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100400034 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.1245899 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097994456 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13873305 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10763601 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.13042103 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107151816 seconds)
  done (took 6.078622067 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.123038904 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.166843385 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097103783 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125485818 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.096621259 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.162247783 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.158391329 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.097114472 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.124836304 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.121833398 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.14983174 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097672988 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.125770261 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.096844542 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.124685897 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.098449819 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.147285445 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.12104418 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.154326916 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.125634471 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.168928492 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.157978208 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.157864191 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.120487303 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.166169414 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.15872294 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.11790135 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.161170847 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.12274313 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.123909691 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.153567999 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.127617698 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.12438557 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.096557247 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.164811582 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.158952479 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124963106 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.165603043 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.155338486 seconds)
  done (took 6.328361328 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10558657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138713597 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11873598 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191326912 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134270121 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140040166 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106765267 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.144092977 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112694252 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125239141 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.106216299 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157958358 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141334919 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104052717 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129344366 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111405173 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.144179134 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098148136 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129543762 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116678628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142316 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.109046881 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138156166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106488159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.123998978 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105227717 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.127923481 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111160504 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.129339674 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104991571 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128899682 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100438528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132248796 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108350046 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129045565 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.104547235 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.146588163 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105160873 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137071569 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.128771709 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.137587609 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101266523 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146906367 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164596225 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097469924 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132214688 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103400215 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13374776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096549911 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114846928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137973521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097041521 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.140826342 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125072262 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096230805 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139587795 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099048105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099862962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132510023 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103004917 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.145894652 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101869694 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142643234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097518963 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131322144 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096167873 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125829436 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1025098 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146577286 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099722148 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164604226 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124915984 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.103714129 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133480531 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103195044 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106044021 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125833062 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110812153 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135518777 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101303135 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.135148034 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09990234 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130318383 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115197689 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.139686123 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131473391 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10313976 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131161319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100927944 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125616243 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111244415 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099097772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130443304 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113436742 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126727456 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099423794 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133374867 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101179556 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.124131768 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109613283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131219519 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096950762 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135831473 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097624452 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129367887 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105744846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130211165 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0967212 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129928442 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103018799 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12508539 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100803938 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.129149992 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100076466 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.138910341 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104790547 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128281923 seconds)
  done (took 15.20816373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.241528189 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223014376 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19652819 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305051196 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.147383715 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123664088 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219042595 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.177019935 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097483473 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.136634775 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.182202223 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.192838514 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.181022726 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.19157754 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.183939681 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126682497 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116505528 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.178118773 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.222962086 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.301598777 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115891048 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.140146836 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167256891 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166441141 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.11510094 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.142534405 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.149347206 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.119109307 seconds)
  done (took 5.984581466 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114269507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161226415 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.104757465 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.150890442 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152465315 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098267643 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.131924444 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098047977 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139660361 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.112086549 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.127688856 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105312729 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.131818141 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106686105 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126819727 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106832483 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136248256 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.106741215 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129630582 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101487414 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.140333505 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114762924 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.132964444 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09965388 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144095306 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.128600743 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100678412 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14788692 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.134542872 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12433501 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12378512 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107205596 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140941993 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097498757 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.10013389 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.130750872 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099010681 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.128857074 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099579033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124329627 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096992438 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.117976781 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100285058 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142531002 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104949456 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.124724729 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.103313728 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130927084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104547096 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123002224 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100203332 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099933621 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131550688 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.108664775 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129595969 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104485045 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.131185994 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098915056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.135946956 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.100942474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124094071 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098792674 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133232134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.101437975 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135261129 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.104253501 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127613758 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099776233 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.132215948 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105516155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128958338 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.105818652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12399048 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.588630027 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.137102367 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10621594 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.130212862 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09939926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.128668995 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097997084 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086623943 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125846568 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085123347 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131176958 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09672386 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127850761 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101086397 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13144116 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.114100977 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.136072481 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105904933 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127174697 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100067961 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.130793229 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.095257992 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131009468 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.115631903 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.146185104 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096212415 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124850996 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112939864 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129992468 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096352401 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118473582 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108130719 seconds)
  done (took 13.948854226 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137901903 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17642762 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127738431 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117116883 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161421111 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.168391733 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106552387 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135859182 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098983222 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117315264 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130201593 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106535336 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130816425 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112256236 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167708719 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137192311 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098813007 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141829477 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102757512 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.180185993 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146275866 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.137784643 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.167117357 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130373824 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.103274088 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.163146935 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.171281157 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111579831 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139757655 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138725013 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.141022602 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.17130512 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167750088 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104478929 seconds)
  done (took 5.764344031 seconds)
done (took 54.385945281 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.176517723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414871524 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.172615817 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.167811812 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.182821265 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.207257831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.169529665 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.361963217 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.927227706 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.159356756 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.167529609 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.183781853 seconds)
done (took 27.390076031 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.232194506 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333899467 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47469942 seconds)
  done (took 3.905215054 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.169826395 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.168138548 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.413504841 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.169861456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.169298606 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.185442034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.169383047 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.173810622 seconds)
  done (took 15.545078672 seconds)
done (took 24.94830806 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.215311767 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.360758505 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.42516356 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.184967732 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.169825098 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.169421272 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.172859752 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.204489453 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.177500435 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.186423549 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.168983114 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.430019541 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.194344085 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.553750399 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.173298548 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.192393051 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.185612224 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.431059562 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.171154758 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.218871006 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.160268447 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.157412198 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.207294054 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.203652676 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.175715634 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.178216899 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.172715218 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.169984251 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.374389902 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.17704519 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.211438651 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.171268555 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.173403844 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.170349448 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.279123724 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.20702273 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.345149393 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.172710056 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.157153313 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.180476368 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.374427353 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.560983849 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.169378913 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.180794002 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.181594033 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.20917645 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.159544322 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.872034319 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.174504301 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.170658756 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.239596243 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.580250169 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.176971592 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.182851451 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.185021969 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.409359999 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.19072566 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.194479481 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.197054043 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.177651683 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.184204783 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.168769129 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.230266175 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.181503591 seconds)
  done (took 141.480937135 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.16977328 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.172328376 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.17153628 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.231258204 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.172907966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.17297123 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.168298943 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.168563649 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.172566014 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.173736457 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.172472162 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.172354889 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.173095264 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.160816554 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.169622438 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.189355746 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.174049852 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.172937469 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.18665276 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.169219102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.196752407 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.173292439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.186355182 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.168034207 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.210484696 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.252787359 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.196228517 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.195123588 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.173567577 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.17001232 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.210604302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.235542751 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.75686471 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.028311366 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.182179965 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.183956696 seconds)
  done (took 79.129872264 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.170890749 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.170781788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.170816594 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.201399058 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.172272644 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.717119976 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720850097 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.904500948 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.439451605 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.439986601 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438492678 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175601718 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262327424 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.185671173 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.170684003 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.187225405 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.195496505 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.17100779 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.170671138 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.709324912 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.18684095 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.231130773 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341613909 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.184003193 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199892562 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.56759948 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.169665723 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.199430536 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.49763355 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.214494224 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.170021084 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51073649 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.85461232 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283597562 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.171260434 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.19875248 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.17302064 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.445445036 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.169365949 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.169606548 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.169019498 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.171970301 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.803732229 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.172317339 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.692944766 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173753245 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.068995311 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.169443644 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.169453603 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.030565621 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.695121514 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.18231698 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.165812745 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.169095067 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.167948804 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.166753516 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.197048927 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.170826427 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.014574959 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.257887958 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.166832292 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.169878976 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.196251889 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.169466408 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.166599664 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.248502908 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184456567 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.702660123 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.23763577 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.278419799 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.662630194 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168863659 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259664712 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280447386 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.16697235 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.165718113 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.165012407 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.166229514 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.165468304 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.272324591 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.166324466 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.538425266 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.328020405 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.180450235 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.273439124 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.263467353 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.166479727 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.477128407 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.168698381 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.165618086 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871639007 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259438033 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.165229266 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.165747264 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.165687482 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.533664701 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.658279795 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.327873383 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.169227717 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.222001987 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.169092347 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.540900953 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.650288586 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773211442 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.169927629 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275007534 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328397081 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.179912727 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.165714856 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.263684636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.171147511 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.22523167 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.169901887 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.560105692 seconds)
  done (took 361.531137477 seconds)
done (took 583.238783915 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.856644878 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.813418715 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.939216921 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.840823208 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.806970719 seconds)
  done (took 10.348981062 seconds)
done (took 11.441234697 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.341775726 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.340571106 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.22062785 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.343669995 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.196609257 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.357167842 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.3242243 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.188967902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.264894515 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.239658069 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.262736544 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21614649 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200059115 seconds)
  done (took 17.590192307 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482037868 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.167920522 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246285412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533395506 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207190798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490079759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361550104 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.183554554 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377887109 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182853702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.179895198 seconds)
  done (took 17.507624179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482007926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.169258126 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252616272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489572616 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.208143602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507488012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371542423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.184396711 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363834414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183951377 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.18161132 seconds)
  done (took 17.488714508 seconds)
done (took 53.681541946 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208239551 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.328054499 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.19241117 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.181302003 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.177093324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.178552017 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.183325664 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.179119173 seconds)
  done (took 10.723888785 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.173395295 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.1771516 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.176546854 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.173273986 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.176275065 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.172178418 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.176043698 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.176576639 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.174002439 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.173678341 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.173826327 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.173999038 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.175050428 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.177662926 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.176964583 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.175321512 seconds)
  done (took 19.898269548 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.177166148 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.174388831 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.174027157 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.175078122 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.173775046 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.174839019 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.174740004 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.175453112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.174811728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.174802917 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.174777211 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.175388863 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.175133706 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.175860542 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.175696137 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.176064455 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.175007289 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.175776563 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.181664847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.175825664 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.176508667 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.177228552 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.175780298 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.175716882 seconds)
  done (took 29.312686141 seconds)
done (took 61.029072756 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.171553219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.172696298 seconds)
  done (took 5.441782766 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.236951666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.238546719 seconds)
  done (took 3.574714288 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.179425049 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.178616936 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.179939666 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.178191358 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.179271803 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.179738334 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.180317913 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.179561251 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.181034355 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.179899343 seconds)
  done (took 12.89552435 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179941956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.180584611 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.176289451 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.177975262 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.17918382 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.176557414 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.180352407 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.181474321 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.17993451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.177667484 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.180312266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.177887713 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.179846516 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.177554905 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.181958233 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.179044154 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.177275561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.178775909 seconds)
  done (took 22.321399376 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.193367218 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200881522 seconds)
  done (took 3.493013795 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.308459755 seconds)
    (2/7) benchmarking "second"...
    done (took 1.220701747 seconds)
    (3/7) benchmarking "month"...
    done (took 1.288838788 seconds)
    (4/7) benchmarking "year"...
    done (took 1.277251729 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221528351 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.201041994 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.223274711 seconds)
  done (took 9.840087386 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.183604395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.379618191 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474174092 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795804238 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.183182849 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.187829034 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087816442 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.185240941 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.188640662 seconds)
  done (took 13.767502919 seconds)
done (took 72.431790578 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.17636602 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.19082139 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.199285929 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.205552481 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.520054326 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.206250487 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.181989027 seconds)
done (took 15.780917172 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.161024399 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.165582148 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.174716891 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.179149463 seconds)
  done (took 9.782275089 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.101228592 seconds)
    (2/2) benchmarking "read"...
    done (took 1.511694513 seconds)
  done (took 4.713858629 seconds)
done (took 15.596070034 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183996394 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.184118837 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.180292674 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.181484823 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.182270834 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.17951565 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.180999499 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.183741568 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.182453377 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.182094568 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.182441942 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182466902 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181029306 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181828057 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182985967 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.180311495 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.180012835 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180251417 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.184438246 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180899261 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.184281602 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184423589 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.180661741 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.180393969 seconds)
  done (took 29.469603929 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.185428488 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.182308626 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.183704326 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.18449065 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.182497298 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.184441497 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.18380772 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.183231682 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.184386019 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.18355416 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18145369 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.181833266 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.185588425 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.181728228 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184893974 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.183209485 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.184989459 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183077184 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184785016 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.183112305 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.18566937 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182519048 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.183224056 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186942767 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.180325667 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.179193574 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.182603794 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.178954695 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.182684908 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.179960879 seconds)
  done (took 36.597888058 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.185969116 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.189170005 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.178958268 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.182639916 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.179989834 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.184066534 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.183941555 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.183217437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.181464439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.181446855 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.176772503 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.176378926 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.176458239 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.177339104 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.176161838 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.178358158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.178121702 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.176903072 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.175528595 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.173363921 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.171830262 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.17044398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.170326677 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.171815479 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.168145746 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.1737664 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.165886886 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.164163033 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.15950142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.161893214 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.166523033 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.16768693 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.16200598 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.163928662 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.161242751 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.164853159 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.168193775 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.168452772 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.162550332 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.160181832 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.163644612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.168270735 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165877404 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.164769072 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.163826926 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.162533513 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.166408093 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.164993567 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.163200377 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.163986824 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.169520599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.161373051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.164863826 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.164640122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.165208454 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160155648 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.163701917 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.165072892 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.165848405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.162630026 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.165292831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.164185395 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.164600808 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.164773638 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.165071394 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.165278466 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.166258851 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.162220036 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.165951388 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.169994576 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.165515104 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.163999288 seconds)
  done (took 85.296801481 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.166102981 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.164686947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.16405202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.16174729 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163329014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.170746276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.17026038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170331921 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165873595 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.167966255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167910408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.164204732 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161299027 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.163232906 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16697164 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.164333313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.17055804 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.163738485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.167948174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169736183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.168202836 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.167163795 seconds)
  done (took 26.7523319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167549646 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166495394 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.164522347 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.166553457 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.161931579 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.165889102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.164361964 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.163888702 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164710596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.165674021 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16322416 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165562291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167281109 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165685686 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167197737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.164415972 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167624804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166132279 seconds)
  done (took 22.070465599 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.165724112 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.164274899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.166358174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.163466843 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.169840972 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.169066255 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.167565034 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169288457 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.165742219 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.166141409 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.16866017 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165801845 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.169466527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163461214 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168311962 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.166264431 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.167120172 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163318999 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171285004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.167419617 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.169405875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171545255 seconds)
  done (took 26.773054431 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.1741749 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.168642753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.167939777 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.166807678 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.161610458 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.171191621 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.168916591 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.166634767 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.170320182 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.17006291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169046836 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.167980215 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.169213758 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.164969359 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.165087002 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.163781809 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.17488559 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.166654893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174961232 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.171582854 seconds)
  done (took 24.465195464 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.170666065 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168871416 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.16988413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177107909 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.172034835 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.173641279 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173034254 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.176809414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175078514 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.172457736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.168670268 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.17152011 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173641824 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.172969269 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174179944 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174479616 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.172910808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.181014411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.177801333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176640287 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.176213698 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173143448 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.179245961 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.177221901 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.177347573 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174558782 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.170751469 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.176894896 seconds)
  done (took 33.976719104 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176044294 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178076474 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.171039102 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.172644846 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.172590039 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.173991461 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.173496396 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.174772014 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.178829507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176451812 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.172473306 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.174251917 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170762018 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.179313864 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.17460196 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.174656039 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172442073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.176888916 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178790315 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172686031 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.174391849 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182535212 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.173271541 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.173300291 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176679256 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.178130695 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171279742 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176381116 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180030912 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.177963709 seconds)
  done (took 36.35846053 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.219651753 seconds)
    (2/2) benchmarking "in"...
    done (took 1.219121996 seconds)
  done (took 3.536676236 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.179096283 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183967558 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.167824492 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.163493212 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.164068554 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.165758569 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1673975 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163191415 seconds)
  done (took 10.45198628 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.165968226 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.166537461 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.158491917 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.159982571 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.159692423 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.159518878 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166362221 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.176806275 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.161353862 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.160212032 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165067328 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.162466007 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.158183306 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.157076442 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.156245895 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.158253651 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.1575595 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.1590153 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.157910142 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.157847809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.157603766 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.158331803 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159255945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.155348669 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.158584576 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.164756813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.162946801 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.160461793 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.159199878 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162097586 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.159106826 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.156129587 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.161055746 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.162233518 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.160138158 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.159287773 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166262928 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178715326 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.164939856 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.15989048 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159480486 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.156207578 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.159757132 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.159971973 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160898898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.159935224 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160461526 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.157070414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158828416 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162865047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.163899616 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160542732 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.158163698 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163728324 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.161310234 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167454252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.178944713 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.163356982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.168110238 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.170777186 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.173011004 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.182376837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.162171842 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.161249615 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171194796 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.180628999 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168385182 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.17696865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.15904103 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.160320304 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.168958484 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173108247 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.183970314 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.161686405 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162254823 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.160573467 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161792283 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162764425 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168358832 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.18231452 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.162319477 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.163177708 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172192702 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.179641882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.162969303 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161474958 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.16237644 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.162601509 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162561479 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172265096 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.180283982 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.161844831 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161526251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.162126059 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.163337455 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.162709531 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.161283684 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162101114 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.160368292 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.163316976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.163160651 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165952607 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.169132533 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164122902 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.162267181 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.168228321 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.163455378 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163002404 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.168362093 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.162683967 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164339746 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.164474535 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.168695265 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.161453057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166311718 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.169786966 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163479723 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.166030315 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.162965885 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.164212822 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173217183 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.184169816 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.165262675 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.163661006 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.169130602 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.174517814 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164743029 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.166852056 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.165244351 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.161929792 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.161892537 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.166161981 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164655031 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.165554 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165961594 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166010247 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.162330027 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.16638251 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.166697511 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16663818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.166944519 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.165968285 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.166953995 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.167386864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.167353196 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.167187346 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.173480585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.166677077 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.167957531 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.167303183 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.16421058 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.167086952 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166874119 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.167428907 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.16724652 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.167961486 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.167014527 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.167538846 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.16824011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167599714 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167794396 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.167410659 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170443653 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.167586513 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.170396547 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.166738826 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.164901585 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.166936457 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.168350316 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.166970473 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.168161631 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.166710945 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.171698552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.173628396 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.168289241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.167490312 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.170972837 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168413772 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.16894871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169139256 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.172345731 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.176056932 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.165180271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.170344588 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.165146915 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166589657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.16590434 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.164941806 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.165148237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166866903 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.165546673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.167161908 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.172628475 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184621427 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.163458189 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.164368085 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.163261549 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.165266602 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.167416639 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.159693274 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.159287695 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.159265295 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.158614793 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.158804533 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.159283257 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.158392139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.15794912 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.159612325 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.157540713 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.157494511 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.157789732 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.157647071 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.158048048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.155063132 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.158246052 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.157897014 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.158155791 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.154477445 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.157265815 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.157244965 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.158789878 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.158902832 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.163469682 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.156395527 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.158371481 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159787744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.15834914 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.157379695 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.159280778 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.159184917 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.158485065 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.165277519 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.176514258 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.160240117 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165157826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.17681289 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.158216296 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.160882542 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.160201401 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.156924925 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.162055395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.165879581 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.159149773 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.16046355 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.159146116 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.159584401 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.161381484 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.166657514 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.157516295 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.158925915 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.159625237 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.160571971 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.157494962 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.161515143 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.159430133 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.159651856 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161865517 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159599243 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.16102027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.160905286 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.16056526 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.160715036 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.160564841 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.16319094 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.166393266 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.165637155 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.160593358 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.16253496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.161118415 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.163786492 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.162066837 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.161492466 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.16150643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172787264 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.184393277 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167389791 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.179372386 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.162146069 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166982262 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.179845508 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.164490935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160888993 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.162467106 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.162639962 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.161769407 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.159641771 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.162219863 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.163464327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.162549748 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.164181419 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.165113259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.163208892 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.161708542 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.162432038 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.163747019 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.1620449 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.162480139 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.162501548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.164570552 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.163683687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.161997716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.161906003 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168670069 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179926269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.164200257 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.163394613 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.164012042 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.162398436 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.163979571 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.163699044 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.166433273 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.169289484 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.166895792 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.170544911 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.164591375 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172340385 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.164409762 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.167256672 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.169138361 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.161892572 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.162778367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.163913016 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.16453418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171565598 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.182966891 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.165494808 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.167433719 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16519706 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.166311377 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.164918849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.164533413 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166009545 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.165651067 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173069062 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.185361896 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.16895323 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165443622 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.162607442 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.164654946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.165836948 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.165323678 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168433996 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.165338156 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.165939989 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.165520692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.164316572 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.165430002 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.167374036 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.166304462 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.163524806 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.165994678 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.17337102 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.186703611 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.169373187 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.166377735 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.172921305 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.167307458 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.172854948 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.184804074 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.166479097 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.166688189 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.166543774 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.16807697 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.165534251 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.168081377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.16731378 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.169357151 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.169825597 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.167890225 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.169232621 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.16728897 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.167857546 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.166148716 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176133485 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18637297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.168565724 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.170962643 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.163792808 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.169379778 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.170641886 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.16764977 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.167796264 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.170654151 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17731254 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173443342 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.168721342 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.168557116 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169185231 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169435338 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.1682003 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.169457912 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.168087719 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.168323382 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.169251188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.168718584 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172076178 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.16847811 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.169258046 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.169904332 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.169528471 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.176638588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.169669156 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.169016134 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169173012 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.170715184 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.169617031 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.16978694 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.169702087 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171390762 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170376921 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.170720057 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.175690824 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.174917806 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.172811861 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.16951062 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.169896549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.170496244 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.170327259 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169783645 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.169965364 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.170118841 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.170815232 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.16977684 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.17066711 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.169242104 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.170026228 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.169973236 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170422659 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172925168 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.176281399 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171429292 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.168314502 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.17052393 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171158763 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.170004089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.170687939 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.176790839 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.17462893 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.179564528 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.178109395 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.175090308 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.171044389 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174225225 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.177711226 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.170188758 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.172372142 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.171910807 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.173331559 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.173189782 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.174534989 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172247294 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.177836928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.171831669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.171053809 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18078665 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.193441718 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.172428939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.173070209 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.174730349 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.172465845 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.169607027 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.17225675 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.171820589 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179298115 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.190859158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174009562 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.175655285 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.173086041 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.174294183 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177283946 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.173218704 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.174806548 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.171042341 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.172538085 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173779653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174851378 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.170373866 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.173252301 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.174616531 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.176563753 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.17814439 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.171494224 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.175909238 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.174705692 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.174378651 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.174389943 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174174193 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.171856093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.171147447 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.173447395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17473162 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.17450689 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.176641628 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.173569399 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.174625896 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.17481643 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175594122 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178230754 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.183149178 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.1801562 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.173072679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.173150359 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.174942649 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.177730078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174501277 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.175366501 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175255655 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.176310509 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.174466946 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17532861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.175036201 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.177927816 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189533772 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.19591929 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176483851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.176342235 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178219103 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.176775404 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.173675011 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.176807642 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.177026952 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.178637825 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.181438893 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.175815187 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18287169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193422534 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.177050576 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.179585558 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.179722551 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.181919458 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.177935254 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.177808699 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.177315579 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.181585047 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.191626142 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.178487589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186203002 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203159999 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.194584411 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.178013751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.177888476 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177067627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.177208693 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.178589437 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.177872391 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.177652864 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179124657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.178001989 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.178559007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.182420007 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.178617442 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.180022396 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.177957532 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.17769564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.178799462 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.175051208 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.179018064 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.180326119 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.178106133 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.178222779 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.179241678 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.180319716 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189816422 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.203013455 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.179940611 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.179850263 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.177523557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.181673136 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.182245862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188263136 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.185708045 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.17942933 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.179486754 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.180786785 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180478032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.179685046 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.178832436 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.181332538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180019955 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.177389905 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.190760322 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201596767 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.184253348 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.179388219 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180540912 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.180476363 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18145131 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181390838 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18159065 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.181207564 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.183247065 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184704759 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.18190907 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.18123324 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.183264695 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.186347734 seconds)
  done (took 697.941107928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.178995713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177704383 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.177236475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.17926144 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178562543 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179503576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179262415 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.178248341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.179364615 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.178908097 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.178977917 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179360557 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.17850435 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.179276879 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179676408 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.179733427 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178665826 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.178607385 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.178688089 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179077802 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.17974978 seconds)
  done (took 25.854893864 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.183093271 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.179768979 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.181036761 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.182869135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178930378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.182410866 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.181025398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182931592 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183384757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17951026 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.183146074 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182184305 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.180024543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.181236646 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179902359 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182829239 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.182416482 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181811208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.183120984 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181483748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.1844556 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181537684 seconds)
  done (took 27.098054709 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.185394077 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.184608628 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.184789091 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.180947184 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.184282675 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.180966742 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.183890814 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.183593851 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.183799765 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.184839741 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.183600365 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.185817328 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.190070166 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.188959504 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.187027562 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.185043687 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.186171661 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.185084714 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.185587976 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.182291547 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.190431631 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.200696522 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.182287182 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.183899567 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.186262367 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.185781507 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.184917122 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.186298844 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.186565748 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.188506612 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.185899751 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.184412319 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.186039306 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.184413277 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.186045116 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.189001488 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.187097655 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.183546001 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.186569688 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.194779303 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.202842756 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.186743146 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.191476034 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.20365794 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.18555449 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.189648631 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.192959898 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.18444281 seconds)
  done (took 58.078881387 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.186782987 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.185837644 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.183536328 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.186481317 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.186640476 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.186597272 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.187541031 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.186039625 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.184649625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.184503409 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.185976996 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.18514045 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.184067399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.18714097 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.187324632 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.18514331 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.184295925 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.184328195 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.184913271 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.185339175 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.184857642 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.188434306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.187178809 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.18559934 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.187741329 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.185373235 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.185418066 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.188603291 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.185576056 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.184647317 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.187229764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.189290248 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.188379397 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.186383168 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.185531923 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.189010122 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.189331827 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.185805498 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.188151684 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.185490954 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.188735091 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.189292079 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.187797496 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.188461333 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.186516995 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.186770747 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.185624682 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.185663707 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.186226497 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.18742299 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.1888582 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.186947853 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.189151496 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.187508297 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.188863364 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.189470232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.186712619 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.187627108 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.189840213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.187555029 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.187143157 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.189356183 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.187576851 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.190307579 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.189568186 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.188406484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.188909983 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.190263945 seconds)
  done (took 81.821825023 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191585816 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.191385676 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190939551 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191364026 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19078798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.191432311 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191697865 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.191553014 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.19203171 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19104185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.1919149 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.192161093 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.191474902 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.190659288 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.192115492 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191228144 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.192015719 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.190918255 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191986605 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191672306 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.192817533 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.191995254 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.191760096 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193517449 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.192994835 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.193083471 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.192979077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.191502477 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192460822 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.192038449 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.194053834 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.192968933 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.192783667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.193054252 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.193407726 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.193217957 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.192904102 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19350898 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.193282792 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.193690879 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.193019894 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.193139957 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192457574 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.19289071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.194093126 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193472178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.195032757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.195400519 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.193679286 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194767072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.194915298 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195093101 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194077252 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195227389 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.194432376 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.195170868 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19455584 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195584112 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194438616 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.195090232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195604634 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.195428271 seconds)
  done (took 75.074948915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194588754 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195511225 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.192519404 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.191876534 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195445473 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19264401 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.194905847 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.194807113 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.195206446 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.196283153 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195046868 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193340613 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193874076 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196922005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.193768091 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194582809 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195039356 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.193973176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195959345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.193552657 seconds)
  done (took 25.000058179 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.194439466 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.195100379 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.193383312 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.193955303 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.195536523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.193043555 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.196190856 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196599622 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192847372 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196781803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.196395397 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.196801295 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194180548 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194905443 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.196882439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.194305874 seconds)
  done (took 20.23214465 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.194112805 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.196309061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.196244191 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.197523779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.194809643 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.194074452 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.197121768 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.194938712 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.194668883 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.196827569 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.196373147 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.197424393 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.197071919 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.197970451 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.194751005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.197159457 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.195650614 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.194262863 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.197786679 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.19796506 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.195514145 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.195056336 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.199515811 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.19994305 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.196098432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.195886189 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.195339797 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.195424585 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.19563618 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.198346174 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.19640823 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.195999012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.194871062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.195290012 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.197906903 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.195694512 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.198897826 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.19808491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.199498404 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.199664472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.199420777 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.196560947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.198809393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.20058021 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.19714193 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.199743987 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.196756948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.197459825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.197608561 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.197221448 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.199487707 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.200470445 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.200039254 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.199816909 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.200143597 seconds)
  done (took 66.956504317 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199547444 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19955955 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.196041584 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.200450879 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.19948591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.197728719 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200636542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.200090028 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197813364 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.199828613 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.198253623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202225494 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198257716 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200983053 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19786562 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200020019 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.197304097 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197945777 seconds)
  done (took 22.699788294 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.198893445 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197870525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.20115633 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.198235724 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.19730259 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202101606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199730365 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.201756335 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201976472 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.198978625 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199020247 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.201255857 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200689128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.201682414 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202111815 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198793019 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.202055014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202806674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.199100206 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19995733 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202371914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202088538 seconds)
  done (took 27.526203541 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.202071738 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.200958956 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.201150467 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.216768524 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.218077774 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.202409315 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.20154267 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.201910526 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.222781892 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.250352683 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.245487778 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.219323678 seconds)
  done (took 15.698743707 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201787972 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204999006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201092207 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204185293 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202776055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20112511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201532286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200458429 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203731401 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202483137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202521106 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204825825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203778784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202897175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204609424 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204444466 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202782684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202225213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202705317 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20471796 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202042758 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204473146 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201164947 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202247763 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202140194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202516623 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206701572 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204743015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202866413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205666364 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205686184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202591698 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205421578 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204110801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206030535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205697913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202813793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206065552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206011911 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203554615 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205629956 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207251034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207918871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205031479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205783963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203378558 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203013676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202991623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203938742 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205991142 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206942686 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203900706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206791574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206153872 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206147466 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207249253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205114832 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204340459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206442404 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205683309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203197221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206882616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205178198 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204652598 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208666163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205139118 seconds)
  done (took 80.605304178 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205084641 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204547722 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20504223 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205157072 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205267781 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204089563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205361442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205180982 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204760498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204436166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208891417 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204717584 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204667939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205920241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205514323 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205646242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205095592 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206025033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206165629 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207280511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205744887 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205173226 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206541242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205765629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206649533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208674382 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205201649 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205927816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205949066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206629988 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206603576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206845115 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206096893 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206247751 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207648919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207462259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207098917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207307604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206764108 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210450133 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20608435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209973627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20646447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20714658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20716786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207752583 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207991089 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206811439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207575873 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207915356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208166661 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208407675 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208606126 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208401659 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207990385 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208058665 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208786158 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208118117 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211267724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211043078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20771002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207696994 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21101021 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208134085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208458069 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208840313 seconds)
  done (took 80.782449332 seconds)
done (took 1642.221679958 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.372668762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.326300411 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.208951365 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.226331671 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.210264769 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.233084638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.221897785 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.210919412 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.210502332 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.209420285 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.210348495 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.395407411 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.204761891 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.21101852 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.211293361 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.304262466 seconds)
  done (took 25.093236494 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.234511466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.230820365 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.335541633 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.24716478 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.247373513 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.401557789 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.285323643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.235955832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.388528132 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.268814335 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.224304418 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.255434638 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.233210649 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.223581838 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.250703239 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.407386845 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.461582179 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.23311338 seconds)
  done (took 27.290450782 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.640347781 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.24637154 seconds)
  done (took 5.024334068 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.250119531 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.237778435 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.230333244 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.227589199 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.22274059 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.226660729 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.229497441 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.222797674 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.22576418 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.348987352 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.237822957 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242335275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.245623743 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.232390121 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.229568735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.266403129 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.373623751 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.230081395 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.228602603 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.237710192 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.231965432 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.341905706 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.275006424 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.234085856 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.345357126 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.228270866 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.238978665 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.237489142 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.407139869 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.230639972 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.230257495 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.232114658 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.233253619 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.110185317 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.733607408 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.228392346 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25401648 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.240395251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.230246337 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.395505779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.234449578 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.238562666 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.226183226 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.738854477 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.378932753 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.34936515 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.241822099 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.235312202 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.233103339 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.291171909 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.235054658 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.233961475 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.273510327 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.013044274 seconds)
  done (took 79.671709859 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.23118718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.226789351 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.404931117 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.245270917 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225411187 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.245354067 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.24568713 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.491981381 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.250455178 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228855647 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.506406508 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75404534 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.25141686 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.258916371 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.066948573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.273564843 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239350809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.227844022 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.248488966 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.23169673 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760205364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.232963663 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.229637639 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.387737397 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.264319522 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.73475626 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.231021592 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.246264116 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.236130357 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.226964701 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.713620777 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.259327613 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.276651165 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.228081252 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.490808259 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588428933 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.547625272 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.231862248 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.244836791 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.231415965 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.242092787 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750182068 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571651723 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233362821 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.246226004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.718485455 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.232805791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.241180843 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.231813928 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.471925098 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.232243395 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.229978406 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.232259281 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.247784897 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.230536139 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.299531484 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.29066586 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.733711724 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.232048479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.228093308 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.2943207 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.232020019 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.227753773 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233538272 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.23315437 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575083896 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.371958344 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.238580485 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576569291 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.714646483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.24731724 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798051714 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.248023556 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.238414693 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.295991192 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.23011086 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.255944108 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729550314 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.260294284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.230405342 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557908678 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.23811986 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.511535664 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.248906436 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237071383 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.772265249 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.240671869 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.306821994 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.229780235 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.254693145 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.23511036 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233349723 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.519185159 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.278073657 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.232117083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.230982181 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.269285164 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.230867687 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.232888741 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.233035236 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779840836 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.262522469 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.231352686 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.239138729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23220783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.238581747 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.231669635 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.233730034 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492241896 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.239099333 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.241620261 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.233184479 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.233132681 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.253964894 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.377414305 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.238956714 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.534387166 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.240862348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.232035705 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.242007061 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23208679 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.259617818 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.233145775 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.244098709 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113331748 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.575873739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.253098656 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.232709439 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236901712 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233910054 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233983791 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235662783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.256114298 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.237828459 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958551478 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.281422901 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.267383915 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.23606167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.236643405 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.234642225 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.235015031 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236534115 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522655857 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.509337249 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.372182383 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.235094771 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.237183506 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955966299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.269718171 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41711834 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.253540148 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.235539588 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532242877 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.394038674 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.237059378 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.235420131 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.238039219 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489832413 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.241285918 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548348016 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750763672 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.255807016 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.241595837 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966054962 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.963011027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.243761248 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.237277221 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.514956979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.253240216 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.235036578 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.236582209 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.242889509 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.235371796 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.254021448 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.238594728 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.237491108 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.237488389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.456630073 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428023058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.254156908 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.248071069 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735129318 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.244477608 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237941994 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.267730554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.239437735 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.238385389 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.299239794 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.241339301 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.238875273 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.238932121 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.239278978 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823431397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.244216466 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.245195601 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.429221637 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.891875028 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.258438343 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.247391572 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.243842443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.113982602 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.758615482 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.278044975 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.53456388 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.25327956 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.278323474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241515997 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344363819 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761165189 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245364785 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241357985 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860639656 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.258379061 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.915055491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.239898102 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.240874456 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816544779 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.258713381 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.240519615 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.237867998 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.243534381 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53227287 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.24507126 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.27155704 seconds)
  done (took 475.732886105 seconds)
done (took 613.936915731 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.239803216 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.242824815 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.231809657 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.243850095 seconds)
  done (took 10.113303297 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.249933883 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.245375694 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.247539694 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.246166221 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.247893674 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.246394768 seconds)
  done (took 8.638313026 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.239421078 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.247074512 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.24670013 seconds)
  done (took 7.891178561 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.4370989 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.262609685 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.55040835 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260837711 seconds)
  done (took 8.674975661 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.248256055 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24853246 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247659307 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.249385655 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.251730432 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.250309396 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.24904451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.248962246 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.251287626 seconds)
  done (took 12.40462719 seconds)
done (took 48.880316614 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.256215806 seconds)
    (2/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.381784519 seconds)
    (3/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.233953197 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.2425091 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.326481034 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.478921054 seconds)
    (7/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.574969335 seconds)
    (8/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.233716298 seconds)
    (9/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.356122126 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.281701906 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.266564261 seconds)
    (12/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.229259214 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.635927202 seconds)
    (14/286) benchmarking ("sort", Float64, true)...
    done (took 2.263713709 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.24132184 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.311019991 seconds)
    (17/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.266831222 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.250835199 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.229836869 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.258063807 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.350954897 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.102588528 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.048036257 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 2.264298243 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.254441263 seconds)
    (26/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.241837909 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.349338213 seconds)
    (28/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.268901012 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.252089727 seconds)
    (30/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145678108 seconds)
    (31/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.318986366 seconds)
    (32/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.570797661 seconds)
    (33/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.331685307 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.841397236 seconds)
    (35/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.236982415 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.229870278 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.390038519 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.261591721 seconds)
    (39/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.382180119 seconds)
    (40/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.52270034 seconds)
    (41/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.268902159 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.239562441 seconds)
    (43/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.229827471 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.31251768 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.234881869 seconds)
    (46/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.258322461 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.235049554 seconds)
    (48/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.40019104 seconds)
    (49/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.552213621 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.305812538 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.035736581 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.253629446 seconds)
    (53/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.330695222 seconds)
    (54/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.233252755 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.34847348 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.968947207 seconds)
    (57/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.350537899 seconds)
    (58/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.368449723 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.259819513 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.234698307 seconds)
    (61/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.252015386 seconds)
    (62/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313692013 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.252907783 seconds)
    (64/286) benchmarking ("sort", Int64, false)...
    done (took 2.249301536 seconds)
    (65/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.246547858 seconds)
    (66/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.971431243 seconds)
    (67/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.98372123 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.565135442 seconds)
    (69/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.467236408 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.293722386 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.245934312 seconds)
    (72/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.94592107 seconds)
    (73/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.247488784 seconds)
    (74/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.154031568 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.356535146 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.230274043 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.676036029 seconds)
    (78/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.265001149 seconds)
    (79/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.234091115 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.16068425 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.237541648 seconds)
    (82/286) benchmarking ("sort", Int8, true)...
    done (took 2.247555603 seconds)
    (83/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.263199455 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.040349534 seconds)
    (85/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.270508039 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.233914271 seconds)
    (87/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.229934001 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.234867357 seconds)
    (89/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.26398581 seconds)
    (90/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.522161011 seconds)
    (91/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.29803853 seconds)
    (92/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.291987863 seconds)
    (93/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.235616407 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.379264695 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.246518103 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.23506619 seconds)
    (97/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.801781173 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.250929045 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.252401192 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.281982477 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.236045907 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.250787189 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 1.777777821 seconds)
    (104/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.276728658 seconds)
    (105/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.236303754 seconds)
    (106/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.586288566 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.509839975 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.251510408 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.257648053 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.245905484 seconds)
    (111/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.792786924 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.968365801 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.336218353 seconds)
    (114/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.236963446 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504638692 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.257124362 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.240322649 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.3503669 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.235574438 seconds)
    (120/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.329816517 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.357204364 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.2556215 seconds)
    (123/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.264590143 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.703611362 seconds)
    (125/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.266812949 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.964389109 seconds)
    (127/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.274261387 seconds)
    (128/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.237420797 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.10457913 seconds)
    (130/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.242759601 seconds)
    (131/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.563323714 seconds)
    (132/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.339899014 seconds)
    (133/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.235607949 seconds)
    (134/286) benchmarking ("sort", BigInt, true)...
    done (took 2.267641564 seconds)
    (135/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.44090672 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.986764159 seconds)
    (137/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.277011408 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.236244513 seconds)
    (139/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.256433538 seconds)
    (140/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.310138158 seconds)
    (141/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.238883917 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.110622337 seconds)
    (143/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.37917518 seconds)
    (144/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.241139595 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.252720879 seconds)
    (146/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.283907339 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.34975061 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.252469509 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.245359757 seconds)
    (150/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.422701962 seconds)
    (151/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.254405205 seconds)
    (152/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.843687445 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.279033158 seconds)
    (154/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.261039897 seconds)
    (155/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.261795031 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.962032699 seconds)
    (157/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.239337807 seconds)
    (158/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.300459406 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.276535298 seconds)
    (160/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.23969683 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.256685981 seconds)
    (162/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.397942348 seconds)
    (163/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.293091233 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.255024192 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.249136085 seconds)
    (166/286) benchmarking ("sort", Float32, false)...
    done (took 2.252075467 seconds)
    (167/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.281820392 seconds)
    (168/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.250553762 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.869700197 seconds)
    (170/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.253590979 seconds)
    (171/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.277583712 seconds)
    (172/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.239506722 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.877810741 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.586765121 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 2.273904807 seconds)
    (176/286) benchmarking ("sort", BigInt, false)...
    done (took 2.253289769 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 2.252150931 seconds)
    (178/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.313521925 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.78389163 seconds)
    (180/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.981346541 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.079286559 seconds)
    (182/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.241384593 seconds)
    (183/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.348001575 seconds)
    (184/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.541686854 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.541998899 seconds)
    (186/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.798441289 seconds)
    (187/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.245422764 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.656420184 seconds)
    (189/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.374157375 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.25244518 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.220322612 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.468716767 seconds)
    (193/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.491161114 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.275080899 seconds)
    (195/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.240135815 seconds)
    (196/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.267441934 seconds)
    (197/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.267360539 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.254109488 seconds)
    (199/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.270036429 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.042495743 seconds)
    (201/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.249884098 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.378758642 seconds)
    (203/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.252737913 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.278005102 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.244964207 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.638523133 seconds)
    (207/286) benchmarking ("sort", Int8, false)...
    done (took 2.275201162 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.253316804 seconds)
    (209/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.249117262 seconds)
    (210/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30031682 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.294547904 seconds)
    (212/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.753726088 seconds)
    (213/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.268039283 seconds)
    (214/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.260707135 seconds)
    (215/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369324847 seconds)
    (216/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.242668797 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.283098601 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.249393913 seconds)
    (219/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.79628141 seconds)
    (220/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.248888833 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.267729675 seconds)
    (222/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.586117072 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.125691479 seconds)
    (224/286) benchmarking ("sort", Float32, true)...
    done (took 2.257749079 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.249965482 seconds)
    (226/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.243235099 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.452496346 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.375202084 seconds)
    (229/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.095106412 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.374580704 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.12666409 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.05970734 seconds)
    (233/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.237338383 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.279531895 seconds)
    (235/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.237442098 seconds)
    (236/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.242050146 seconds)
    (237/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.274281309 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.656013885 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.262404244 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.255618272 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.828488497 seconds)
    (242/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.283167196 seconds)
    (243/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.238303929 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.279720934 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.15464568 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.270800589 seconds)
    (247/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.27859142 seconds)
    (248/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.285026071 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.25612099 seconds)
    (250/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.255180415 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.39129302 seconds)
    (252/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.811126848 seconds)
    (253/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.399363321 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.252407108 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.246294239 seconds)
    (256/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.25969496 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.284127046 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.239909713 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.339876852 seconds)
    (260/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.242510583 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.351712149 seconds)
    (262/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.241266502 seconds)
    (263/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.246153162 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.375181103 seconds)
    (265/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.279792369 seconds)
    (266/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.980860346 seconds)
    (267/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.245898196 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.079284831 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.257432141 seconds)
    (270/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.248740555 seconds)
    (271/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.246450634 seconds)
    (272/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.113336982 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.315521516 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.997368728 seconds)
    (275/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.260323003 seconds)
    (276/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.17682336 seconds)
    (277/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.255164058 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.24277304 seconds)
    (279/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.245992363 seconds)
    (280/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.252610524 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.281346839 seconds)
    (282/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.240802897 seconds)
    (283/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.317859559 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.642769893 seconds)
    (285/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.277415595 seconds)
    (286/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.396508648 seconds)
  done (took 541.167537265 seconds)
done (took 542.325988736 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.286884911 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311262901 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.264588223 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.287752786 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.378467389 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.44274901 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.277008719 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.268109463 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.313078266 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.314809504 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.272022484 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.440737663 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.267660709 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.266139169 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.266614139 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311389578 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256616187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.266896453 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.283881243 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.277134317 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.283116127 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.273017322 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.316752732 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.443212678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.271508998 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.270147291 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.270842041 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.286824068 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.379922334 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.270996573 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.270756095 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.279360337 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.257982396 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.265841273 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.263959599 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.28845137 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.27928797 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.277553264 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.273482108 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379412293 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257098545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.276996532 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.270683968 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.269035033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.268577483 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.272049555 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.269078449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.27619939 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310573731 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312937533 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.258219718 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.289644198 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.27376752 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.26431901 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.276322622 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.263599042 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.269708845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310219315 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.284205908 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31109345 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.237893631 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.26470246 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.263500307 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.279979946 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.268718858 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.258981736 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.259477628 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.260791318 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.252218346 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.26570861 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.254473675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.271055375 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.259038179 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.270594622 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.288540098 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.245463153 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.252413801 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.255021671 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.263926056 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.256617335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.267379128 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298573069 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.261507637 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.256950136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298652681 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.432733393 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.266885967 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.258173704 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.267241139 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.277684667 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.265495902 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.26826254 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.260995528 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.252573699 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.266931727 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.262541078 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.2673174 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.266831491 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.262565066 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.268444338 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.250411611 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309644777 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.254766426 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.254320197 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.257535884 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.379407626 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.248956179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.261369734 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.280151109 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.306032943 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.259185233 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.233155755 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.269356298 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304088104 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.267235111 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.262418788 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.254201089 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.234066138 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.25577138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381961724 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.262352253 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.265094161 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306400987 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.261386178 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.257019353 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.252381811 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.261119298 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301634623 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.381205382 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.270615884 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.371506348 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.257768717 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.262944991 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.29308553 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306265486 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.292054111 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.262970068 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304625187 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.276419334 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.256330234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.270552619 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.270256737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.260599362 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.266807166 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.255328882 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.291551241 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302137851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303288406 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.282932317 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.382197016 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.257863255 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.239952729 seconds)
done (took 212.08661658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.320165999 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.255339403 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.359032792 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.257095526 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.356805019 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.356085713 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.255972657 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.255655907 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.254183064 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.63474816 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.255762774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.254940654 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.257105402 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.255416426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.34115447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.258148591 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.25549011 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.599031036 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.259010273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.330822751 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.257929477 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.257110195 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.258366372 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.641152285 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.258393783 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.254685031 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.330985266 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.259097756 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.604425759 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.252637004 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.25640938 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.604571642 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.349499273 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.275960205 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.269121505 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.266273885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.357767221 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.275949095 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.341400278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.340223278 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.361369269 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.297948169 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.25505718 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.257575422 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.260041814 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.261455561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.256958513 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.286522831 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.259282887 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.257938793 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.601502076 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.269724576 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.267550593 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.258849725 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.257780652 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.27978428 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.258489314 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.261013795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.351806112 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.261411604 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.323225941 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.644736067 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.637430366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.260576842 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.257756438 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.259461847 seconds)
  done (took 99.456649857 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.327724506 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.340753131 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.368953853 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.277551515 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.314746104 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.372724074 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.277336052 seconds)
  done (took 10.448859286 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.268078057 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.261062591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311582172 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310552595 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.260503273 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.475027594 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.262230195 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.27226347 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.260519066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.339082328 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.262436601 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.264011666 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.268631233 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.257395997 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.309974609 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.273234792 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377283055 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.263054644 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.263031737 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.416404173 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.260044752 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.270029765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.339570758 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.272979823 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.264361053 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.269673167 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219386321 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26292719 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.25981477 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.261287285 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.261979643 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.372341393 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.264200181 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.26135309 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.259896422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423626626 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.264011324 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.260802205 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.263177623 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.264786471 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.263628585 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.263976536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.264516738 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.261536471 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.26452809 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.288426409 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.264161873 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.263909409 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.264485521 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.264488199 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.341365742 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.264657084 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.262247353 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.261842804 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.341124147 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270931277 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.264674091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.26206365 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.26581758 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.261620049 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.41884121 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.313417852 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.266703242 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313116379 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.266242393 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.265781653 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.265574702 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.265668229 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35837313 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.265334303 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.313879101 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.263530311 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.489682606 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.289267609 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.266900282 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.268575119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.268379905 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265628092 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.262702633 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.272213968 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.263616045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.267254356 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.271910816 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264630119 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263015668 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449024844 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422459061 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.263233187 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.278748507 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.273901794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.2641867 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.345142326 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.266342103 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.264678154 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318972215 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381741534 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.343215804 seconds)
  done (took 131.347195935 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.272093491 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.27519707 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.271742224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.291219623 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.268042586 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.267850256 seconds)
  done (took 8.821369516 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.269427447 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.269052555 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.267019816 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.267603128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.266475907 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.269497165 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.269123089 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.269622784 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.270880999 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.269562159 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.269030997 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.271028895 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.271317261 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.268989661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.270357613 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.268106876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.269207143 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.267399292 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.26796331 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267880419 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.26754133 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.269411731 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26828716 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.269939094 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.272838346 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.269210796 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.27660177 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.269418732 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.267800327 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.276653026 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.287636618 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.27025415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.271653237 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.274998037 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.273191109 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.270148454 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.272957018 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.27336026 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.268434639 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.27320152 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.272242238 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.270850237 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.270078266 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.27284282 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.272049003 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.274024341 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.274956272 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.279173231 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.271540447 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.27256936 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.273163156 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.271038205 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.274704766 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.275110147 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.275224675 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291196988 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.276184597 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.273129594 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.27192156 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.273035786 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.271607132 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.27260776 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.274004772 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.274369034 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.269864577 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.273274065 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.274651096 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.274935859 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.271441357 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.272028338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.273920888 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.270203245 seconds)
  done (took 93.759382919 seconds)
done (took 344.999998898 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.691124696 seconds)
  done (took 3.870720708 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.283068333 seconds)
  done (took 3.464922487 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.360764336 seconds)
  done (took 21.544134288 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.306646129 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.282609086 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.288708112 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.277760456 seconds)
  done (took 10.336556438 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.486085105 seconds)
  done (took 3.666566773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.266426297 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.287668941 seconds)
  done (took 5.735977412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.49018364 seconds)
  done (took 3.670955635 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.540049033 seconds)
  done (took 3.71908005 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.292808413 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.281720747 seconds)
  done (took 5.765822388 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.255176551 seconds)
  done (took 3.435863627 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.629025207 seconds)
  done (took 15.813042631 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.269667575 seconds)
  done (took 3.453902824 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.332455959 seconds)
  done (took 3.513153692 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.689132928 seconds)
  done (took 5.870157066 seconds)
done (took 95.04045725 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.267774694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.267998487 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.267965535 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.267736328 seconds)
  done (took 10.252761545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.3082307 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.307555096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.30892179 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.319231592 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.311003197 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.307801729 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.300950704 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.300298195 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.318815289 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.31118177 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.310056517 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.310969793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.307973453 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.301047807 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.311185202 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.311148579 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.319849918 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.309586733 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.299864155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.312460052 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.275545659 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.320144926 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.312736027 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.275827133 seconds)
  done (took 32.554907975 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.795265698 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.382582122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.430038629 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.340655951 seconds)
  done (took 7.133071202 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.326586263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.329157903 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.339597329 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.379259505 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.406869003 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.339176917 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.302244974 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.298321447 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.284099379 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.329961533 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.405979745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.345491544 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433023012 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.27597391 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.464097067 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.276518938 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.276386243 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.32931839 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.380229458 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.393568121 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.277534749 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.329165355 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.332737792 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.345798394 seconds)
  done (took 33.384748752 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.276794516 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.295486565 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.277388195 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.275148093 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.284505795 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.275293407 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.277046124 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.278283053 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.27701476 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.776562709 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.28036481 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.289093515 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.758753426 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.282359156 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.282525315 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.278496441 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.772906612 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.76378108 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.282596217 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.284288785 seconds)
  done (took 28.754481008 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.270957028 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.271427933 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.624443928 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.527844476 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.271739153 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.277322264 seconds)
  done (took 13.429931176 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.345548502 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.497810009 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.284094556 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.618801352 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.704120166 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.284098122 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.280879512 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.513773476 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.820785809 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.806122523 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.338879356 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.349367378 seconds)
  done (took 19.031599143 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.274405744 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.278975522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.278358377 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.294489839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.330962103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.304304255 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.287259539 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.274310295 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.336195137 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.355775362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.305796229 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.333543358 seconds)
  done (took 20.844046406 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36079835 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273822536 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281880372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293248013 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280634325 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12103267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386705886 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985098198 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.296954839 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54868736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275170424 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369560686 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529640416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287010442 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281716727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.238225921 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50609146 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754743542 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282445565 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281029163 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306377553 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275654164 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.281772592 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.493586676 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283256743 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276480509 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.5369284 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276098295 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551145279 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295668349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288158582 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276766372 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554141155 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929448132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392175641 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485995177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321204517 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284412562 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.269008748 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.282997053 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288349372 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283995364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288106963 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276002955 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276378505 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275866483 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995407268 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.302263288 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.275945414 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277829285 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526348044 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378607717 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.282163841 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27875476 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338218916 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283550336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.282662515 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291972386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852426396 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279360093 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285588409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.283890315 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305363514 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286287974 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900920271 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.290804041 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.282561209 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282106395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279628751 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281315778 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299918507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279386792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.304193876 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279606054 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966426293 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286208797 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286229323 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833920958 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286802142 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.300783041 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507112049 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279548613 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280329438 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.278600063 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279066409 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966759621 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293527027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.266236265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296688429 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991255342 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510868574 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307222402 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303502524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.503321253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.266086977 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281447262 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.28591063 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287595879 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302110889 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989726969 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29885279 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.284402139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536141898 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.492973075 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284598912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.247169505 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763931843 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300870786 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.299607955 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281154364 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497961344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.855491942 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.302765833 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287030599 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30324138 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281767617 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006039418 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290261564 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.387817832 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295312435 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545025089 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.044050192 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287664845 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350164499 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288310711 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282232122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290259651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289688521 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282631103 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.485471155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314127329 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297254688 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.283543035 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282508594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.294595505 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288037139 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.305782059 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.508334087 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287583236 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564351299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283028353 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283548561 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284888771 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.508267435 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.28598423 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.627004502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542604943 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28944682 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29704367 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300589286 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302663666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385353429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306313516 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.284368512 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.545897505 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.288952527 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.28836046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294141463 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292569044 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292700629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.291626159 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319641636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862124042 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268136752 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286437867 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175462043 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.298601929 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354294825 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292298126 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498794618 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.296743857 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329063078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.297602437 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.296264366 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514981537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295965278 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.293236258 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372402691 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.762241651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87524638 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305595762 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.286210083 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.284368765 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.285562047 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287819424 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288037745 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286810464 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49969737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307586549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320154214 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866608467 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295041422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295405089 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.298565376 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298529624 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.294213996 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289144629 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.294851251 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301121346 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301062479 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.304705022 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432450504 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.302055806 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287220901 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.805194626 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293579382 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289950625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288225705 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32382358 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295353487 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106936977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548442049 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289077956 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558416493 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30161521 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.30954207 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.288263179 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289984815 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299758238 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.300028268 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318850483 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.300516415 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297095909 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295821787 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859038394 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007933851 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821569088 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305328561 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.298101788 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29506916 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007194684 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308764229 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291266818 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518931558 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023934495 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310778108 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7731071 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.312121552 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033612906 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54448759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526750632 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301117567 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.293915693 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551057477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512898139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328192106 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300454418 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297621915 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.280515184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849809248 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312506448 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394049664 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010630913 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309519814 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298088681 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.301436326 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306557688 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705368569 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31111954 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292140577 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298458007 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305897607 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114618652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292666237 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292074595 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916455322 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310628441 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.777802071 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31132613 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506739297 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.308892346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.298308211 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.291084827 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.29819404 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.553383515 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541566297 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299796309 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304739077 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82776404 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.154166322 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.299146159 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293317718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025875203 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298921504 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577197576 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.30985633 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.303528836 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306038574 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294091852 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295572016 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.291991703 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301911466 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269770333 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776792373 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.348981216 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335532193 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314145279 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143360598 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.551615811 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.309223715 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868443562 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525041642 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339329999 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323456988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.299894008 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298677429 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.288932366 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296441335 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295303661 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333478692 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524679173 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311431298 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.287573015 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318583306 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512440598 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295863181 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305346924 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541631144 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.300095173 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.311775531 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019654494 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325932183 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.306153005 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304362185 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332848736 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30248304 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393921713 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511381717 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.314036789 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.307993803 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70190042 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329776515 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30451399 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.311298084 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392204666 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312122134 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.312379455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.076185336 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877181057 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033939047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.883398836 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553725288 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30489841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30188492 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296477594 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445980437 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29794389 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571778054 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299326191 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.332901437 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326564557 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303740306 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313956127 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51399959 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573836618 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298575607 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298233902 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305030461 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.29931242 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309994788 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.509132057 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78797042 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856780164 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306426204 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308758306 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024130179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592080987 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299369969 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299794831 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298955363 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.317291232 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338338317 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.31029081 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312986706 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45220821 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548135848 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965467653 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.328917165 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.327652067 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.074272875 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313579432 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560458053 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298450143 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539203653 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884896583 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995741402 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570060524 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371329814 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516698253 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.30684109 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449366823 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.309533311 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308091005 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302573383 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145256238 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.299305754 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.310616143 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884226843 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569876161 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.305695527 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.309972025 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329432427 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.311381463 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524798919 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000890056 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530852938 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313571777 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303649521 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.302945915 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885769531 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561239571 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309108907 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.306407962 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541924923 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309222768 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3284145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.755349003 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.300763451 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856671109 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.278556941 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326343426 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304178373 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001000666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89151134 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.321208826 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794041038 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309959897 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303451234 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583271262 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.308972692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30413757 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585322103 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.307926086 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307758552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525345018 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.887751167 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055998483 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.327297047 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327470896 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.327365456 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304757384 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32902821 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308832908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312797401 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.729519806 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325655709 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305749469 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316815974 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.312402472 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312873625 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.30751522 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306262148 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.312443729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.311311349 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.307856306 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311032848 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.310552701 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892298937 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330360222 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.128122471 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.638155453 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562198425 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314685851 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.298888373 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.309886781 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306051431 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305608611 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305952843 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341544743 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868686602 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.324140948 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.322291057 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310881843 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.522554848 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51825148 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306572653 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545820025 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323149481 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325628406 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.294578069 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307562291 seconds)
  done (took 939.980652933 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.310502233 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.32578474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.327213116 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.323854339 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.316290938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.348905982 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.311182264 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.321213874 seconds)
  done (took 19.804513172 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.315410279 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.321902707 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.315029051 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.322312219 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.31708688 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.768428148 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.333606998 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.321198136 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.320575495 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.317283881 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.324157159 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.961743859 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.333661492 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.315264046 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.301171657 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.321356661 seconds)
  done (took 31.429734932 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.230157973 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.432551874 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.139141103 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.329625848 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.339376368 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.309745562 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.515934124 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.325620735 seconds)
  done (took 25.842763701 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.319218223 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.319961313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.321284396 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.320361117 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.321072869 seconds)
  done (took 7.822595165 seconds)
done (took 1191.449336607 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.313305444 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.31572072 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.31317919 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.316558348 seconds)
  done (took 6.478694553 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.297828251 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.297007662 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.297997536 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.30871137 seconds)
  done (took 9.422578859 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969137132 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.904302818 seconds)
  done (took 5.094308447 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.311236382 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.072653034 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.04748927 seconds)
  done (took 7.652676166 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.606787585 seconds)
  done (took 2.827039241 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.718667478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.679078103 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.513164119 seconds)
  done (took 6.134273442 seconds)
done (took 38.829890596 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.309577709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.577869799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.466277454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.319005373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.502122451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.465795769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.049368727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.309927065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.314095283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.311247985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.316833649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.472999757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.029942334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.566688439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.031722845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.56990296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.473889348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.315115235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.310303858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.310398776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.044239299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.317081698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3125752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.32007851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.472115478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.458326621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.311878974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.561521828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.317769315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.319947088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.461701228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.314092214 seconds)
  done (took 80.456566494 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.316914536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.311883307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.317945241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.314668945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.31626679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.321129187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.31346235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.31277566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.313018875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.31747161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.327650076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.314130742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.311282711 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.3139379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.309023616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.316949896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.321839736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.324630449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.319682536 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.309124409 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.310611475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.309982511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.323551937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.325577251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.315250527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.317016763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.312695369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.31332695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.30918773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.318858773 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.322720725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.312546067 seconds)
  done (took 75.339197599 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.308753359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.310352563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.326031798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.321281549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.31003181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.315256179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.312429928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.317498988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.322751996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.320527294 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.321659622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.309958615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.326052853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.311838681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.312130744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.311226831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.310903737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334124926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.331031812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.309615862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.3308536 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.310916385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.311847713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.312507032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.326038359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.312045326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.312527172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.31240579 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.320300547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.312071633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.317036204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.311850594 seconds)
  done (took 75.356541353 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.512740988 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.318732253 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.321171919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.256062037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.320428075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.318977732 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.312609513 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.516020689 seconds)
  done (took 14.100229322 seconds)
done (took 246.473919422 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.311799383 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.347261219 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.524711718 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.340464014 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.312984496 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.361537262 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.340636002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.529521899 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.275189119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.551587087 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.340103412 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.338503222 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.314453601 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.354545779 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.586100485 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.46084003 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.184608364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.28396309 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.650036626 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.334268686 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.60231122 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.318305082 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.583325534 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.277332488 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.334313575 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.321214123 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.318693843 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.193118882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.357314755 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.654664303 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.326081448 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.324399742 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.403282462 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.416100093 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.524481513 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.469556716 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.315391944 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.404273347 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.537712028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.332924127 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.321410808 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.097310433 seconds)
  done (took 80.401130044 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.321640889 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.444190126 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.322529879 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.32371696 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.32303457 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.45197018 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.418581097 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.323017192 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.323383267 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.323162485 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.322927566 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.323483927 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.323082878 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.323874565 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.32365024 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.324349576 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.323465594 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.325493582 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.325810985 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.370000786 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.447159436 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.345953111 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.318507578 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.323982444 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.425836128 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.457934825 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.323508931 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.317871464 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.367830403 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.326130303 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.327990235 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.370783124 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.325658068 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.325391657 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.444160869 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.425542247 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.346895459 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.323173576 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.440608691 seconds)
  done (took 54.076826632 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.326829267 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.569628178 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.7448964 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.338352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.326717474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.331415358 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.400408542 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.332227304 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.330109568 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.330591555 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.491531915 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.330285124 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357878299 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.768298856 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.334829728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.328219121 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.328636365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.32761837 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.579048621 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337906734 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.420730746 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.333799581 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.40283 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.337309355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.349326436 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.329203319 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.333786534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.896439256 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.331096801 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.493278497 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.082337825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.404573368 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.847389972 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.754943798 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.092734755 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.335081343 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.328963349 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.499976127 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.330663075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.329605505 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.404622559 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.329686397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.757527173 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.980034933 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.346682687 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.331041592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.918385524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.497876489 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.565592452 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.341954297 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.784514233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.332449024 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.331243905 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.331111261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.565777648 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.336500205 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.330374563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.893645666 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.352146918 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.405459426 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.333428951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.331486641 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.585279438 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.330840583 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.571033288 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.331321239 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.340878503 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.350498309 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.760932737 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.334317543 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.012177624 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.350569287 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.332326385 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.495830511 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.576522179 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950142317 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.336605866 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.587273875 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.859458462 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.404601488 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.3412691 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.885158413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.408104198 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.341778706 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.334499633 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.335638313 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.332206699 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.378894846 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.404795372 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.941818093 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994870152 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.925438543 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.424581636 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.350138243 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.333307945 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.895445629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.349256089 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.333879912 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.757772302 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.016773633 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.349887073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.3409662 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.998559059 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.352722686 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.409427804 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.341762538 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.771076186 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.335466078 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.3796002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.333400212 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.341819612 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.355802611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.409450372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.33825297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.333736462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.966653301 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.522178891 seconds)
  done (took 175.961895147 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.341434643 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.32832612 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.338546554 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.32720445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.325909561 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.334300317 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.327449704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.327763367 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.335133157 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.327705667 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.328669754 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.330029048 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.328253254 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.33001343 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.340172134 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.334732193 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.328158018 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.3294778 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.328229418 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.32823592 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.328410547 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.352680898 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.328957535 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.328706127 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.329102419 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.329168037 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.341638424 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.338010373 seconds)
  done (took 62.533540202 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.334954538 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.876094562 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.339538144 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.462851164 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.356304598 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.333253014 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.459879831 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.38923857 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.341815063 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.333409801 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.333435132 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.627321427 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.341960345 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.8327992 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.522575657 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.480027737 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.836872853 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.357905148 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.335379747 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.33475398 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.46346847 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.349515016 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.628215304 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.887670567 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.342058814 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.883483475 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.333650172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.33683265 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.338161049 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.884124601 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.341258431 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.630030439 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.415042426 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.393515031 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.886250811 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.836041935 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.845832545 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.477818073 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.341842589 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.335640421 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.336310573 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.331913028 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.886447562 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.343756783 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.338968484 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.881510647 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.359669138 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.34030421 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.343751924 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.337475098 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.394916667 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.397055355 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.637382553 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.896242654 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.415259603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.351255031 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.46414454 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.718493893 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.346438851 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.838155671 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.349653194 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.890148377 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.362383943 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.330450402 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.338724056 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.344758044 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.482297355 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.468015762 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.844475031 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.361711413 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.838370679 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.503073265 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.341822976 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.338797606 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.342066072 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.891227417 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.843158004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.503221928 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.474019968 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.528014545 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.333022936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.339728531 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.332288282 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.413383892 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.339193243 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.891489915 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.856660813 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.360295999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.341926055 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.342585733 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.342228804 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.510014355 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.91096006 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.418854081 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.835251332 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.656155641 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.640776902 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.347147784 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.396931512 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.35860253 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.638361143 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.347585439 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.397071302 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.798101254 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.643192258 seconds)
  done (took 159.550528057 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.574881113 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.369515522 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.429661113 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.489773361 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.9349258 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.921404891 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.352895814 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.463244365 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.447013791 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.598198801 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.350212564 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.438508395 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.550207322 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.420086134 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.040063396 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.412273839 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.439285751 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.489326986 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.481464717 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.341382138 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.99077611 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.635690441 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.525501214 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.369349909 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.446313281 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.091175507 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.913470057 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.866520015 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.506986772 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.354123472 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.855843218 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.353221679 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.256381746 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.994671305 seconds)
  done (took 62.950380763 seconds)
done (took 596.69809417 seconds)
SAVING RESULT...
DONE!
