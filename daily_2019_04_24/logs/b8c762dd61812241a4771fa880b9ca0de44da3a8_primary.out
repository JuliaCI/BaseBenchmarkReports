cset: moving following pidspec: 22887
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293675367 seconds)
loading group "string"... done (took 0.581405447 seconds)
loading group "linalg"... done (took 7.11592867 seconds)
loading group "parallel"... done (took 0.164323837 seconds)
loading group "find"... done (took 1.119215647 seconds)
loading group "tuple"... done (took 1.979518904 seconds)
loading group "dates"... done (took 1.265044291 seconds)
loading group "micro"... done (took 0.234128251 seconds)
loading group "io"... done (took 0.962990303 seconds)
loading group "scalar"... done (took 38.263240276 seconds)
loading group "sparse"... done (took 12.294450746 seconds)
loading group "broadcast"... done (took 0.968191469 seconds)
loading group "union"... done (took 13.037114623 seconds)
loading group "simd"... done (took 4.408760159 seconds)
loading group "random"... done (took 8.922219733 seconds)
loading group "problem"... done (took 1.917664746 seconds)
loading group "array"... done (took 21.090993065 seconds)
loading group "misc"... done (took 1.91500789 seconds)
loading group "sort"... done (took 3.195464751 seconds)
loading group "collection"... done (took 17.855397544 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536138615 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142447389 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118336151 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140364421 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184430338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132939816 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145799862 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085709479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.026324715 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167568926 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141968059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.47794028 seconds)
done (took 5.059452355 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204678471 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088438061 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09689733 seconds)
  done (took 0.885117454 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067641732 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128129 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08184527 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069108799 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0681665 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082019205 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068405122 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066520867 seconds)
  done (took 1.271763694 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074919713 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069643507 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085866304 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068753724 seconds)
  done (took 1.006852372 seconds)
done (took 4.154268939 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897075404 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236002533 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192003788 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453905929 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148653429 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188061497 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680569613 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333750196 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211425027 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101325127 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10682474 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377246207 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1079795 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67753326 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077375523 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106465364 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169401551 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448220027 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082233776 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083455497 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105470878 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142999477 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104234055 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078414731 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169509212 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070489 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147812172 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097418666 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069143537 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243560386 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190561862 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.71833278 seconds)
  done (took 10.559859171 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100543703 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117570272 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070070255 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140256792 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104459212 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086747707 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072423798 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084470887 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092096595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158973632 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117913837 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106403297 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08254016 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070584248 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101651822 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211905337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110049738 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085565045 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087507498 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07663054 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121727529 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08300964 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094498818 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079051448 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1530478 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195200013 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114547101 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112532433 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070220383 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080802732 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133154651 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145450882 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069213938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083649149 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140471279 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113871544 seconds)
  done (took 4.591174585 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.02582048 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160157027 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091102277 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152000179 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085733553 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128307876 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110335648 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083587993 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101310764 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247019817 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.069289376 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455270141 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128209938 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101681126 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068881631 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084607086 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069170262 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.507627811 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143811549 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10351381 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102552021 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0752769 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086936867 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373856509 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069511892 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067285627 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085406326 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060506062 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145018514 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068504934 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210218269 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090184572 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088624477 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102410323 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193036914 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067789552 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092948828 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124283108 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082613392 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067980854 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169654518 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074414806 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083412769 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088535701 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120921622 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119931725 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069735048 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083098204 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181366096 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067937987 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100468584 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868702519 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166177319 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078866331 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067513206 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290269038 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084368787 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084989272 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065142741 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255141026 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152318659 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068364479 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084107346 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066974021 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068991821 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393307926 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070529361 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.716118061 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072108424 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077159264 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085820879 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068863259 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088852086 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073389989 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101580478 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067612245 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068155439 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083527993 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066988697 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085093485 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085818103 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202013003 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083981456 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068084575 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065874813 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102767078 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111547866 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071314156 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066131546 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116466259 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069246005 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083896188 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102930982 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085288626 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100303227 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070617527 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128954881 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068848114 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079883679 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.114751052 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069142684 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116076235 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066760575 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085768756 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1013489 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094282224 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068383445 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153502014 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065804063 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082731317 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068031575 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081662708 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069679966 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0688871 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098962457 seconds)
  done (took 20.862517511 seconds)
done (took 37.747096541 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290951609 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091622635 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092310889 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075758237 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092098478 seconds)
  done (took 1.428021353 seconds)
done (took 2.187518644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119896423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117009346 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064359571 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112901663 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064494417 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117581286 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115051922 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082022876 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118800853 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065434457 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112903466 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065567504 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063755442 seconds)
  done (took 2.006046427 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084241777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08513408 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086441168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082758077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079354497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083577514 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080789187 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105185247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080766394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088820412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066197827 seconds)
  done (took 1.679890215 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083063578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085423286 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085516857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082799237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079381491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083094902 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081492156 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102606829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082002151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090424847 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06510399 seconds)
  done (took 1.676926239 seconds)
done (took 6.113702639 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080217734 seconds)
  done (took 0.830858366 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695772671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.622144553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085763848 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134116647 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222582811 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154601913 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.442361948 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111413299 seconds)
  done (took 10.392412781 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090332883 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086847888 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070727734 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099002205 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072111736 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089658733 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07108383 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072637399 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084616504 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069948616 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088866388 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073491949 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085812493 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070144406 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072697737 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088174958 seconds)
  done (took 2.103087381 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094619711 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093844686 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091428344 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076698995 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090045785 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074855913 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093207941 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07674369 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088223403 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073246008 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092064335 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075908841 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089027962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067168886 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091894959 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077835395 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088505939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076262897 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092395057 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077473587 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092538136 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06687447 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089508768 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075672479 seconds)
  done (took 2.866827895 seconds)
done (took 16.951309687 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131369133 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076875441 seconds)
  done (took 0.96464694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082788843 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09842205 seconds)
  done (took 0.945132043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084084544 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082000392 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091041049 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094676499 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066898052 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0824695 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103466598 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067210007 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082336983 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068152948 seconds)
  done (took 1.585854575 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069917001 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093698053 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072151582 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097436762 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075371022 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081461409 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07452069 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084416979 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080079856 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080350782 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072303567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099554432 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072824405 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101301574 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073749189 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085744211 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087688024 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069113934 seconds)
  done (took 2.240363289 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067712106 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068034967 seconds)
  done (took 0.902519006 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069191323 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065008231 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082966041 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068032614 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07970714 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063898447 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080545615 seconds)
  done (took 1.276126185 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398743579 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10962035 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241949077 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088623281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10397218 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261957328 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084076189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072328244 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08866433 seconds)
  done (took 2.254501548 seconds)
done (took 10.933220787 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080249108 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087632362 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11182021 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418986968 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107014451 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067230894 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132109734 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219114706 seconds)
done (took 1.992004075 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125440716 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612889692 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401474237 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21190452 seconds)
  done (took 1.998665606 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378579774 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092990411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074534898 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067912709 seconds)
  done (took 1.389161237 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067316859 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070559539 seconds)
  done (took 0.9133977 seconds)
done (took 5.19963477 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085632289 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084333053 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06774122 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067757255 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082273354 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.06589773 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067796058 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.082438691 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065016496 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067373537 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082895355 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070568208 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082505852 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067738691 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0648823 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080717715 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067567454 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065466484 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080530171 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064923364 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067481753 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080700662 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065275476 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068478029 seconds)
  done (took 2.554172401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087400626 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084239292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073193786 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088545508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072657349 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088845333 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073798453 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067967063 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088994113 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070028392 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087771769 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072003297 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086798334 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072310625 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085547636 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072450375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088714037 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068898745 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073232474 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087112022 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073395152 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084049176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07280697 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088307526 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071650457 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086823942 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069952735 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083769367 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073660794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087229914 seconds)
  done (took 3.159710773 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072766762 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065423271 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081653861 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07197072 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065176974 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083578278 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065253222 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081052544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066086164 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065191862 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083282216 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065982636 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06606962 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082563407 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065863624 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084199929 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082053784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065344955 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081314945 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065712709 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068406128 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081078257 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065672689 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081089416 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065757455 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064884594 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081063669 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065282214 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065514278 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082072553 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068369925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068434025 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080661247 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071983577 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084850831 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065117459 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069554479 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08064961 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066335883 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065436726 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080999013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065291699 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064983085 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088298355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065915549 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083911979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065480404 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066920288 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082427188 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068747766 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080737282 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06561683 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067141469 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082324864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069664489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064850235 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082127129 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064813128 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082344621 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066351889 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065490603 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08101259 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068173651 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065700898 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096422128 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072530729 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081043284 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067240329 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065978711 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08375474 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067272059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07857405 seconds)
  done (took 6.032199725 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11808446 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092488255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083651181 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067219786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079959515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065727813 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068855196 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081526241 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06754794 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087167067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066242884 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066420497 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083751524 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078919376 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081634535 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067226932 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087440199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063364165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065550008 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085216576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066687973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086048506 seconds)
  done (took 2.494248638 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187210815 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08918059 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110531734 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091338117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085988191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075262293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071440508 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08764748 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071756262 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087542782 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069279486 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088053825 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069562338 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08601427 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070487248 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086185629 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07210321 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086853933 seconds)
  done (took 2.369030004 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079451521 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067521187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10769842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067507668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085028431 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070497709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089675458 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075804684 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08657452 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068533639 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091969064 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070189793 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086133767 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068353443 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07064447 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084251587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070156149 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084142271 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076733653 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089162286 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07393834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09260011 seconds)
  done (took 2.540424278 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082378182 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069222927 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10236593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086715332 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064283137 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06632993 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089950968 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068377482 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089284558 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069676274 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067198407 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082866512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072847974 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08386531 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072288536 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08378783 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069260378 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067610635 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086254296 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064773335 seconds)
  done (took 2.325837713 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087855198 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085549814 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068944341 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093332491 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068962245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08538172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077779975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085461247 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068829479 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109729716 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069272441 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084749866 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07697866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090420742 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069071886 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092598878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077661124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093225538 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069070299 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085913494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217976921 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069181262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092713514 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06965637 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084751812 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07039411 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068543347 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090674349 seconds)
  done (took 3.196176244 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068433594 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068094652 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082508972 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066008725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066367431 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082332768 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066461193 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066009833 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084983766 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066056271 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068440942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084719754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067891953 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083419367 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068932891 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067879174 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084164418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065984923 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065153347 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082113221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068197542 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067865593 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084227707 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065937919 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081697903 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068567122 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065558464 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081110604 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068456744 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06517584 seconds)
  done (took 2.962531337 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077760462 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091859392 seconds)
  done (took 0.963845542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066094001 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081568984 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08237038 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071846992 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088976787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068642447 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092734423 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073156719 seconds)
  done (took 1.416900103 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083580891 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079210776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086387708 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079307389 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095612117 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084226792 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154212219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085848674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074807509 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083085334 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082422184 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067284601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09111462 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069041722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089940636 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073437896 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066981401 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09012138 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07105183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083500614 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070035843 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092880215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071350659 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064795891 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086234028 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07701504 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096018349 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069347331 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087548807 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075627411 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073559317 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079815461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068505625 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084919659 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06662415 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093941658 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083381085 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087503476 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077581404 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069370444 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095350731 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063583874 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089237573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075477254 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094656139 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069405886 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06898046 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080998236 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066531316 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08696517 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06435246 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068631625 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080587806 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075350437 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087852765 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07953901 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070456301 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086458518 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071253987 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088397055 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076093804 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087131811 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070767711 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068391538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094643042 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072940996 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0932246 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0643318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062495434 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08314254 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078040299 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107637659 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074832956 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085521368 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070359026 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082780823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071961281 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069323554 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090616339 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074543217 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086132763 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074555902 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092143402 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069446317 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070476762 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093087162 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067381808 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087582404 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066730562 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101144015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06802296 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066818381 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084007394 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079129986 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088319607 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069086555 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082557754 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076006896 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063328224 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086018511 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06973865 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084721689 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078548669 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089912566 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073997047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093478664 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077222707 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068225998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088467965 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06539209 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086148275 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067504386 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075154785 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079716461 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070849308 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085877317 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068932873 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075719512 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083581975 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068269787 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091813525 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073649274 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083608589 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065634514 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070306589 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085439825 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072313366 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09294994 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067041484 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063300175 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08053778 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072181111 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085589583 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072471829 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090231422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071801593 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063186835 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083907381 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072755749 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093411707 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069039784 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069682584 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091649667 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069621236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08488957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075202097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08683854 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068302401 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073741374 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085785539 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064343924 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088467378 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071781526 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066869176 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088089461 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071731863 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087041958 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069279224 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066183427 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09164569 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069446517 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084710534 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067899184 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083345274 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078434657 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069940776 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080959125 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065782461 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092697339 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06633743 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067964232 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084164288 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07041796 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085401184 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067570053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067720571 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086804251 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078469536 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089335518 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069021314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090858486 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07884671 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084618281 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070773076 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067991984 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086553857 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069319122 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093778696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073841655 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089202363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071211164 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065434304 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090660439 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074869566 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084028613 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066851808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066536934 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088395996 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07373527 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089380825 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070158462 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083581211 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068279594 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070886429 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08828235 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068376211 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083964982 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072570195 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066856692 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092402872 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068366014 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094338213 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07081329 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080718167 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07251616 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082896797 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074012615 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06399296 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083055261 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06723364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068525959 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085046747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070786965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07970016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075233872 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091862822 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068608151 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068409547 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086658074 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074427936 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086924839 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072315891 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070572035 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091787312 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077927168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084325646 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071468655 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094928838 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068866154 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063083778 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.0902332 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068058785 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084292495 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068488942 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066801324 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087945485 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077118424 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092029943 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062648337 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086963235 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067258186 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067118194 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081458566 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07242918 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070941298 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086145211 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075086483 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086303247 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069402956 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088792802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068261189 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069197441 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086970557 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070872346 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086279216 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070899373 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067156527 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088613037 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067224401 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082540552 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070316002 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067595832 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085172667 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072817212 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085208629 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068448411 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069720202 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08673795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068754085 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085591701 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067528425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070879586 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086601979 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06872029 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088031072 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064553137 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075074678 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085034705 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075643809 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08606602 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065816756 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090154046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071233429 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072933576 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086617192 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069692958 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086589382 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068794657 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069961822 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093045936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066629169 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096165021 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07562837 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086107079 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070976793 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06840292 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087132873 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067055532 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086456012 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069609463 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068077148 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085722022 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072352365 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087345249 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06952264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069254926 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086485791 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06810158 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08650572 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063359362 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066833307 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084664818 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068561587 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094619793 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069518883 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08412189 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068575912 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069372105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084856322 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065638058 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092826505 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078287437 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085393412 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075681309 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067238752 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086606675 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077938037 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079600523 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067396321 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066350162 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083825238 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074590928 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085953652 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077472965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084648109 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068392024 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065663577 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085736486 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067741795 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062485995 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083804356 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072077957 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083863472 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067864641 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06831928 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088808914 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069740557 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094790762 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067752771 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085421416 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069723738 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065136954 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084581037 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067644444 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070028884 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086956999 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066408043 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082992773 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068636408 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068359594 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086784813 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068659761 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086530256 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074713801 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06752578 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088875704 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072189472 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0835311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071149702 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067780117 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085439654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06743036 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089590322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071363356 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086522633 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076739259 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067253069 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085726147 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069317833 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083150461 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068913901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067225399 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086039877 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068163592 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086230802 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075581165 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065984114 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088268723 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068293597 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085947161 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074996216 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086233649 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071664164 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075276824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086342422 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069869729 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092616266 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071651399 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088364006 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069901797 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06920636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091170171 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067079037 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091898451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068937305 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068354159 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087420031 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066901073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085637007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068895399 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067008909 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09111275 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069195374 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084948822 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067599098 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066589013 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086711423 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071843532 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094135398 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071110352 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088191801 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064684763 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066015683 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087954888 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066663368 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069385906 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089732471 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073734144 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088644187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069043166 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084253393 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077548592 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073897935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089017534 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066578753 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089458172 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069641171 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069934278 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086832043 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068277587 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087611414 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072673135 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069014825 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085605589 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074990001 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088852182 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070309836 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08641354 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069676473 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068456408 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081628284 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069716084 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086890381 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073479177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069727094 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086630619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078529093 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083572872 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068521227 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070881708 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085744243 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072324746 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081336416 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07039004 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085760943 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070064223 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063222013 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085214779 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067067436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069865779 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08550634 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064746431 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095993921 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077410244 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088372923 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068278128 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067069828 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081552141 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064392147 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084417671 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070246729 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069372958 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09646332 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067405856 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08447953 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063978642 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068330235 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08918377 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071038652 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082508424 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064235709 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066824587 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088898702 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074602162 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084055426 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069190366 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070986406 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088284286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066388641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089599725 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065852678 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070916979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098409092 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068926457 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086702438 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074725615 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092904676 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069133228 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062927195 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08750205 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070266943 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086294107 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070126155 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087301281 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083948341 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087877057 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067961344 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067919041 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088766986 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068290378 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093080872 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069674533 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068719379 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090784076 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069573461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093698786 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070639974 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09288652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071105305 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070943954 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085992493 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068677391 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083831507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066910265 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069974401 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087485338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073104372 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093455803 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06812076 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096447731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077893728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088086566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065305123 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067929435 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085593441 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064692382 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069597712 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085244071 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066526853 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085589946 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067775788 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069243648 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091232233 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069227099 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086606516 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068758364 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062518113 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088650527 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070573494 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086150402 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065928217 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06857122 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087054847 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072236778 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090104229 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066471234 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068962796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087969406 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069689878 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081368 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075467806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067278876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088619194 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068005543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086203035 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07046017 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071575938 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091436323 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070085581 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088309862 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076833308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088324986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066001791 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065502669 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091737951 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066718664 seconds)
  done (took 46.989449804 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108832071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08321515 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063774394 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081875568 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07615717 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08297811 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064302277 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064812435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082981145 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067267792 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082030701 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064231327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091232997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087649536 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095145422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068876142 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082111913 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065459687 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081451396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06611016 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091221646 seconds)
  done (took 2.492240619 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07721782 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091052012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075523653 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097130797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069518597 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091604837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07519178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091402003 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095581815 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06921942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095881652 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074036668 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086387161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069384798 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086798861 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073648514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096407582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06980651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091054256 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075273412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091771402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074205423 seconds)
  done (took 2.655330719 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069417925 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067434742 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08666715 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063537465 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067051527 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081478893 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072165518 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083445839 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.080320938 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066058997 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084517269 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066765721 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087118026 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063415023 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067115659 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083712772 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131620398 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071806429 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067188351 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087984413 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06378573 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088191803 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064082299 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06351224 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085113973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071787272 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086845542 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066588464 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067861237 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084754102 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067914376 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083152329 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069799842 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068225414 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084340503 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067072125 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067347959 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085727231 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06444611 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083479179 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068737952 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063593887 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086346021 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069665736 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065829801 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083785147 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068717271 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085331892 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064724352 seconds)
  done (took 4.532575218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086633333 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130644776 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088821128 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091480386 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102305148 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094784089 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071737476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111545176 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065517624 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085371072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083873258 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104107897 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087252733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07371373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092549301 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068528332 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068402241 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085811283 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071286081 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086701179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071209946 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093271609 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09977377 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081806259 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09015886 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068708027 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085302886 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073531893 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098964849 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073643651 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091838924 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074098593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10219171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072886151 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086443126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070269982 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104246544 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086099486 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071356403 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066039272 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089676319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072405809 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092847729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083823548 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087494115 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072461624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087151928 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06557076 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099667994 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069850027 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095161151 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100844888 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072838169 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086112617 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072629766 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101296358 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068878547 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08415791 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070393715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09848883 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066172876 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089670997 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083141127 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088042524 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075451442 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101043204 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073114999 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091093971 seconds)
  done (took 6.721019945 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077184005 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092825832 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082953897 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10248184 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092861767 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075669321 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092932617 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075329825 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092425173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079735184 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093118345 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11382868 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07044442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096183166 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074936303 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093297132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074374424 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094291254 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07419423 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09365863 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092581916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082166503 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093003021 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100408494 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105143929 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087865292 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075122445 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09264907 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083303863 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093874454 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104513925 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074725618 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092850548 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101004453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085841468 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092820068 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067662933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0921647 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076049852 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093408699 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069718538 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10155168 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074137896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088783068 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073582322 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093269799 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101171313 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086993458 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095808952 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097557042 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075454673 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101006933 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074164562 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094180444 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100729571 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107467003 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100516536 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10102445 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075298864 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10114861 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100903135 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107926968 seconds)
  done (took 6.402413548 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089045865 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096084262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097809891 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06451869 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066101785 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091052174 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065932297 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084328204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07742758 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0955704 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079502705 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090621885 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075441906 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097702665 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090231418 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076364298 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090751905 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0721722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09546178 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072210138 seconds)
  done (took 2.52053636 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077732873 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10392575 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069526125 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073478484 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090592945 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073159393 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089686762 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071769219 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087511272 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071746455 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096822811 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07823949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087101438 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074735301 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097120857 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074167883 seconds)
  done (took 2.174445943 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080137631 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097286351 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08258988 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087389088 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066861757 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084249673 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06843456 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063748949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084061735 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083038409 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088073316 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071567327 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087009364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067109545 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065108768 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091530158 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06530783 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084663488 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068704224 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101794547 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07949068 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085629964 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069500381 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069354034 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087994517 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072341218 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.08787344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066421051 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085522698 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068700598 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087461948 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076338768 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083971514 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067059879 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066113076 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085091432 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068061698 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08664943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070973698 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067030612 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085393268 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067954554 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086774821 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069385674 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083154105 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06881576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064425321 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093017032 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066434515 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087283876 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068180634 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088895608 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069637606 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078167311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090492139 seconds)
  done (took 5.147685554 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082407778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070978995 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083686183 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066553959 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089794138 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070105495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070825863 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089321487 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070034011 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084887087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070276976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088948645 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070556473 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070765653 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088960343 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071608777 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082540725 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07102353 seconds)
  done (took 2.25510097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073878178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068318206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094502832 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068173584 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086907706 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070838874 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063724577 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086793318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067166088 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086471089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069282292 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069909114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085745326 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071393038 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08598464 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068800948 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069902135 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085814787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06801461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082503219 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071494332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067095789 seconds)
  done (took 2.526109666 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073786897 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093999928 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163100259 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107898862 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083177076 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100387667 seconds)
  done (took 1.487255035 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092308935 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100118562 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069483555 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108012242 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076244447 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089013692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070752173 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088584306 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079308475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102269999 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070009645 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098151138 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096646242 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078909516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094546848 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076053072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089294092 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070111391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087979907 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107033342 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071354862 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09655423 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070736231 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088929864 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070532524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096743319 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079095571 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102853389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08852821 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079748418 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094621031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070027381 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098382476 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102292806 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072480087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098057754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070106203 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106082315 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075186379 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09810596 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070843896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096143175 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096456216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075962228 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097188213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070097724 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094313936 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070253518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089595111 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112909189 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075910445 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09759428 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094446052 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079298332 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098413207 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114756015 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084009327 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098426637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094557855 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084235106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097959475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075031119 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097790818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102844501 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075970691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098668931 seconds)
  done (took 6.683659902 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087229842 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107431233 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071323816 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102578426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097122309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070999506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088972873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070700256 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088477474 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070943654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130304146 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070967973 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098133048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097980544 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07178316 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089126973 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071439515 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097515335 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069642002 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114166176 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089602148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078572798 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09812028 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096527664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083603956 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094651104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070944995 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089548281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070274554 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08948346 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074792174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089724089 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09768357 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071576039 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097361202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070667819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089798652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076307763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089633032 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076765986 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098479514 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107463876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070517242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088739859 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083360758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089442103 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070639653 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089277404 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070741106 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088852073 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083294717 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104184286 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102755931 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097435182 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072036803 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089374214 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071469279 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089010931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071391648 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095006738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078839407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09003698 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114269388 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070882735 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089730422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078891004 seconds)
  done (took 6.587185959 seconds)
done (took 129.965536043 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202763127 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185473502 seconds)
  done (took 1.252306665 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071217672 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096636331 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099770444 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129519966 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087841504 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101944714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119873525 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081057036 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067763643 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088462944 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068687237 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088391146 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133467688 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068219281 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087186488 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071295227 seconds)
  done (took 2.332258483 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103947601 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197425099 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110214737 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067032687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100828621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080151931 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087270429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077863757 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095251581 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067600561 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079512426 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097283225 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066829819 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096635376 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076598795 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099529918 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067559095 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098414205 seconds)
  done (took 2.547102029 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105097491 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142537423 seconds)
  done (took 1.122674828 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202092376 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123567696 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203170025 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416291442 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20777632 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27652843 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175182893 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172568932 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157797268 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170279989 seconds)
  done (took 2.976314945 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100337783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171135351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312715527 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138745863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08770089 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116867952 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140407348 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090449531 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102187542 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101952576 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082382896 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098434272 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098741632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095855233 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075474669 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098948771 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122200754 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076521176 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077879531 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09744788 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118068247 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069223279 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075787705 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095456331 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078309668 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098653006 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067968556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087572276 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077537088 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096331487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08013406 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115333576 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098957012 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1315114 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082568535 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132557223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099079661 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073694217 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096122569 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074664562 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09889347 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07830055 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104852992 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078643977 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086928493 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078613252 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086484769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06821601 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100040773 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078803632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099748171 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080314807 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131690379 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098206542 seconds)
  done (took 6.280065928 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746624224 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11071214 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095062111 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804339457 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089779979 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10598972 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710157743 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117679277 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214390219 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761878899 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09038734 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100251044 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180748042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216891703 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940160689 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289020434 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634431451 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104837651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109467186 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13237449 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139193849 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176075614 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150259976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436695804 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076875626 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093695666 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137635815 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077557442 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138135877 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105945898 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093769896 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154986252 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230412712 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156793199 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097801001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070998937 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091991887 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14892645 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224763994 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191823901 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158040426 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069902883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091218344 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13957145 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132834 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069327877 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139825206 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152619499 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169595213 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07529472 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075098309 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.164370521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138528832 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143049092 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101735519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.275209204 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290024202 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070873374 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119637016 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104266851 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22048635 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104687141 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201533852 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140387965 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169001158 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091525238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776992043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147390416 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093195742 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075731335 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119822004 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074845926 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159334773 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123463114 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370170035 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162338686 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076162303 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070845287 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228804995 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084329716 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092333446 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14221948 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076917199 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122078618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143025794 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162918692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148280523 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210508334 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14250418 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138564309 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095349116 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124503097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077083381 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19485462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192728522 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141452126 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192261798 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138492238 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162116976 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148483358 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078271028 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150210698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119306255 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101084743 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138834115 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191467512 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102994706 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104788937 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074261825 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160988551 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124713792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088196289 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13951786 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149728767 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478871075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148419295 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069586059 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10864879 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140437121 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141607683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097184863 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218872917 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12392715 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.147241677 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122852322 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089909461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100756438 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160401536 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080267838 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122267912 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137189954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098484545 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216003531 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169651182 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099296524 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193757814 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161897486 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096047314 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149697835 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120070168 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145786695 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079241731 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137641522 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097601006 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785079935 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165281688 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121576669 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075057134 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175606243 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07090939 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104148614 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083987923 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090330962 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77888783 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106929886 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080108747 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104854573 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074319432 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12137713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.155223079 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075580776 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138789934 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201630891 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075665266 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120020302 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104571525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141790522 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076183805 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106173447 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104658908 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085518056 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122943774 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094897289 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085136636 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146358778 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141515392 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194224442 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541406861 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093016589 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083582913 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201677645 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091977519 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.245915421 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13659178 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197930365 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142661924 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101613238 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.267620126 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142410136 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177305775 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107068887 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152488906 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068984836 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.158312484 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143673493 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07169522 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096627936 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141536969 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143860833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141264903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958083867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07185715 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208423681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090695915 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.15087836 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075691041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098510187 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26462995 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072394223 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147033735 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141571541 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095018794 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083711381 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69491335 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084647388 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.158745786 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076279023 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193294882 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144138275 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137049014 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138633756 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096957003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.140634917 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193350027 seconds)
  done (took 40.709183612 seconds)
done (took 58.093090393 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263612475 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178409314 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242508937 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145216284 seconds)
  done (took 1.799372917 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144716664 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105126355 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119128461 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086301382 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104038517 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087573914 seconds)
  done (took 1.542439157 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.403530553 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264054912 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229778074 seconds)
  done (took 1.795930804 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26136045 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213554498 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446329017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298585612 seconds)
  done (took 2.245663686 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177522261 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114895898 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069029095 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107566928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159799046 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252531723 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130027339 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188307362 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080991246 seconds)
  done (took 2.225793466 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19855656 seconds)
done (took 10.707694488 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.144174244 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.18779299 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092207459 seconds)
    (4/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.180692398 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102641978 seconds)
    (6/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.182089355 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.251582461 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083381993 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168535449 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079267961 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173498416 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097668325 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092460983 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090796742 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091464012 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157507749 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.20613009 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124148103 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.224090741 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.133345026 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165483566 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139271279 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169771922 seconds)
    (24/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074974168 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103188988 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162488802 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170266461 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099646896 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113755312 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170042848 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118207949 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20887717 seconds)
    (33/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078913429 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117685591 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077864607 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15781365 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109856189 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075494573 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.218097607 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07818333 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092255593 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069788824 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09695498 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17385807 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054450257 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130384578 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07550673 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.186375931 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168062453 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10059629 seconds)
    (51/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082435624 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127230483 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077933002 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091000683 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169390245 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097876699 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172394559 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099502679 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100978016 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082969536 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104144233 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074753021 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157307917 seconds)
    (64/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.171003428 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.249935384 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158643432 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080631747 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090060344 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168861026 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111512799 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.160541329 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086924981 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075606135 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073264584 seconds)
    (75/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094053731 seconds)
    (76/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107165897 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113496279 seconds)
    (78/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09394327 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075142898 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067532996 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.067485137 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192367384 seconds)
    (83/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093950312 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079457968 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088980752 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.164211816 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.075859704 seconds)
    (88/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054015409 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075209167 seconds)
    (90/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.122161534 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055780951 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095026697 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.147078095 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168862792 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054336239 seconds)
    (96/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.178030471 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068239387 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.0748516 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095003161 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067194035 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113048893 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196151915 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092720748 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160143051 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064388953 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120615368 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07759383 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074868677 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.17028998 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073535043 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118978723 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074421754 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.14764819 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.173236621 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193587082 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076166557 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053173421 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160535955 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07536578 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090117601 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06952757 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166089242 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067660709 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.160283901 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098662652 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067820782 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098498571 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097783655 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080062316 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089239989 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074918149 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07272086 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096990465 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073051537 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.182840293 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053330166 seconds)
    (137/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.120958056 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054083951 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063253063 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095921936 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144098359 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170880975 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067256933 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089441626 seconds)
    (145/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101730267 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09706218 seconds)
    (147/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101778067 seconds)
    (148/309) benchmarking ("sort", Float32, false)...
    done (took 0.151170727 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.16096111 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096385013 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093400539 seconds)
    (152/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099940428 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090794499 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112132542 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056358342 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076835281 seconds)
    (157/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098219267 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11683612 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132984272 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170885535 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094100177 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068667171 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196948449 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069994032 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091176064 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073739234 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068748564 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092683774 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.162312981 seconds)
    (170/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098766361 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053464114 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090437702 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06763216 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067201912 seconds)
    (175/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077260168 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094157926 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113986464 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.139126032 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.084615811 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064171486 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082135429 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096927466 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.157525516 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099886061 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071814085 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07695956 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109173018 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067817403 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089538835 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078368431 seconds)
    (191/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075256064 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096605046 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054099175 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066804581 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089673746 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068209751 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054296935 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096805402 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099765228 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096421056 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054674189 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054530853 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168788858 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05499389 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.376182574 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119119502 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099622735 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054367803 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115984812 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075995339 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099357405 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095065109 seconds)
    (213/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062967517 seconds)
    (214/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087807988 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053727658 seconds)
    (216/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069703021 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.1717342 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073402855 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098630732 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114244338 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193134777 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053353478 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090493196 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184683665 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080477651 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054930165 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090119277 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055956442 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067500881 seconds)
    (230/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077104197 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055316081 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164324091 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055510337 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054744613 seconds)
    (235/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07197923 seconds)
    (236/309) benchmarking ("sort", Float64, false)...
    done (took 0.14959506 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195991063 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064707039 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073014267 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.099266698 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202272082 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068660797 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053048971 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139707986 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074663269 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13258665 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075800861 seconds)
    (248/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.076384974 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053828586 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067178356 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104333229 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084186368 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171006475 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055113846 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115885363 seconds)
    (256/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.138168486 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076058055 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053312503 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069349444 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097481896 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067181806 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055882274 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093864525 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053530064 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076187262 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100215132 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069075982 seconds)
    (268/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063609449 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110156732 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066983166 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085618016 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093676515 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135729238 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 0.165942702 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06731624 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053237861 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092441672 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055181747 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053427785 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076218204 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053409434 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052894363 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091355789 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075785214 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054663211 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114258908 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067450198 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112387189 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0668341 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08191434 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.075353393 seconds)
    (292/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053070231 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075264782 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075559362 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053905273 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070127939 seconds)
    (297/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089898188 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069945288 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053465741 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075101611 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073393962 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054926893 seconds)
    (303/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114635834 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200702729 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070278243 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063977769 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095440045 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070038716 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174206561 seconds)
  done (took 33.529394627 seconds)
done (took 34.439160561 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083476151 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115695804 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076379118 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116809197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082752375 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102191567 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074865034 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08043332 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10535881 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083228324 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102450023 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056681614 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098467015 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076703172 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099083668 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093922218 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103648089 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074261039 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075473836 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090122017 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075593519 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089705997 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069869015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05762573 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102215155 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074675577 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073464759 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100126996 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067644477 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090310225 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071521398 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074837528 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090439372 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081051893 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096459065 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075729762 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076513491 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100629461 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069298064 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089952232 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075796947 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067993244 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096590943 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075574684 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073398892 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095250614 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075481265 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103516748 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092134138 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092425417 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07521531 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100466362 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079015658 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07395454 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094478458 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075305774 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094283042 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093272525 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097920598 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069758351 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075099936 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099143938 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073320928 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075418083 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099169043 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076988155 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10052224 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073785354 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099066334 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073496636 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067168919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098296995 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071189072 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067311242 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100350945 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078374707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088407893 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073992835 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074220728 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096353397 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067164475 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069381871 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092637719 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073995213 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091955759 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057273809 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071235107 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095732922 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068223317 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076334149 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096741688 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074543564 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068879329 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102219484 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068337824 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095154222 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068404238 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067440323 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092719844 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071893818 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067171761 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092162608 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077626254 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091628047 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074190265 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081368631 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090940301 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074439998 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066940986 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090282111 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083348652 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100569669 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068041572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091551764 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067410368 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074980988 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089694911 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068028573 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067292898 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089728524 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074397309 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06740063 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092409804 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07475756 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103386627 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067935967 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071818196 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092462459 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068493282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073231077 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090816581 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067715675 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070011005 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087646351 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069472195 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089825742 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07544854 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069785481 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098654082 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07005174 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076994748 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095201683 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073761048 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095844306 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067402154 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060591496 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092734969 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069733101 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070420136 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089877699 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069361186 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067004474 seconds)
done (took 13.429511816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069133472 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170474198 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12770292 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097724222 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112115867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068112369 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102797792 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105315407 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092994651 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12806127 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089895008 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109814268 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115435123 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090185008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067885324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071465953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092066611 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.09009938 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127389012 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110501379 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118835861 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090632293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121799918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091650031 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114337364 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105002055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091590698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072154969 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070908611 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116789428 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11035859 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071848778 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068036811 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123871971 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11895839 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086987723 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089834005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086303936 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089841441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068505957 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11586283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101487519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105741825 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083507289 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097294609 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070695751 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091848759 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087728338 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115244638 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082565286 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112714581 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135485705 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071420989 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107537886 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06731135 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112719617 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105345053 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070939008 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068670528 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093405343 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068170832 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070803901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113288504 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117393906 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071279949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10727682 seconds)
  done (took 7.35146664 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.0860127 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118709368 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085526815 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109726565 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067826528 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068508284 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091772362 seconds)
  done (took 1.594076795 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069507291 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090233078 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114566931 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090920657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111143356 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08878856 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101238545 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068811635 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109553833 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069701343 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089860043 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128919948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069871581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099257849 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092262489 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092129942 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092065685 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092407346 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071734664 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115369688 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072267277 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088665914 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094070951 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069462475 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106600018 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069039774 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140137504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073328048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069781934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095198695 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067066265 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141748958 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106132485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079751515 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06896416 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106784807 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084243164 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090140077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085462042 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097342297 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083587905 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069515119 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093911198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067074947 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073318388 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102669607 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070543005 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092556803 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071919387 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088787189 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092433362 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082950994 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091885048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073174122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070547542 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098246743 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079113874 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093347464 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088923197 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07075116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10905503 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085731508 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106862063 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085321695 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095082602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083245734 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107001047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071736848 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071038469 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095870616 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085594006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090379036 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071067432 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079649941 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094285257 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092327242 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115557249 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070888611 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102718522 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069817127 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069465765 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092251448 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092567893 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096032605 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070031132 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073271303 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095796747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067335271 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067764628 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096136883 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067293958 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070464186 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096173694 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069821258 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094442135 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085855528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069761093 seconds)
  done (took 9.448157313 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071219036 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06989657 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094429999 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069544324 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069548359 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093238148 seconds)
  done (took 1.451998269 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099916855 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094511609 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084186748 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098025082 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108042189 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106872854 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084678515 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107968006 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087189301 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104941402 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084454905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107809253 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089789098 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099113028 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084116926 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098039683 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085128258 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102218107 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081344797 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099145956 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090842553 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099294152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075558088 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107828128 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073308865 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074735962 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103082365 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081568594 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104689862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08497794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098672574 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073505899 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097168414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084327231 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107687246 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073536164 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098043437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074667564 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102485347 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07326291 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108148519 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076628373 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080727546 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097918522 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107617178 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074947762 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073834803 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102187116 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083550487 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096980957 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074126416 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097842397 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073109142 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096906709 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073702384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107603593 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074182837 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107413862 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074944513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073611344 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096207458 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073077412 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108268785 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073344171 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106466752 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073987989 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097606336 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075013396 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098769148 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075211499 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073645678 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095372757 seconds)
  done (took 7.471486075 seconds)
done (took 28.283679905 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648560898 seconds)
  done (took 1.626773446 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.763979333 seconds)
  done (took 1.744350008 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.623533819 seconds)
  done (took 15.60825236 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.611459922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754676393 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805327248 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135020186 seconds)
  done (took 3.286605198 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883565465 seconds)
  done (took 1.889502958 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235452331 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224158845 seconds)
  done (took 1.445029879 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731969864 seconds)
  done (took 1.725460567 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.289635452 seconds)
  done (took 2.275804074 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321024699 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182661479 seconds)
  done (took 1.498219338 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522955806 seconds)
  done (took 1.518048937 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.538039542 seconds)
  done (took 7.537086101 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22994167 seconds)
  done (took 1.238522476 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272245867 seconds)
  done (took 1.270420217 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.114723401 seconds)
  done (took 4.111620283 seconds)
done (took 47.763572807 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079628681 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083170355 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106420264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079765488 seconds)
  done (took 1.341837563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079828929 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075121359 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102563404 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075187311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104069828 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075370172 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101011894 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079609072 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074891808 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099525386 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075808991 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097328625 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077774437 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100385558 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072568667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077213217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102034494 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075116109 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101501303 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076439166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072901499 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100565821 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07830122 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097450239 seconds)
  done (took 3.080774438 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078704915 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074754955 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09978741 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073839694 seconds)
  done (took 1.331952061 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07977129 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116933331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091415725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079030427 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118115739 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112179695 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072375513 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072609378 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097997348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079340264 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093342913 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100615932 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113734623 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079460496 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104321406 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06803273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070970658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112784663 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079696379 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103525554 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073062399 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081620624 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094518825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093280381 seconds)
  done (took 3.198501281 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079376941 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105395312 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104359615 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091172079 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117966306 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067760481 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101819514 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09313622 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151051857 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067731685 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096619984 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068323502 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098513698 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067547492 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079062873 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13432424 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113920008 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094935964 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098576935 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09253026 seconds)
  done (took 2.937348733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076943587 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071335916 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091260162 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070759364 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078082048 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098249655 seconds)
  done (took 1.496554581 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070239788 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068645928 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092755271 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069004507 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072472486 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092499304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067424419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06850999 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09316361 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069128242 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068548755 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091352062 seconds)
  done (took 1.933805097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.384132912 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093467307 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070416856 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089794777 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072395257 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092290791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082412474 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070515321 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116720243 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068781399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09355273 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070554731 seconds)
  done (took 2.319406251 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262428984 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079412854 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324985803 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169849749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142131172 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156864556 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105773142 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14131513 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198992804 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139827783 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201724269 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226107814 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135323845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169479014 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117022428 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108364412 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211910729 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222261822 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106965928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225501809 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206929556 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157933055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18182901 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12948153 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135620563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151298841 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074453472 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107101742 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23285349 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162928502 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201951504 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13986434 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098924538 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23244732 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225423568 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19562628 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163379871 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086869165 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158852713 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166518974 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256106623 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114744854 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194314022 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13497115 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107404083 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172835521 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147338775 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147711013 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137584958 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116234178 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174535841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24019163 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166750525 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114057983 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137961893 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143511465 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145347835 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105273601 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241065662 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217150601 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159868305 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097315938 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099249573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210920929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160220991 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142957857 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155318252 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120199559 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168491667 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212456399 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146415614 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174638118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18138523 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091619399 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147731118 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195842552 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158538372 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203432369 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179992253 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075114569 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153012413 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131796634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083903549 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170481961 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078323815 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232895608 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125650234 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139790157 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139494811 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112366772 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137842071 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221387363 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203296954 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106208323 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092889679 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13183208 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150516275 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177650857 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115064827 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11166005 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173247442 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080897183 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167499668 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102323333 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154066511 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080708783 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176858767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162914533 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078241716 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155623579 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12876903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130207303 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165877433 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221078529 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09259643 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109925746 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20150958 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180152146 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108201469 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201895751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189895079 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128934742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130765502 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203822449 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2424567 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092325344 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222191227 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136064447 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085928212 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114827318 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156685807 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141329389 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150404674 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085307965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179233042 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202439331 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102526659 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097968976 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192640954 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084287179 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108945697 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140792785 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129734583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098064575 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128074094 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135323723 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17163878 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155723942 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1353524 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154598601 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126537632 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226100755 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116845265 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107954338 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131617888 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097333722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167250893 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1925762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106600546 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226889955 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154638992 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132502111 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150567981 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086262823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170061263 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106191104 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072652049 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19999315 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139338082 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113071819 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210986507 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13149405 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156105578 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152633185 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163959108 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161358069 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162046197 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133383059 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114628227 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141008771 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155236104 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100572458 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0966679 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110568736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132015142 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098782769 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11083485 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172129304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181476476 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100462143 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140909745 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125683888 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18159238 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104525053 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160720402 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148993799 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123307169 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186918468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21223074 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166317611 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128860741 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176683575 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09795935 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076768067 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118318948 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158119687 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11109484 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086555454 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147223413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205566475 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159157168 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169704377 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139125103 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150714236 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187698162 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09821829 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120128388 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205767827 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155450661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156047732 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093274938 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127470789 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177075721 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136292022 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246216363 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144124243 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153146871 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20830819 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131706921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082712027 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134436045 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16839213 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134546045 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208370992 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128041371 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091539929 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138832022 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109177727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133279587 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156758605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1507778 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163710412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145811204 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187547825 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080226898 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146805857 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153728707 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153101574 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091424373 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148550938 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194509265 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12243544 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147537679 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211802143 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082288641 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152854596 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237837445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200226482 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087864121 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139519366 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156006528 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158292333 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147407536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169749471 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138159635 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189624268 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114251848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112063445 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115488596 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101278805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13526066 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122760961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140862688 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146997198 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122214462 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16117582 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140455694 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14018766 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148718128 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101824375 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119179416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126012168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208978794 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15148929 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23411466 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129477699 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207553875 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202768155 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103117163 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081821412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108936876 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170447433 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112746987 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164034301 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123451466 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108191192 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156710174 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200265906 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098878895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097139088 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138896477 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165422184 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141050592 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126795666 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10890628 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223121424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131689617 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082429356 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154643527 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133788909 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131733971 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23545991 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064342965 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125718197 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078888934 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108518873 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160314683 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18906381 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110696021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153862228 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149476485 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150118883 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160019901 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130757945 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099582174 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142057319 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207899355 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158428775 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092172911 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142083912 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185363393 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18892163 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134774357 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124223311 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232508667 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189172596 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222419822 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117911249 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14634978 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145428408 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112529303 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198446058 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113742821 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201022613 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110705372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168023082 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133761749 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121469029 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160590635 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.141909572 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090766431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205873277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150715344 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109795246 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082433697 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148187631 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153225673 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135851153 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103052572 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171156744 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075261028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195375969 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203128892 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110114075 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13591348 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099016913 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110141745 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139168596 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132900693 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115571686 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121708671 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2313187 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119783552 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18351714 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19998131 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14415531 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169885385 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129035635 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665318265 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080675636 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214796719 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150086037 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23947243 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127509505 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149117492 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139864403 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155519893 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175911201 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133950784 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206014041 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163864548 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150543592 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108231539 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132615046 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141030698 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093890685 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136096587 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145496768 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145931908 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129518388 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151675767 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15705401 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11080682 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097941918 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217609971 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148384639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173090734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198769969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088010471 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149376695 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197856028 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083208629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152132288 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215891557 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137157543 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127618411 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083667953 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135027277 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234161799 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075435314 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222516808 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154223369 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140157462 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143941911 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148936538 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189086742 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138449437 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157851155 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12396412 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142836422 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145745405 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086803248 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107389378 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13634582 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142472668 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102334293 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132224075 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145481572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187628978 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099621342 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099893297 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132425783 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176326529 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239647741 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118284155 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085700872 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148334271 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168850647 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146212651 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155823171 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084534616 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112680447 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085220158 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139900911 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138426958 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145248768 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105847722 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140613125 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227425856 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114030063 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228178836 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125169378 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135998763 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07152584 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109000897 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124408501 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101206898 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138348678 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127723215 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234052532 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100513442 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119919182 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121784545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076617925 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1120116 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160772193 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14103833 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151861087 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127941465 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065814934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139930956 seconds)
  done (took 71.921640831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13354108 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105649107 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118948737 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174679249 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146377633 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23886955 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181618721 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224696356 seconds)
  done (took 2.413084458 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07115253 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118271729 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103703655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117625089 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090181324 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070660343 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295553117 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111342739 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068319057 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115344191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120545248 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092823841 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470400673 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067701815 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095307043 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086476256 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06913072 seconds)
  done (took 3.24439607 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.429083438 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.632784471 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451663949 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074866401 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.856142538 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10765428 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.318862962 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163683048 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092071246 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430676027 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.730899088 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149721957 seconds)
  done (took 17.528226656 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076953514 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070517755 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110480279 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08467905 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099366829 seconds)
  done (took 1.533679484 seconds)
done (took 115.275837703 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082131866 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.343329689 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054855227 seconds)
  done (took 1.522812317 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084793014 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086415419 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112442256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083889671 seconds)
  done (took 1.466266858 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076754689 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077336985 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112201267 seconds)
  done (took 1.362466979 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279745873 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165955094 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090396399 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084416581 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079155133 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.1062393 seconds)
  done (took 1.369248724 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074570289 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076446518 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100428915 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078562874 seconds)
  done (took 1.422602804 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077747375 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053510364 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056540963 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082693328 seconds)
  done (took 1.369302929 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091406875 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107326303 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083626211 seconds)
  done (took 1.378391896 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108746914 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113333915 seconds)
  done (took 1.322163225 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084131097 seconds)
  done (took 1.178829582 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093035737 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142230915 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158308929 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137931955 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16705248 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137839912 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087967809 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116274556 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105100515 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089321006 seconds)
  done (took 2.335101324 seconds)
done (took 16.434755635 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079371782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394011714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362308397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117456506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670745733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358332212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006484758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120719367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12180695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095965639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085005861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677123269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007036791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346783072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994448524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.419857516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677337987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06961477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069191796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09597748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965907523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095374242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069321177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069726678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677085362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37245992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09628525 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419703458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069493026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097667469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356213488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095590478 seconds)
  done (took 16.244452582 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072068739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145396199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075370193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085137852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098083285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070729764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099199275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070876376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153409506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069159888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112181067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069443733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098839573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07081221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088181364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09568851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069936958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070140942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095701026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069500936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114388067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069151497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069445176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096903924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069498303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108338681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07041412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070105388 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09601602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072411473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098687535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070787398 seconds)
  done (took 3.887600558 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116998831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153739264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075906778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130503772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115586158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099032491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170965979 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094240786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156367421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069614592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112827481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068917441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128877181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071292025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114856521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070350519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070765825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096571481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069913404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096626972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0887078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06952996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095602125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070041668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096072192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083557475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096056902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070645683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069981718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09814881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073137384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070738284 seconds)
  done (took 4.177646982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074942191 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07690341 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110728631 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085580128 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097488115 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074424343 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074581106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097791322 seconds)
  done (took 1.80039046 seconds)
done (took 27.212213984 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080467153 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071861271 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100729421 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083129037 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101057829 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080705619 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06960616 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103252327 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078278298 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074751705 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104426761 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069123668 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099096438 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069565395 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075502688 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096097895 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080553784 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099514555 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081366702 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080932446 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099321305 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078627263 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101839605 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081104135 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10747548 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081033401 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084115393 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10199268 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071138321 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098961788 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078615772 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084842265 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096815891 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081433843 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096762924 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069472159 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069610238 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096264056 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081022535 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102954561 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072790428 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102036563 seconds)
  done (took 4.736153094 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090909633 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093294333 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11429052 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067065498 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098800351 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067021946 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116249038 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065753282 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060907931 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117001282 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058029186 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060888116 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091931644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055833272 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060666068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058566444 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090801264 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057849773 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060804303 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088174836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059786011 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055633881 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088730906 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064989955 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057909959 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063857504 seconds)
  done (took 3.075721386 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077311532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085021973 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116852213 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130471884 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135095555 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078723397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107013445 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089091345 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114589742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068920423 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07281294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126107959 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089012014 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102981117 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069614639 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115582554 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084334568 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071544266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103625031 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092525368 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113197431 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080457316 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120436984 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083610469 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068807552 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09867619 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073125984 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109210835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074431573 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078732773 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100781963 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072569067 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097620064 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080461211 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073648841 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098275531 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092112768 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105808254 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079965155 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069580706 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100067514 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069639904 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116513991 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113379612 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095770153 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076870842 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076617292 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105922904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070262328 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114551452 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079041363 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069253521 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099331474 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068530366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096154997 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083411236 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07158813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098521264 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079223146 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099291869 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082802242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073129882 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112604229 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068984733 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103883468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068873132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06918691 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095070133 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092686791 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07073568 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137245812 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069728039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09864078 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077938555 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10378763 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075094661 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068894815 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112367829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078363236 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099534838 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077279829 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108571915 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072795753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088434327 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099343709 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07081736 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070158548 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103603108 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071966227 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097580939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082966284 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069232374 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099660847 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086327204 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095704448 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071069758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076098684 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101857673 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068847082 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108052137 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075027462 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097252024 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078746085 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06955538 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100318135 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078802268 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101080939 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068912302 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074100336 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102764618 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069387393 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069938115 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099888205 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070572566 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10600659 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07590283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073578867 seconds)
  done (took 11.49959471 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193515519 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187548065 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072545774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181460373 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07737278 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108766562 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181673311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097839206 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098283441 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070064575 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070298215 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132107061 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126073531 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107994814 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107401993 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06951752 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115586631 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10614589 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184633254 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177729279 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11703379 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077375221 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071046491 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099457231 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071419587 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079122957 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11411471 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102395629 seconds)
  done (took 4.327517992 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082952729 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130749689 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075749617 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090101082 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122115778 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069749466 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103630995 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070764456 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110057243 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082333319 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097746473 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075800055 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077395214 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10806937 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07014004 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107310763 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079615864 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070739404 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100903542 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074590037 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106593588 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082899224 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100794478 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070036633 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075839573 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097017809 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06613203 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114735001 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069179548 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119286381 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067945296 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075070163 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11100164 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069945494 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097014375 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07297129 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071972224 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100906577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071354889 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067731836 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096644292 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059421988 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068188594 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110708072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075312899 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089764298 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075601542 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074626052 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10248932 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06733557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099694636 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07240626 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071943447 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10659272 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074495766 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074805496 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102493978 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067405745 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105060797 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073039089 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065447679 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09565429 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074703867 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068173026 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106286654 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07362177 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095920229 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073032041 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074930345 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10440826 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073436658 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072433405 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096080623 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072458833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102576101 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074894641 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073815742 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09708594 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069259624 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069956504 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085473363 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069640708 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055539856 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101341444 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068465838 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067700089 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100257024 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074926278 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110778852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070526465 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10374576 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071045875 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067650586 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101205145 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065627771 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071756593 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11404154 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112742771 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069919704 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067907638 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112053883 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074793278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068558216 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086991449 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076583755 seconds)
  done (took 10.009936577 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097064774 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094148721 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099669007 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08386414 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12499115 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094305732 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105099154 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075532534 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071086125 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114623186 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069195427 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105532503 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069895111 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078423403 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126180702 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077907219 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099326036 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079066886 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073840894 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136443074 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084007001 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111964595 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081931448 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098324482 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074291621 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080979209 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126242843 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081046912 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108300012 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086904333 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081627635 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124686303 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08647888 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10168691 seconds)
  done (took 4.344204245 seconds)
done (took 39.096158229 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215572844 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.395648766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183575371 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.067405813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.228868113 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.18843615 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194644778 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.183459523 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.386311469 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183732347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.418153435 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.773679578 seconds)
done (took 58.551340666 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.265182224 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.324336815 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454238585 seconds)
  done (took 3.907696106 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.54238282 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.153478062 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463041748 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184524594 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184448016 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.641484347 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.752799195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.012533912 seconds)
  done (took 27.52284733 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.186157315 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.542977049 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.592632501 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.552079641 seconds)
  done (took 18.004261753 seconds)
done (took 59.372798935 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.219341602 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.211115096 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22965289 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170442983 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307924464 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.210571333 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.475851139 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.19690605 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.198266627 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175750856 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.215077127 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.184863864 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.185111882 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.503996072 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188469819 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194856032 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.1967647 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.679361756 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.558432855 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196026646 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.196364656 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.259773429 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.189436817 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.186161519 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.21710983 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.186771656 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187305237 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.21220669 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.366257722 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.185963746 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.274687848 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.714427785 seconds)
  done (took 189.806109392 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.186094501 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.244083353 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.344171149 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229862194 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.679737502 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.387980087 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323047474 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.739480969 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.203294655 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.214774794 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.537117054 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187522453 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.593750279 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20879294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199107578 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288181877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.484637213 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.554328566 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206488243 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.458916267 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.188217783 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.43322562 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.354326309 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.45728572 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.192126847 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.196881828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.207659047 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.208909904 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.379419681 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.42218997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.209161277 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233912494 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.75160036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048375291 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.208139868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.214012137 seconds)
  done (took 150.108940744 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.455100828 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.18766761 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188348441 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187617158 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217372932 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187629454 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.187667328 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.706856584 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.711325311 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.698917178 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.675282794 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249143489 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.411356198 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18963865 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279581899 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201663756 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189651446 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203357165 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.213709732 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188919523 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189359236 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712227387 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203476097 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.188603552 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196789382 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.188953078 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218176023 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582005064 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188829545 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21830617 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.503334608 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.232336701 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189397007 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.486156662 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.044782016 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190357165 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296285781 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190897753 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219137598 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190053428 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.455843085 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189510583 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190153511 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.193165631 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.767528472 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.191368322 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.710797757 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19166476 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.069913152 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190866468 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190371542 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.5060441 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.658279904 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.192714995 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190580591 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.193088179 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190217376 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190668542 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220829431 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.512006844 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287533786 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.191508768 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.193452482 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220717309 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190305929 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.425734389 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190904952 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.374457464 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249043556 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.300026673 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71608644 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19285017 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282583089 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308867092 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19199449 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191746094 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191750628 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191032338 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.29762228 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191910172 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581088613 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197572742 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193048644 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250968473 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283826262 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19096143 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493549468 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194610777 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191823755 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874851768 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283260543 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19200601 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191850896 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19175162 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.580346439 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716916763 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.357849824 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.193642359 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191943111 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.609795605 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195008686 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.59171064 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192704111 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697192655 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.776549291 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195482844 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299169273 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196797833 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194565508 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.192967388 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221885852 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.193783462 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249806662 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195674835 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.587726213 seconds)
  done (took 343.164007256 seconds)
done (took 685.665571757 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.874204037 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856157292 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.967477438 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853880367 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.839358989 seconds)
  done (took 10.529327635 seconds)
done (took 11.667717462 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.370803357 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.370699179 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249699908 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.371438513 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221672686 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.386983584 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.352473139 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.213731285 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.289487784 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266151249 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29012218 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239649777 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219307585 seconds)
  done (took 17.980963292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488787621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.484215022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258578726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501381418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234244168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4882661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382645892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407711071 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383504916 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209923608 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209472713 seconds)
  done (took 16.189295095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498813546 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490241048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264524857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493545129 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236521634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495263072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382982921 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392669649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385255507 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210583533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208655654 seconds)
  done (took 16.198304926 seconds)
done (took 51.50852473 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203879974 seconds)
  done (took 2.343932953 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237009101 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400910969 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.217137251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.208685579 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.205555044 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.205858602 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.207951595 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204863507 seconds)
  done (took 11.029612848 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201361553 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201605145 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20221469 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204656897 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204314507 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205013256 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202557262 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204980322 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.201920878 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203117023 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205546975 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20499183 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.202617967 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.202959181 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205588032 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20615841 seconds)
  done (took 20.401049912 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204143202 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202960631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203310538 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202975815 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202633585 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203397016 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.20417887 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20246963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203085444 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203339043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204192077 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203630243 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203749305 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203603453 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203201406 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205109619 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204048701 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205126374 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204416906 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204745464 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203159796 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205173687 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204604546 seconds)
  done (took 30.040477654 seconds)
done (took 64.956367452 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.237232089 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.763426097 seconds)
  done (took 9.143509834 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.206095752 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206865822 seconds)
  done (took 3.556706498 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206861161 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206430534 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.20720034 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206925972 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206858128 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206623272 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205904196 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207246423 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206856343 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206074894 seconds)
  done (took 13.21033003 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206772649 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207293399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204857443 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207182747 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207269439 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204379462 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207445489 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207655019 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2070245 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205820785 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.206936147 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204849394 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208055666 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205727477 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208049386 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205129993 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204834918 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204716316 seconds)
  done (took 22.857835663 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207311573 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207097806 seconds)
  done (took 3.558510079 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.205507252 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204998476 seconds)
    (3/7) benchmarking "month"...
    done (took 1.206140197 seconds)
    (4/7) benchmarking "year"...
    done (took 1.205726733 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206488572 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.205306781 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.205975109 seconds)
  done (took 9.584196831 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208739185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.377788268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.457734137 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819214749 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209518509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212274658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.000036421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.211947595 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215625168 seconds)
  done (took 13.857984585 seconds)
done (took 76.911012257 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.191373503 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.199884488 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.035029893 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219360333 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.215707671 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543561883 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.204979718 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.336058791 seconds)
done (took 37.092205147 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212846778 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.921179995 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.92200558 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.202263907 seconds)
  done (took 11.191230508 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.188610888 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.101884187 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.199009652 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.198165731 seconds)
  done (took 17.833878961 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.798665132 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534235171 seconds)
  done (took 4.4796957 seconds)
done (took 40.863209363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207421118 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209850642 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21046833 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210179049 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208070532 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.208308221 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210865496 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.209118825 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208119681 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210472216 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210553931 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.210184212 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.211028131 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210251161 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20882507 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207779866 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211074498 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208730357 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208267448 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208925517 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21140223 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208740724 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208933574 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211124666 seconds)
  done (took 30.175121785 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21162362 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.20929299 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212079041 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211857362 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209396886 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211019159 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211475023 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208582011 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211079133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211183522 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208900114 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.208850398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211531748 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209113993 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211219447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208927111 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21174563 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21028865 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211725199 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.20988637 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211876703 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208999163 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209825735 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212504154 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209761003 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209330784 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211771914 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210184674 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21242448 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209872808 seconds)
  done (took 37.464278403 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217219027 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219788828 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212071224 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212585624 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212595725 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212197764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21239509 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21333323 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21187031 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212636389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213216469 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212624049 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213315488 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213099983 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212670524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213002716 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213146175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213799788 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213104367 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213457606 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214240743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213763803 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21401397 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213817908 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214010008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213991558 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213342295 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213790466 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213585265 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212984895 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214745574 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214425871 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.213777049 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21420479 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214493529 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.213904909 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21826873 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220044067 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21448235 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216075894 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214813391 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214854777 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214300132 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214701471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.21464276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215548741 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215064522 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214999743 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214520293 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215443898 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216161993 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214785327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214701877 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215161728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214503063 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215718076 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217210817 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214629208 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215875574 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214927936 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2149973 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216077291 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214870592 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215374172 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216234089 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215632582 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215742874 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214891351 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.2159684 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215747883 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.215319708 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216334456 seconds)
  done (took 88.600905901 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215730026 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213729498 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213375547 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213152573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21367853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216125571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213683532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215630693 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212878921 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216107864 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215840284 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214328397 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213846397 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216519713 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216175469 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213695437 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216790085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214280793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216093076 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217339587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216328269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213983507 seconds)
  done (took 27.882457076 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216474795 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217084591 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214456752 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216122281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21424838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216696971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21690969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217974249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217141555 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216267186 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214790321 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218014126 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215021486 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215320171 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214774323 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214742429 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217685479 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214589377 seconds)
  done (took 23.041773167 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215375944 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215032785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218738794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215457775 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21616306 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218478171 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215282251 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218281381 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217592245 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216297433 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218779897 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218778803 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219440054 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215011349 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218675032 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215868227 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218874278 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216539427 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21920378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215612454 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21658516 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219775734 seconds)
  done (took 27.934731696 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218587511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218918047 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21665809 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216515775 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216508507 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219048545 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.21905653 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216326661 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21862036 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219146373 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216525922 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219053578 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.216923788 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217434662 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217318774 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216344021 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219706231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217921406 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219217271 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216940796 seconds)
  done (took 25.512316 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22034307 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219936872 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219883755 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219913131 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219688074 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220298215 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220025967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220236599 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220415609 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220776422 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220848332 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220702859 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220319527 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220932229 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220576882 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220669754 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220651072 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220540481 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220951397 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221518447 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220819692 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220561798 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22214976 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22070977 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221316437 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22149994 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220982424 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221410814 seconds)
  done (took 35.335833566 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222072615 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221497036 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.218938107 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219194638 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219689654 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219791819 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.218900543 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220757788 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221703172 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219203551 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.22228588 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22170692 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221685869 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222211883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222049652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221644981 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22106586 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219612261 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22039279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219937793 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222929318 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221790594 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222051358 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219518074 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220163751 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222580542 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220413517 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220280492 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223229001 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220403426 seconds)
  done (took 37.78630067 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.240750257 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240765337 seconds)
  done (took 3.640389869 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22026415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223064579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223372029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221412296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220752653 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222486465 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223759237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219646108 seconds)
  done (took 10.933689863 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222707781 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223157398 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.223415318 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223382734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.223583297 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224041964 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231030184 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240050787 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225015666 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224205551 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.229235315 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230633478 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227999696 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223311418 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223809575 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225982768 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224901931 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224255277 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223883898 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224681836 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22412738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227343843 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226241525 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222297823 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.224814138 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236734005 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.230888796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224916008 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224083016 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231401391 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.224604454 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.222424135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225347047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224135405 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225095492 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223893003 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2359237 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239920577 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.232981016 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22511071 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226445786 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223096921 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.225732783 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227223864 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226387415 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223930277 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225211689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222789788 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.22317083 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.227662436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229350168 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222740249 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22187564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229846315 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.226141829 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233148389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240553342 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22617856 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.230710986 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.235988115 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.238411282 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.230559514 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225419016 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224112768 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232507906 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247504169 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232412022 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.236919046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.220944033 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.222833142 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.234312945 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238624537 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.234189175 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224232961 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222762158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.223188426 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223027004 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224138223 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232255552 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243585537 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.223794447 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224062227 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231832173 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24440071 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221927486 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.222863372 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.223100518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.222653921 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.223872162 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236758062 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.237760373 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222934989 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.221957553 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.222832666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225871556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.223221576 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221561804 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224547516 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220464498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22318019 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221660502 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225731014 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2313756 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222784404 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223618616 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231973183 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.224881131 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222351202 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23325745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.223849182 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223676111 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.22331007 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23106115 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.221023972 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224866241 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.232236297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.224173376 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225630526 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223476173 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.223770946 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233971663 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.24999906 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225064375 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.223715579 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.228659736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234398969 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223794539 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227915425 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.224165596 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222256454 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22299617 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.226831533 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.225232514 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.225583475 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224027412 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226863348 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.222615614 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.225860075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.224538526 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226461104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226954865 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.225646749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.227017673 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.227674103 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225205528 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226197272 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233418581 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.225861704 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225841407 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.227089533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223211845 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225683399 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.226721048 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.225306373 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.226618013 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225720406 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22482354 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.22555726 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227083529 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.226570553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226297741 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.226064492 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229325976 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.225877864 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231549292 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.225007123 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224268411 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.226409764 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226374251 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.225985982 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227182891 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225375199 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.228837452 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233800356 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.227052484 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225957365 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230838972 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225796929 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226246388 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227880061 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229370739 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.23428433 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226869708 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.235876416 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.226532966 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226865855 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.227497536 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228772394 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226619609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22689127 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.228905872 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.235210918 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241668594 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2372523 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228674753 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.232181235 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.227210554 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.230480564 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232642881 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227918962 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.228173034 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227337603 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226088238 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229397703 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230239529 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.22800568 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226312467 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228372586 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.22791661 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22747655 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229102068 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.229028503 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23196477 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226182691 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229039651 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228010549 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227761478 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225922306 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.227805595 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227570448 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230102266 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228668118 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.239926186 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.226658116 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229729365 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230432324 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.230078205 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.227224355 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22948657 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231550107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.228954438 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23790735 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.246020673 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229230245 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237964903 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.244520088 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.22943946 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.23163936 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230114885 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.226924069 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.231127328 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.236847275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229122183 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229247475 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229373921 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228309041 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228645765 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238060754 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226782261 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.228052127 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229821092 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231727749 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.228002784 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230616828 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.230456999 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.230280586 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231281934 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229346858 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229816768 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231144135 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230182682 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.228433315 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.228261581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230740671 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235587529 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236098757 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229596464 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.23188502 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.22962636 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.232775629 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22903357 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.227955558 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.22812027 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244278965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.237303458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237806109 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232566446 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229855178 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236411749 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.229969173 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.233462314 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228875897 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230247986 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229538813 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.228444092 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.228184711 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230352825 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229801183 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230489032 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230506456 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.233942565 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230907873 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.229159971 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230276756 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.230382581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.230361838 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230024629 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.2308358 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.232791185 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233076393 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.229946355 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.231000756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239471589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245942058 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.232326661 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229591193 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231330016 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.229877368 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231739454 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231036571 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233693499 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238828039 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23315153 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240492703 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.231015058 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242294511 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.230250833 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234085021 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238780763 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.227991532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.229178689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231495598 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.231267353 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240302706 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.246300015 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.23140619 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234724525 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231507548 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.230365893 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231075315 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231491436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231675322 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.231002034 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242273023 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.247678433 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235329128 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23376227 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.229310041 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231907401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.231912907 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23121306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23783672 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232304418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233600209 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230847044 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.233478179 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232505275 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.232215487 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233219933 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.229906365 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241540158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.248101536 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23640856 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.232632417 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24430233 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232476894 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241972501 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.248587526 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.232763927 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.232287421 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.232563157 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235477941 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232215124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.234752539 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233201567 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.233978987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.236146974 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.232692886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.236058853 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.232588382 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233034318 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233734197 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241527279 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256214593 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.233305199 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236871001 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.230518079 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233575829 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.235835638 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.232783486 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.232529322 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.235525 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242297213 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240101677 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.23365049 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.23282696 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232826285 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232728972 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.233206231 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.234719052 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.232745058 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.233961609 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.23374751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.231980893 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238560195 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.233224363 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.233813225 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235421392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.232928746 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.244199811 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.233257871 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.234791049 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232280305 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.232271068 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.232537295 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.234310062 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.231410867 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233131777 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232637192 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233099182 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238220045 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.238793687 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.235617849 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.232857494 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232157737 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.233287474 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.233338683 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231857909 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.232817308 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232308899 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.235182085 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.232775318 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.234379506 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.231312092 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.233335362 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.232812304 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232665524 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234056233 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.238858135 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232950269 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230424026 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232641321 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232898057 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231785272 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.233491537 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244070392 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23592604 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.243072417 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.241330675 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235768563 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232394132 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23574695 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.240835732 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.232267413 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.23487728 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.232167581 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.237185201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.233553993 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.235631667 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233308684 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.242778307 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234074798 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.234045062 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243764196 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.249920729 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232944268 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.234657425 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.23748505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.233694879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.231707276 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234018399 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.232909847 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243287944 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.252359448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234175597 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236010062 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.231515135 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.235673052 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237719616 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235412807 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.235719368 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.232992837 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.235929322 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234374746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234684508 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.23239996 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.235007033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.234309319 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236712857 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.241025116 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232081542 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237412184 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2348841 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.236058651 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235174329 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234641452 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.233200648 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.232909308 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.235261097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234771453 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.235920561 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.23869109 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.234892497 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236550722 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.236774034 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234699396 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237809615 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.245328227 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.242547122 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233868335 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.234808831 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.236333707 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239141857 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234976964 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.235157757 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235728267 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.238784301 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236798132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235452001 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.235693272 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.238351371 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25370303 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.252043407 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235932298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237338247 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243477109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.236343104 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234077505 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.237215765 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.239249441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.239303954 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.243382495 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.236743263 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244063103 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250940878 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.236621756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.240744257 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.238378616 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243351008 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240244246 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236024881 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235149955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.240113029 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.254060648 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236184553 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247145847 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267967039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251852302 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.237545081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.236345382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235350972 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.235941013 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239322969 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237682575 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.237068262 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237096991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.236575255 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.237386283 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242326219 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.238984515 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.236262101 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.237762934 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.236681519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239190153 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234799526 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236321535 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.236984937 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236585555 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.235348663 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.237890023 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.236625891 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251048994 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248041238 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237919777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.23587026 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.235408201 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24147905 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.239630938 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246587543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243898418 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.236960977 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.236740139 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.238469306 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236803664 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.234451113 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.23797747 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.236516788 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235099779 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.234935955 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.250550312 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24454567 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.242701826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.237389534 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237515388 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.237979952 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237351358 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236902099 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237415084 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.239446062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.237604747 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240503027 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.238147959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.237046662 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.239462779 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.243128725 seconds)
  done (took 735.778160825 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234737596 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233458175 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234369672 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235523802 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234165933 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234222499 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234382879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234051381 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23607314 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23433779 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.235810189 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236155417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234343821 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234923608 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234406095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234661349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23529582 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234884017 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234155358 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235858303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234837251 seconds)
  done (took 27.102948014 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.238177324 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.234786615 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235481127 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238116241 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235597944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238435833 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234706194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238237862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237548146 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234913579 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237529522 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237503515 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.236605269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.235430151 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235451163 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238316011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238669232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236068637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.238477363 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.23593135 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238555265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235553176 seconds)
  done (took 28.383957377 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.239014389 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.238228366 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.236768945 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.236897205 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.238941116 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.235458321 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.238185713 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.23896249 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.239799078 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.240180279 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.237278408 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.239045197 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.244090463 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.242986454 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.241503625 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.238421268 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.383781237 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.239555714 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.239921492 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.240331054 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.236763055 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.243898102 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.234829572 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.234583354 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.236479679 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.237640437 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.238074163 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.2370477 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.238302285 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.237795749 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.241631676 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.239510029 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237846884 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.240397095 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.236352132 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.237445874 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.241185718 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.237788314 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.23574522 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.239012288 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.245834165 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.257341024 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.237717458 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.245639573 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.238335282 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.239657428 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.239974223 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.244759618 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.235989333 seconds)
  done (took 62.053782753 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.239447656 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.23769126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.23582714 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.237441068 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.237595963 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.238027298 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.238408202 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.238050946 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.235752758 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.235929109 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.239390726 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.238200864 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.235954791 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.238439083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.239251278 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.236873233 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.236558033 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.237005236 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.236684822 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.235850618 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.238765872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.241146326 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.239531035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.236808112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.239949827 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.236523399 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.237293898 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.239119546 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.237154619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.238074623 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.240766806 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.239269098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.240107885 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.237445705 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.237605734 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.23905972 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.24017933 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.236647717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.238736855 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.238190816 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.240132932 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.240953557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.24138809 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.239705851 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.237487686 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.237672024 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.238107747 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.238470463 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.238143395 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.240883896 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.240681772 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.23769611 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.240572447 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.237318058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.240998741 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.240590201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.238143715 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.238691276 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.241058338 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.239129632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.238373081 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.240683746 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.238786432 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.240672072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.241232378 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.238652494 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.239286087 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.241766226 seconds)
  done (took 85.404128268 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24129557 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.240740119 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240976808 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241249692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240830971 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.240846205 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24247847 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.241574709 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.241172395 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241901328 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240660959 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.242433439 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.241646008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.241082816 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.242298754 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24126958 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.241922249 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241979508 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241856539 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241557023 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.242354457 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.242827364 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242270086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.241946418 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24209927 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.241643829 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243881237 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.242413149 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243196636 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.241636045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242880738 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.242244547 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.242402035 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.243314145 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.243547472 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.243096567 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242748737 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243764487 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.242358599 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24295804 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243953815 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243541452 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242956419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.243793402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243570908 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.243454781 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244022463 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.245073046 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.244997409 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243912701 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.243626412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243448961 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244054398 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244410984 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.243945889 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.244172369 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244518917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244086662 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243877172 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.244268788 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244507989 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.243999639 seconds)
  done (took 78.231146612 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243817674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243875715 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.242558374 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.241197189 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245055023 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24222106 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245108264 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.244621894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2455443 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.245713773 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245289245 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242669721 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242496296 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245976639 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242666403 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242968814 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24282446 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24305443 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245661296 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242887115 seconds)
  done (took 26.05621917 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.243028311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246403943 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.242959232 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243638015 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.245566195 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.242828639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.246730703 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245900527 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243750069 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246824913 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246525133 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246786371 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243244116 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244039715 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.246731295 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.244375064 seconds)
  done (took 21.099973738 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.243884372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.246494777 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.245448398 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.246093143 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.24507653 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.244704157 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.247678904 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.244897995 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.24358145 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.247695611 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.247689261 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.24762774 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.247308358 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.247073783 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.245275701 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.247715888 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.245543204 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.245044053 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.24703981 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.246728296 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.246168907 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.245909674 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.247450022 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.248079784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.246337017 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.24681901 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.245584251 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.246080311 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.246316834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248693632 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.246210568 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.246716965 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.245835256 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.245396196 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.248076184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.246079348 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.248134898 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.248635085 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.24873854 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.248841149 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.24867573 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.246153973 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.248571167 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.249310631 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.246607304 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.248850654 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.246674197 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.246894359 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.246107698 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.246045501 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.248717493 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.248622373 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.249191921 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.249652489 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.249352712 seconds)
  done (took 69.76492665 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249695279 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248923974 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24645987 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249211719 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.249312904 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.246990593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250399601 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.247229853 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247451467 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248918563 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249072139 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.250503128 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247739717 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250543669 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24897494 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250020553 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247750955 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247984831 seconds)
  done (took 23.661655178 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24789048 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247908358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.250842618 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.247452638 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.24750203 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250845361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247880029 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.250231679 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251215972 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248443976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249203312 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.251811802 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251245011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.25181591 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.249370513 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248974663 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.25234066 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251532093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.248928808 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248785792 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251692598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251175338 seconds)
  done (took 28.682645819 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.24912028 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.249552492 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.26625115 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.292435132 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.277916335 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.249202792 seconds)
  done (took 8.770100595 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24950276 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251746175 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249707162 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252174709 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252324802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249102608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248945159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249617392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252023083 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24961258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250139951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252501725 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251783301 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249489827 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252737867 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251705511 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25058641 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249390872 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251398033 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252841628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249617836 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252206226 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249854145 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249771911 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250394818 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250190383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252632176 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251097418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250738605 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252985206 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252561599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25088575 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252771673 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251186231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254075669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252363691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251364824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253798301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253213164 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250962396 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253772245 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253785288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254540089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251222285 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252798651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250730881 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251484702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251560705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251745313 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254006682 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254665584 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250710328 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254802803 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254691127 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254802452 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25466251 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251724909 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251432313 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254827218 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252916517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252043489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254827322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25213581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252920851 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256143005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251868362 seconds)
  done (took 83.819758193 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25288057 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252344942 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252794408 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253409946 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253041734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252906183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252272466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252894743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253052839 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253712297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255671909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253274242 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252817878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252723617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253019809 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253911252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253721588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25420355 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252973885 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256054706 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253466098 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253963858 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253940333 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25375857 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254698899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255686834 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253537712 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253116953 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253884949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253887207 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252627351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254024027 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25338318 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254075157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254010554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254141062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253801579 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254407392 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253779132 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257210481 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254006598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256998669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254495989 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254972886 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255031575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254769114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254822997 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255734627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255126159 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254326104 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255500913 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255198765 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256138449 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254897993 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254412708 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254977556 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255154781 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25545475 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25461212 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25781083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254434907 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254888214 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258244442 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255202893 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255499961 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25539834 seconds)
  done (took 83.979610341 seconds)
done (took 1712.243784998 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.325479744 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.266998488 seconds)
  done (took 13.784260811 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.418168681 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.372403932 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.260145995 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287267227 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.260490414 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.280536209 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276791878 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.261478229 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.260018224 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.26030359 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.259588392 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.445635887 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31370397 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.260371002 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.259351516 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.352690674 seconds)
  done (took 42.03316529 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.286454197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.268114784 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.364455226 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.281011759 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.28652681 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.425642609 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.314632352 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.265022937 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.411935863 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.303974068 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.62013979 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.287293361 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.264711399 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.228868195 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.281158039 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.424615638 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.484041527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.624477778 seconds)
  done (took 28.621183227 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.650905094 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.288114535 seconds)
  done (took 9.13764472 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.269290241 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.301450311 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.278090912 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.257747852 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.28828607 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.335248842 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.282801184 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.276784443 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.302197669 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.335359167 seconds)
  done (took 64.137183042 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.28324554 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.266109143 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.266025177 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.264920637 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.257019727 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.257614239 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264742325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.262388374 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.436158392 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.374292038 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.280284158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.272477029 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.266059377 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.266245615 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264027871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.299613301 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.390368314 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.263939092 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.263271932 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.27152931 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.266117877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388813122 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.302130286 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.264792875 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.374957026 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.388873393 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.271033776 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.272917868 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.384263165 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.264874913 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.265810987 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.26643728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268185912 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.824481339 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.792301007 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.274112967 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.287850536 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.275410461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.265198311 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442142822 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.268107234 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.273490388 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.262590065 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.74339134 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.420304985 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.36816562 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.390912108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.270416594 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.2687957 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.324346192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.268039744 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268369181 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.293622301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.981084583 seconds)
  done (took 106.513514453 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.286179708 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.747227573 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428134288 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.282521373 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.060499164 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.957298701 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.262866985 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.508598634 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.330565441 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.260340299 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.576317357 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.728798638 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.270848261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.333111303 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.593902609 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.299792308 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26244043 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.048009124 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26074386 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.263465236 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671037244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276761242 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.263681341 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300433658 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.298532606 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686538229 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.552455219 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.72440815 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.265911259 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.261207041 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.692336387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273215704 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.305864452 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.262498713 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.518540497 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577636907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558744329 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.266380398 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.281453591 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.265719961 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.293953641 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686530256 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.572834782 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.26331179 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.262915234 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.691855097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.264684185 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.272108572 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.262935162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.457729242 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.324631447 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.263060536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.564021195 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.265294083 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.612672207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356160316 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.312428231 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.716017078 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263473058 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.356199161 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287734391 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.263687473 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268969079 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.264687531 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.262595238 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.572779114 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.343326147 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.267134232 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.573312081 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.687760373 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.264297723 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755259442 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.140743897 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.267598815 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.337781953 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.263652289 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.866807019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717816649 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317687245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.264186747 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558975071 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.265443141 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.566517386 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.275067702 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264734023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685398746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.282812696 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.310637937 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.264651461 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.2788146 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.934454194 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26829627 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.514055056 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.327755534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.265254225 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.264454639 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.293504698 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264404994 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.280765008 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.270915551 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.759919027 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.272887961 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.54024613 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283336822 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266291721 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.266104784 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.26868645 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.267322989 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478209264 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.760361945 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.26612916 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.265977516 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.274720516 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.273226415 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.554659485 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.265199586 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.538638724 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.26868614 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270164341 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.272539136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004750944 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283896893 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266354663 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.283856809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.104324989 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.475640473 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.283007214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.279048907 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267371165 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281558592 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.480673785 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266931845 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.291527647 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.271537475 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.931759997 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276199166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.286859778 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.997339274 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274645891 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.097881833 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288860837 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267282629 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.569030057 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.527083813 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.280943439 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.270900216 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.266710526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925874837 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.288145761 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.398706987 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283603993 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.273805625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464249932 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850637251 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.267761368 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.846997588 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.270595762 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476491254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.267597178 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59353872 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.72055044 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268450544 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.271692725 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936702005 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.933908651 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.887426272 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.2683188 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.583048283 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.234472942 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.721449755 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.268457355 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.267807232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.740452645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.269892684 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.277400884 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.269066122 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.268929446 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337241941 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44268934 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.533853076 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.268548136 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.691818662 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.274784075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281278306 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.274325167 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.274608194 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.622658891 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329496468 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.275138555 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.313005534 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.27020129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.271461787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.708456026 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.129560757 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.271490898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421653192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866189801 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.272430307 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.271845942 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.929999205 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.72374803 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742539054 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338658052 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.54250623 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.272563003 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.307678315 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.009817677 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343295138 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706518509 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274488236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.271061795 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842368311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.272697403 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344625716 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.271913473 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.270803905 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772186365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.273159889 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.277340561 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.481529964 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.271821438 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526169948 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.271926623 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.289916429 seconds)
  done (took 1094.78113475 seconds)
done (took 1360.200838345 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.277448297 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.274167239 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.261768796 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.274436365 seconds)
  done (took 26.301327883 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.282252946 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278523876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.279990535 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.277825343 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28244934 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.279779233 seconds)
  done (took 8.896663621 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.295170006 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.275688996 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.27440038 seconds)
  done (took 19.060188399 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.473201532 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.436416399 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.609805863 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.210714457 seconds)
  done (took 9.944967168 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.28083593 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281169442 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281390126 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.283889322 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.283877645 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.284999547 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284597151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.283364529 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.284674802 seconds)
  done (took 12.763831308 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.813080307 seconds)
done (took 82.992567151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.511069604 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.288967573 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.340600269 seconds)
    (4/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.859586773 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.277243404 seconds)
    (6/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.704039324 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.261694953 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.554352035 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.558849362 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.318517343 seconds)
    (11/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.556257618 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.317067006 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.50915103 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.276743329 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.287272292 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.276531372 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.036579426 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.270252097 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.261313864 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.78282412 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.980744704 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.349574751 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.395413123 seconds)
    (24/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.379017855 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.302153959 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.276115831 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.40443247 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.303842171 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.262211262 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.125894275 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.812128871 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 6.277979895 seconds)
    (33/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.286952789 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.666901803 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.391484917 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.984517146 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.905101074 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.017111262 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.56029656 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.283419823 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.299474897 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.341026304 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.38791474 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.918225765 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.262089865 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.616989816 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.547714121 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.374228014 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.30847156 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.328339804 seconds)
    (51/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.968561043 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.351004581 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.412792085 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.335247936 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.276889668 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345115159 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.281819351 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.279305688 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.323045897 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.7956379 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.440898087 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.297367368 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.373470129 seconds)
    (64/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.264810897 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.566445315 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.304595021 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.387717637 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.309171442 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.714274689 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.540620377 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.885914752 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.681372607 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.306083959 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.056401364 seconds)
    (75/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.473856643 seconds)
    (76/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.628737133 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.296908472 seconds)
    (78/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.278331198 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.687827958 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.51032018 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.412999418 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.27889117 seconds)
    (83/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.381662559 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.281521072 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.870918672 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.711999795 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.45893694 seconds)
    (88/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.714305926 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.278673995 seconds)
    (90/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.870467993 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.266475087 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.978060003 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.477752337 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.478939912 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317076175 seconds)
    (96/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.636050945 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.307215768 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.581989458 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.1086887 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.684625641 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.254782418 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.295402409 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.297837312 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.285136847 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.448636382 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.325999286 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.365130094 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.478048078 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.280387511 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.532052546 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.123893522 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.363779672 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.267037534 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.861423419 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.523726336 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.318823152 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.807065884 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.435237566 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.387605088 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.28863125 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.313668463 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.795558114 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.538196879 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.773889039 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304549391 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.406857729 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.330647941 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.55897078 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.368190495 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.12463702 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.308765841 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.958621085 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.541428437 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34618588 seconds)
    (135/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.463587442 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.070838446 seconds)
    (137/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.486386868 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.510865207 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.639200166 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.383874681 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.278795354 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.381823049 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.968119938 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.963818362 seconds)
    (145/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.843001928 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.308707641 seconds)
    (147/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.841198059 seconds)
    (148/309) benchmarking ("sort", Float32, false)...
    done (took 5.244704766 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.741876736 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.420719911 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.446320064 seconds)
    (152/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.28202026 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.059835295 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.615272188 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.285428948 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.30782813 seconds)
    (157/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.401587674 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.270243839 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.964127613 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.678193356 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.40576684 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.288852493 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.284218634 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.425435447 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.307167985 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.03912635 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.283833148 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.84171871 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.111551168 seconds)
    (170/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.463545255 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.549055516 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.891576631 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.365952256 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.682353508 seconds)
    (175/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.810314142 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.43145834 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.00693771 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.286220695 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.632085413 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.424036941 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.369359466 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311469114 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.273240707 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.369123075 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.732553676 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.327260038 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.466536958 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.734266226 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.66931153 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.349234566 seconds)
    (191/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29501883 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.310924515 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.751072114 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.952483657 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.343079112 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.793510149 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.443016985 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.311916849 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.278097718 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.69639135 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.269900192 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.141595045 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.306770128 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.87357752 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.456434039 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.072635883 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.334692937 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.467597763 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.422915019 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.505408305 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.816444755 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.108332016 seconds)
    (213/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.634245747 seconds)
    (214/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.287607422 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.0733843 seconds)
    (216/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.397168465 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.613751178 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.320821088 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.295942523 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.363507142 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.341783263 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.674361245 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.327656972 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.51928424 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.320530353 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.865459252 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.967498444 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.274602246 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.082573408 seconds)
    (230/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.630584092 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.573619869 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.286474159 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.264639557 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.757011317 seconds)
    (235/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.373781096 seconds)
    (236/309) benchmarking ("sort", Float64, false)...
    done (took 5.516997828 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.288126054 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.477500974 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.314122211 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.31628611 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.289147009 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.12509472 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.797808292 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.408436696 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.313830583 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.277566063 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.31682203 seconds)
    (248/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.319252643 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.583936698 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.49633054 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.984867553 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.560931351 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.286452572 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.280847669 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.579401523 seconds)
    (256/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.437688924 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.277374391 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.513038492 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.287062214 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353650664 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.723786487 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.28817243 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.82351379 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.600564038 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.683578088 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.288093834 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.291454357 seconds)
    (268/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.463125403 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.618467889 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.648790397 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.453357926 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.67306088 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.277309632 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 4.322588822 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144103701 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.840112884 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.387573848 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.284916282 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.839132339 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.986878936 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.884588442 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.601860884 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.352156803 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.372318231 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.84556278 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.330889513 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.372561921 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.306462597 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.406752611 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.444892468 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.46145999 seconds)
    (292/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.645018477 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.461435132 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.05365894 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.522616905 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356629302 seconds)
    (297/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.289444884 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.399630831 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.52568089 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.802559705 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.334106869 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.280164819 seconds)
    (303/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.375653922 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.289539221 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.414727502 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.015610682 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.314755431 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.373819009 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.290467413 seconds)
  done (took 895.280278012 seconds)
done (took 896.498398905 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.322980419 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316416509 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.300191695 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.321350472 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.412814127 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.329679159 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.311359525 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.302779537 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.348298269 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.350537133 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.299994138 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.328106356 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.30237406 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.301227055 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.300423878 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314968245 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.211293444 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.301798956 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.318463144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.310180096 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.318019363 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.300321599 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.350458055 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.32828494 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.305138362 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.305670083 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.305060435 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.320887739 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.413834941 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.306047878 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.305473404 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.314459365 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.22553501 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.302973611 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.297721813 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.321344415 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.312890901 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.312924119 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.305504977 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.334672106 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.574285607 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.302297783 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.303907073 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.303137922 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30316152 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306792841 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.303706421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.309728475 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316123052 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317722417 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.569532538 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.318550606 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.306504382 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.304383738 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314353191 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.303498938 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.306153943 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318966611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.322386955 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319538677 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.205536221 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.308384548 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.304961554 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.320674221 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.311345229 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.608475876 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.299454732 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.309252618 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.579420484 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.308791407 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.610095571 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.313206062 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.305846871 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.318694984 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.336331235 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.21711092 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.300470245 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.304552912 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.312691712 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.303766665 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.31493745 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317479253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.310320539 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.306281446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318793149 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.334196759 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.314842214 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.30605456 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.315101432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.32473348 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.31196654 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.316715257 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.308627762 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.301349964 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.315542994 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.309577607 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.308659779 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308582684 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.310673328 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.316260855 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.584495523 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322217079 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.302971216 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.302794903 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.304963025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.320178293 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.586671635 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.30686152 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.328850997 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.35315724 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307744714 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.219417668 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.311478628 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321780541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.315028087 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.309521694 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.301933838 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.21344398 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.581971555 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322227306 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.309283655 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.306451358 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322717694 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.309534061 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.304130603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.236073976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.310650634 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321819022 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.428593759 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.318627788 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.339846581 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.306402333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.310813362 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.341499889 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32369459 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.339194079 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.311493438 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323907548 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.323456539 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.305165943 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.319163445 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.3180783 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309864709 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.315200252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.302304978 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.337774011 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321435021 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321138824 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.328912579 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.430898467 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305337779 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.216452225 seconds)
done (took 218.84402471 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.368829142 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.301046247 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.415334724 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.307128289 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.402446813 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.416834225 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.30482313 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.304680638 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.304404482 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.685089409 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.304729338 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.304819568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.303914937 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.305323405 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.388788403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.306688516 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304235751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694768302 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.30743333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.376081343 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.299419543 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305447062 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.30739187 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.750272175 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.303463682 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.305653454 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.37687998 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.307487527 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.659197508 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.304123074 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.302108474 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709651679 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.396480229 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.325486855 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.317794919 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315150401 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.414994794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.323990711 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.398714488 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.388814363 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424927626 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.345450191 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.301136769 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.299651933 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.310252313 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.308195082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.306345626 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.335049923 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.303566019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.307000106 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.649129481 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.31847031 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.316170679 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.307170868 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.306606089 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.327747204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.306871697 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.308750689 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.398294257 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.309323379 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.378383329 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.696057024 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739957968 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.309622978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.305602314 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.307803322 seconds)
  done (took 146.989501829 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.376042503 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.380971151 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.416093821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.310457461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.360882834 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.419063578 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.310276027 seconds)
  done (took 10.815852232 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.315640921 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310778572 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358159689 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358359866 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.309861092 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.45596719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311014918 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.321253048 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.308500606 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.362808958 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.312075231 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311460648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.317928775 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.310699016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358413093 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.321606754 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424665415 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.311910008 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310816767 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.464303833 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308339278 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.317831171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.3686334 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.321752868 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.312163244 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.31671123 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874625177 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311057532 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309376379 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.311681781 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308878526 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348440048 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.312153585 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.309350636 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30993902 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426659787 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.311299323 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309383628 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.312058223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.308747561 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.311373634 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.312466099 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.312274919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.309863316 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.312004575 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.335624524 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.312114261 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.313070349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.313149928 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312790314 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.362207614 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313912182 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.310529057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.311226375 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366693096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319425936 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.312271081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.311276689 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.314258127 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309636886 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.466055424 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.35943681 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.313439417 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360786326 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.314406486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314324873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.313636043 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.313825443 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366798595 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.314223095 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360809731 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.310795368 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467743941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.336435803 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31481711 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.317125305 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315228363 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313335167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.310635957 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.319398808 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.31162647 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.313930458 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.319536217 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311705128 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311907941 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.416081335 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421267865 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.312289829 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326307641 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.31975366 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.312078784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.366389383 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.314694156 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.312399648 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366240327 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.429551697 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.375437237 seconds)
  done (took 151.13184521 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.319646808 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.321941438 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.315753418 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330095722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.313604844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.314159123 seconds)
  done (took 9.163136308 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.317592255 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.316366826 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315482445 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.315777452 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.315198884 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.316777508 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.315130552 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317391626 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31875595 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.315544903 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.317485358 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.318293111 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.317053536 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.31517373 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.315773373 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.316948039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31668022 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314623076 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.316273321 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315744472 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.423507775 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.316150266 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316729796 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.31716718 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.32074029 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316829635 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324331521 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.31648357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.31690369 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.324188535 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.319290001 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.317621484 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.317860431 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.322550961 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.319999974 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318547995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320460206 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.319038354 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.314931189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.319205545 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.319013383 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318113617 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.317894429 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.319484925 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.318768626 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.321977472 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.322948539 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.326209201 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.318133151 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.320332819 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.320419107 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.319649364 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.318678419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.320408309 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.3228576 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322613694 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.324376557 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318082781 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.318401348 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.320593002 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320806972 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.319940776 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320537161 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.321385082 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.317442524 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.320433526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.320683892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.322716014 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319119916 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.319096537 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.320994314 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.317020742 seconds)
  done (took 97.311477018 seconds)
done (took 416.651904138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.52685796 seconds)
  done (took 7.779649248 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.332214987 seconds)
  done (took 7.587125164 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.641921444 seconds)
  done (took 19.902419239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.339141059 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.318978571 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.319902467 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.320989217 seconds)
  done (took 26.553780643 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.476832006 seconds)
  done (took 7.729482103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.318607459 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.315265135 seconds)
  done (took 13.889238864 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.812455666 seconds)
  done (took 8.065886556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.714241241 seconds)
  done (took 7.975284382 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.320491024 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.323866786 seconds)
  done (took 14.165304891 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.298661426 seconds)
  done (took 7.551331298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.988508523 seconds)
  done (took 8.243408234 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.315137204 seconds)
  done (took 7.56950836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.355141342 seconds)
  done (took 7.607814276 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.615171549 seconds)
  done (took 8.868063993 seconds)
done (took 154.741260386 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.312337898 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.313885185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.31633025 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.31446817 seconds)
  done (took 26.509484268 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.354044433 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.353703312 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.356627847 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.365240149 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357230486 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.35376588 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.346130325 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.34698688 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.36524091 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.357012073 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355813536 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.356941517 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.355767062 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.347819965 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.356704545 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.356222238 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.365367939 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.356148964 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.34608131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.3580279 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.322153607 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.364536233 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357553801 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.322069664 seconds)
  done (took 33.733314624 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.516903678 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.392264732 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.473162229 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.372131552 seconds)
  done (took 7.008745915 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.373806938 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374990411 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.387249741 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.425002947 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.455414119 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.384518712 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.349098937 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.343476194 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.329528795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.375181592 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.450711369 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.391871655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458773207 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.321821215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509121821 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.32355819 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.323046845 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.375888513 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.425464984 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.440222129 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.323203141 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.37459372 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.378786444 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.391826139 seconds)
  done (took 34.543230435 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.322496113 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.329996113 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.327709813 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.321979235 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.322070408 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.323466912 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.32843755 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.324247405 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.343474258 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.322839678 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.321692761 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.323167559 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.321695995 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.323705519 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.322603205 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.33525631 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.337247616 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.323314958 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.326212892 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.329823445 seconds)
  done (took 27.787028676 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.316318339 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.170719719 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.6679497 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.572455936 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.316109578 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.318355264 seconds)
  done (took 27.619286071 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.385345546 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.505332235 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.325004506 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.64759479 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.726976087 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.32500131 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323601035 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537066995 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.815135998 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.821141885 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37451602 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.386827879 seconds)
  done (took 19.431875253 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.319203303 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.318571844 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.322777375 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.335684926 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373289302 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.329674423 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.330976047 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.317684936 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37571977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.379411662 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.329915437 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.374129482 seconds)
  done (took 37.366823551 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406385397 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361844182 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.250169136 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029509033 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698614525 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530785751 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.058391667 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.738494743 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.326201758 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594152125 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.159717623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423443252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574323144 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325664822 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321624881 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.261161453 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548201626 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781415487 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323030642 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049444928 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348283095 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327229612 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.142151441 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.349195616 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531732115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449719435 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.581277572 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321164238 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581898828 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332487106 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33176728 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322017354 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595156465 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970967532 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41729162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331497225 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.993871564 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034988625 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.313772091 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.067179163 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.889484761 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326537633 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33240307 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321948171 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255571409 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326832644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750038512 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.329393989 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.032988268 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320720939 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331556808 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416807471 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.32615811 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137763358 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320229988 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323731882 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.321815123 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328506444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89761958 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.541912687 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331046455 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.258705109 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678303806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.059167829 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903752501 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425516953 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.326777231 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327025978 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257155343 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.08717162 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34054169 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469239855 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343875716 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972605162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972928889 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.172304964 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266631046 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844211535 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333896806 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.261981396 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550913117 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324315468 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259545691 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.280195649 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.258781187 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992106067 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332515343 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.696746354 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330865093 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.743069477 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337926599 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341641004 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347042891 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547205184 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.208308189 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325219176 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.936889327 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482981486 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346465938 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747780846 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262305303 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328327035 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579425869 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.536387757 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331053677 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.268512898 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51466119 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337408651 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343243447 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324896631 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.337217803 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.861152628 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339219329 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552749511 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344205067 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324414505 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030249514 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337305648 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.427677464 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.189514148 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568951896 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.061025301 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329244066 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408527699 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327561622 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327143056 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.209063544 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.840755567 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326774369 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.328517819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326419465 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.338974981 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.325986863 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275088662 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.336377029 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.242793322 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.329020354 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549772559 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326090709 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605548156 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261140204 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474381933 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418324379 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.55029874 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.441476434 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.326930898 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585122651 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32790984 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331347365 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340170733 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346166721 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425353059 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349980696 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.327735532 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584187611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.331272383 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331575859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.63451707 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330339872 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32950932 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.333455517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.145826409 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867990707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306314135 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337659703 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219391692 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.343019981 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391673794 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333510716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33853146 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.008291128 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.113208781 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.335700475 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.3261805 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552575199 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338130203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.085269746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412089192 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.512507519 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867304521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344317975 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.26320274 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.040197905 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.022425169 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328797104 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263950881 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330343184 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338712622 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341016335 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.815729494 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872250348 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333928378 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.082042245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.33821529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340609358 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.335640499 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329165732 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.987698714 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570057479 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335007108 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.360284128 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472910163 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.343623347 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.264241433 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.3327376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335138466 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329112711 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330922563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363815578 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.088917405 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802131116 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589120961 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.994681054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345594159 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.179744628 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.3634937 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.331688214 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.991395886 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347267757 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.345964837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33971919 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.341658432 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.094918666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992041677 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902807907 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013883858 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823283567 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223125127 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.333671253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33451135 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.765610702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269012465 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.88900871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507190065 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756892183 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279218205 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518059614 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.467341929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042316576 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344522696 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559741221 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215455931 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.013463916 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359358895 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543779833 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366695806 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332259302 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276923921 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.618476829 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551321657 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95966702 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415998519 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75724941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007353695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349468558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.331284076 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.634071752 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49469727 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.051109666 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.503953634 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341044431 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.2504112 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813197561 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333611938 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.558199063 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918682788 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346803646 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.520900463 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27245502 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344029823 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344507268 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.334007024 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.503554859 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344991412 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.589079814 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345021985 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266999346 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345757767 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833345544 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.189143436 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.339708872 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334903154 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044109781 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344662996 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598598743 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.339025351 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.974838065 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342649797 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268209138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26924984 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.028757493 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338462431 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312947188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796958513 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.669507308 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320789969 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361807262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180944815 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588871812 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.348713055 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.875475145 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562799797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.114600982 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359826837 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435712766 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.047522549 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.336719223 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335122723 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571875285 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155214438 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560291476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.27812004 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.25004463 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333181991 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550100828 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335920877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.254572878 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58124606 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.048934171 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.349804061 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017949086 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363930998 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282369081 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265845963 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.692732721 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344724739 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416286334 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346875203 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.347496638 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.347318809 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498523819 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269599195 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354467986 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.351322091 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431117241 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608430752 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.989850333 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.342545597 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88463723 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032392643 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887828099 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353328744 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337513513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337732006 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27174815 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487067571 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.563146641 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61299328 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468961502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.754933991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361863954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.063478091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3628329 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551022558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612620703 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233721917 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349376366 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351569416 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.338889488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348883588 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.549975846 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804967057 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867399024 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451819589 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337349699 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77830567 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616086038 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340268206 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339552646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930333397 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.356257849 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.650974778 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.343897604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310014952 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488811611 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349006319 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99421226 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.351250163 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.498686896 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.113090612 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.127350284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595471832 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.760796529 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351466119 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88675759 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997287435 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60598894 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40723813 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351192971 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.456411761 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486971998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.337540442 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339151064 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340663648 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184397174 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.049314508 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350352847 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888916821 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606273352 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.338783486 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.338026221 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363770916 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.350865124 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564801656 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026589348 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567113237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350327411 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344707438 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.160698427 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891063119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355767854 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275328669 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.345914747 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569422328 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579249302 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363994522 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.794579589 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.053574458 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874661529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.314360856 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363541612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34609243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001278925 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891277626 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.996688704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812932299 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900918919 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347729964 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61804454 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.347507632 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342454462 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634169073 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345715296 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343738385 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356737537 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.888893439 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065514021 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.360964028 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.134972051 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.28094849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684189991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956975926 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281463267 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346215744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.51785434 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34609178 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474560497 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355133926 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.348304486 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344845051 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.078775228 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614799077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.348756513 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.338400549 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.099442081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347337948 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36508644 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566369257 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351495658 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012540302 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.695461709 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598557316 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343961164 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.330685065 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.347887886 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344469247 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331179314 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.54375044 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.832405969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872493468 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.345758319 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.358197865 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349012202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.561349565 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556392154 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307343756 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372344301 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346170371 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361501139 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.2499737 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.846081716 seconds)
  done (took 1582.366783074 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344183028 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.383662962 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.354729123 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.411918831 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375286384 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481343315 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.358882782 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445634258 seconds)
  done (took 52.440261073 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.345206599 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.567254521 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.37456943 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.352047436 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.353157176 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.343956898 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.761886798 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.347840972 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.352697057 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.354637916 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.346057158 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.344302921 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.938766013 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.355823441 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.348264321 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.345128124 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.353351894 seconds)
  done (took 65.47561848 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.351509348 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.642320824 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.427079123 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.366786257 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.078132706 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.354427987 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.669460036 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.406637096 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.359318012 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.441917731 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.000425586 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.36469221 seconds)
  done (took 83.749036712 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.354387013 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.354155308 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.354616507 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.354062304 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.354274815 seconds)
  done (took 8.057210212 seconds)
done (took 2007.344688281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.598281951 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004014535 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031132163 seconds)
  done (took 5.32143996 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.491707203 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.539759607 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.661282347 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.666665856 seconds)
  done (took 7.64458474 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.619997506 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.729698752 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.521966707 seconds)
  done (took 6.15516571 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.658413344 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.364433141 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.464457856 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.345289596 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.347236918 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.346500262 seconds)
  done (took 20.323872582 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.350336243 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.351695147 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349665069 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.352030452 seconds)
  done (took 6.688012665 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.330400679 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.09847951 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.331570202 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.345861003 seconds)
  done (took 18.390526708 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.09692777 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.109386839 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.093480443 seconds)
  done (took 7.584112198 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.354139215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.189210982 seconds)
  done (took 9.827867558 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.644660422 seconds)
  done (took 2.929628309 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.482931713 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.619720034 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.315877817 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.253572596 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.347886885 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.88156768 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.855797476 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.468705777 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.241818659 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.344744225 seconds)
  done (took 27.098692962 seconds)
done (took 125.335336769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.920259073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.590204796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.552110736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.931771237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.581171608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.552911624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.558153823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.900287773 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.401298209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.393003394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.894585488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.580167871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.717442784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.589562509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.716755324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.719297285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.576359608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.959973961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.573767649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.814668993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.554876479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.530828465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.7235901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.551511477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.576678309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.503581496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.124365318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.717938468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.747861154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.141549126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504006979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.984245557 seconds)
  done (took 189.472052526 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348496576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.347794173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.348736337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.360824602 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.34864524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361308556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.348984858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.359453759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.347929944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.36292962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.348307603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361014432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.362760408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.348459546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349639981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348882969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.348948336 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.348230334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361333747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348532154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.364172733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.36562554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.348981367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348629399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.349504369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.348880076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.34922289 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.349925968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.355128086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352475536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350337959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.350187498 seconds)
  done (took 204.583550844 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348928175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.349740132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.350829104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.350807331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349856483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.34977561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.352325614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.356602801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351914436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.350142983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.349649054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.349248566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.352330122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.351937924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349928598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349666045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.351288862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.349415236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.350966142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350800697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.352368475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.351315929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363554993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349601546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.349261991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.35126054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.363054069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.350404277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350727427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.353829892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.352318368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363266537 seconds)
  done (took 204.55743742 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554601956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.35874073 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.360513424 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.314604304 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.360740947 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.359118429 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.353802077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.555444893 seconds)
  done (took 14.50863305 seconds)
done (took 614.408186507 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.594074189 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.320821816 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.553653153 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.380131255 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.095537815 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378812595 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.378640575 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.538549768 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.251715613 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.54126294 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.58705268 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.376578663 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.697934893 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.376149517 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.611487735 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.470990953 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.193161272 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.302106227 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.676658885 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.880707181 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.623833565 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.764906335 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.537151879 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.249213596 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69974048 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.766314089 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.013691211 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.194576104 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.37785407 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.679557639 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.905771568 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.311668269 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.430477416 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.412757664 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.468615133 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.451403879 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.220939649 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.411740363 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.561246064 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.527349729 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.869465258 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.07207093 seconds)
  done (took 91.049986969 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.347886239 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.347671381 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.346752155 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.348193274 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.349506794 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.347474397 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.347122288 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.346994568 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.347891927 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.346151176 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.346735911 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.348784228 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.34789546 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.348656765 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.347355357 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.347315908 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.347817721 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.350617522 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.346625273 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.34724429 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.349152241 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34734165 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.348436699 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.348021204 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.349103792 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.348148453 seconds)
  done (took 36.337474204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360052582 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.584977484 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.75736205 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.367009618 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.359983376 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.364905553 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.432856321 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.362094286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.363598619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.364485353 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.509341253 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.365147727 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39608034 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.765369052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.363843224 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.36345237 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.362701437 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361416984 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.592756943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372085336 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.434883347 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363932286 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.43448457 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.372176342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.364662463 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363053803 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.36740503 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.851056677 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.364053765 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.512923615 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.077789528 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.432478903 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.804420293 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.770108987 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.07791287 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.366893345 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.36416059 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.516758998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365341682 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.36306315 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.434586617 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364408385 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.766410078 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.982073563 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.380752947 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.364464361 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.873605697 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.515574224 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.588909409 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371385938 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.787110669 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.3663184 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.36550575 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.365352417 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.588087888 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.371317284 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363380982 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.881824268 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.369985971 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.433623481 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.365684137 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.364475811 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.600976392 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.364773743 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.590635182 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.366208226 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.373185996 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.365134852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.77095109 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.368136495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.997424517 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.378215667 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.365042074 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.512692053 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.592294211 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.905175247 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.368135618 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.605881349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818773746 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.434919334 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.368751531 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.852930743 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.438915081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.368359894 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.36930225 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.368339229 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.367109339 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.411309957 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.434273627 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.92569668 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.991414386 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.895138512 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.439672066 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.37878142 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36754968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.883924959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.367692527 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.367287042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.768385812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.000311356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.380787964 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.374480191 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.985580711 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.384008777 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.438319265 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.372471346 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.7836161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.369472504 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.412414079 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.368342428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.374333027 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.370234207 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.439155126 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.370403734 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.368912445 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.972000465 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.537948166 seconds)
  done (took 178.345579841 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.361140445 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.360124465 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.361682944 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.36177851 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.360447199 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.365347884 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.359981642 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.360990077 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.366314021 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.361472302 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.360090909 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.362064277 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.362981575 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.360958327 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.371234959 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.368912517 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.974023337 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.361862133 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.360594331 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.361678249 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.143942621 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.364121208 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.3615294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.361025711 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.361433174 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.362632877 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.365355296 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.36455287 seconds)
  done (took 152.849416432 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.369799843 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.886533126 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.370006369 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.490177287 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.38830624 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.366975973 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.487276002 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.422178807 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.371856908 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.368471116 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.36904147 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.647285557 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.37171208 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.84878147 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.544199569 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.492552485 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.848699927 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.372371927 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.368605525 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.368320214 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.491412712 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.37618775 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.647629185 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.887805522 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.371294765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.888890663 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359611391 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.370810568 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.368578369 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.890994789 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.370024359 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.649994119 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.441512358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.424462294 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.891196022 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.84526114 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.84485395 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.50442193 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.369739242 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.368619626 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.369248392 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.359104404 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.892237226 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.372445044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37171142 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.888147425 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.386182793 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.372572566 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379937427 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.370816997 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.424886722 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.425903831 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.652386437 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.898255283 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.442700444 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392087904 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.491028387 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.734900505 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.373235928 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.843975928 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.35897805 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.898572936 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.374560108 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.35966427 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.372545683 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.376803607 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.510086474 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.492339045 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.845027818 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.371793235 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.844589975 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.51002996 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.371653743 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.371348608 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.374108395 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.896976687 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.846087422 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.512004817 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.496532494 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.549554425 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.362122871 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.37113684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.361318566 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.443349836 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.373095046 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.900274884 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.847775452 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.374459514 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.37498049 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.374933593 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.374965524 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.534702223 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.899669177 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.443944836 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.839620663 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.668738767 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65489292 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.375992208 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.428671484 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.373391052 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.656790681 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.376496626 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.426299375 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.797254422 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.656713542 seconds)
  done (took 161.887878373 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.598678928 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.508131641 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.458443361 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.478307862 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.885122503 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.925071813 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.524268705 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.489502584 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.47487228 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.60619505 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.473774714 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.466495196 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.547638918 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.463426699 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.050834801 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.440480489 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.460757765 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.490787562 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.476001799 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.348737649 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.972357685 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.646382331 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.532288657 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.463881557 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.462026545 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.089913811 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.898070043 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.866201188 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.530849923 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.572786989 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.857785341 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.458902236 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.270106618 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.003106774 seconds)
  done (took 65.099735332 seconds)
done (took 686.860946342 seconds)
SAVING RESULT...
DONE!
