cset: moving following pidspec: 10659
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342322574 seconds)
loading group "string"... done (took 0.48728424 seconds)
loading group "linalg"... done (took 7.871555456 seconds)
loading group "parallel"... done (took 0.177448844 seconds)
loading group "find"... done (took 1.204240205 seconds)
loading group "tuple"... done (took 2.173555074 seconds)
loading group "dates"... done (took 1.367455445 seconds)
loading group "micro"... done (took 0.253341389 seconds)
loading group "io"... done (took 0.683441362 seconds)
loading group "scalar"... done (took 42.804113838 seconds)
loading group "sparse"... done (took 13.306245788 seconds)
loading group "broadcast"... done (took 1.151413383 seconds)
loading group "union"... done (took 14.701221547 seconds)
loading group "simd"... done (took 5.2184713 seconds)
loading group "random"... done (took 10.441840044 seconds)
loading group "problem"... done (took 2.073956115 seconds)
loading group "array"... done (took 24.714338835 seconds)
loading group "misc"... done (took 1.52491609 seconds)
loading group "sort"... done (took 3.935802592 seconds)
loading group "collection"... done (took 20.459948132 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531397059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149178596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140246057 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.166678587 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237821908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161441868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16396744 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.102220389 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.625714359 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.195138895 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15812875 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.537441861 seconds)
done (took 5.923991465 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229547817 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096569372 seconds)
    (2/2) benchmarking "String"...
    done (took 0.110789232 seconds)
  done (took 0.887798828 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07997998 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149086909 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098179819 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080566913 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098043423 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098611966 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082620441 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096155647 seconds)
  done (took 1.385797949 seconds)
done (took 3.272124668 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764180505 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.294183476 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.209989889 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.519780086 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.185207505 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220624215 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689156216 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345331426 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.276110271 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104672356 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15209701 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395950018 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140890195 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688402181 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092408301 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.132154109 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181441221 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450415154 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084193202 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113948866 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120675578 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145186659 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132610524 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095451831 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191599891 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085758219 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.203317677 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111837906 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082546962 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.29445548 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.204536407 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69498934 seconds)
  done (took 11.121741773 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118209479 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141679203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101589806 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142915208 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140850297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102871385 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087333854 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100852967 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128200787 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183263544 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135216447 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.130426788 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098793435 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101967087 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106308785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251018388 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126697568 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124905911 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088548023 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10864397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126094883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11734345 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113255831 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112242907 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170403287 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211988449 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114733373 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129327275 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100738779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117656388 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145815932 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148147863 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097896834 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084065791 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179235519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128419262 seconds)
  done (took 5.307658016 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199961134 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126360445 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179831066 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170368737 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154462882 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165728662 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122392648 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25747253 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.141103443 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182192266 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149749381 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103680343 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101345873 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088832243 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099516585 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671902783 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170082768 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140272653 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121756952 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106277976 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.093114496 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369135371 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10720674 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082645736 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103458147 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071910209 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168577224 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1036355 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.20808043 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126699235 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103535722 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120505251 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214500242 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131563284 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12592422 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101231968 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134071516 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080282766 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206691081 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092452849 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101932601 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109214644 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14091592 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141685136 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101529636 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.101174332 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21608222 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083101717 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118335485 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.002904233 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112892331 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.185655629 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.109782353 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10000328 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.343678517 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10310418 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101896945 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080623075 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286786989 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139958837 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084249188 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099749962 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082965363 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.102487121 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389607516 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084152467 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.68439677 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085016523 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110814649 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086047683 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100494167 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108558925 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09087108 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119073 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082365762 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102546999 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083000091 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099684287 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102922436 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09648192 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099030206 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088403996 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100699946 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165255108 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082888412 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119381678 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130299433 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087436215 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098714046 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133506368 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090155948 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102455113 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122298915 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102985088 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111324514 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102705125 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130809985 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100729467 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188425677 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081480941 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130154375 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103184957 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08144577 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134239946 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114544528 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0851531 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106359791 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080813127 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099755389 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163704371 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083606815 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100721106 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086145255 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115495963 seconds)
  done (took 23.242590104 seconds)
done (took 40.351743213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.359136683 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106760069 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107780511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107951967 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105275166 seconds)
  done (took 1.537249614 seconds)
done (took 2.264296834 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296207514 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182213312 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098638975 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.176156788 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096645417 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184757908 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167587052 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116391131 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.192855019 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097805143 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.172661867 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079026721 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098654863 seconds)
  done (took 2.711467873 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097592696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119517235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085961466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116067128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07917805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116384392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113754498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105559385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114497358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087318434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097201278 seconds)
  done (took 1.85708535 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096052493 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118295186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085868404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114492878 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079684239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115078317 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095904869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121010228 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113769675 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088838125 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097386841 seconds)
  done (took 1.851215009 seconds)
done (took 7.139660847 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.097634243 seconds)
  done (took 0.813624005 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.050770993 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.097281246 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118595297 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160304114 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318842507 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207027949 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.564380238 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13351254 seconds)
  done (took 15.594999179 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.118680161 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.123009094 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10889605 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089354463 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107332341 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10390144 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086572378 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107039601 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086743153 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104949743 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103889483 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08604536 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105592519 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089200939 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104575577 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106845848 seconds)
  done (took 2.417953601 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123764363 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122285691 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110841964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113650019 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109192157 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090528088 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111572375 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108353816 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089631229 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108643402 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112168001 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09302366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108624802 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084165137 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11041047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.1125879 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106288667 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092549587 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111452913 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11154749 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094643014 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.1000458 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10812382 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093668318 seconds)
  done (took 3.35922278 seconds)
done (took 22.907994642 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164943841 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11421921 seconds)
  done (took 1.009989805 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103686543 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123693863 seconds)
  done (took 0.964253812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108497943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099714131 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140974374 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120313262 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084159937 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100973373 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137326197 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100631956 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082919092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101008276 seconds)
  done (took 1.816697697 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088401258 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.119267634 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.111069773 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.106246695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114580378 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105613001 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09948129 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10720218 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.122977129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085162932 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111075932 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120426515 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.111609625 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105790383 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.116655021 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.1093361 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.095063402 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107476482 seconds)
  done (took 2.673409935 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081211214 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.105335002 seconds)
  done (took 0.926562316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086470079 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101826517 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088619005 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104246907 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101755302 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083944766 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101414536 seconds)
  done (took 1.406003168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492376816 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141252536 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266684808 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088802445 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126966947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.318484277 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102627665 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108656167 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089084123 seconds)
  done (took 2.531671209 seconds)
done (took 12.067388577 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095730051 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.123042354 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.120945476 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.511759198 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.126123324 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083499666 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.166218733 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.262348561 seconds)
done (took 2.233322451 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153388905 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332127312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121245458 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069536337 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100145347 seconds)
  done (took 1.369024382 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081490624 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103835023 seconds)
  done (took 0.930677262 seconds)
done (took 3.194918419 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082248978 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.136705861 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083105438 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102378577 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081305603 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102695171 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.101405613 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081280629 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101297499 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083329603 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.101390125 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083907004 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10144176 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081646567 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098882171 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083214201 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098588035 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081739478 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097894402 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081826528 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102153854 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081175554 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098157685 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081171765 seconds)
  done (took 3.007886305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111932745 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101808415 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108342873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09121281 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106094319 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10686051 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091311981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101596886 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09009578 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102920879 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106505306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088238348 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104069028 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104986464 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086251431 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105723153 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089563935 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101757483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10399405 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087476396 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107153256 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08430161 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104930742 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106842021 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087501593 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105285064 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.105378775 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084022699 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107333803 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087758677 seconds)
  done (took 3.721770501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086670458 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098122899 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083107341 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106858532 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081798338 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104331551 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081071393 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099363628 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083370598 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099142981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083427405 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099015783 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.099667816 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083039729 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101822951 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085578725 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111887042 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081673267 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099487115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082723626 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103436332 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081825856 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.102708887 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081340206 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097931862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081666701 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098763313 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09924073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082126876 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099561505 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083976185 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103265876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081409215 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106588864 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085054037 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.100090915 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086230739 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099662368 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082689811 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098361487 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08201122 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098740753 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081882023 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105829011 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103244851 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083927567 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.099874622 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083326748 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100813728 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084710322 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098683332 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081675707 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101790348 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083620084 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10365592 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099147182 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082229972 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098770888 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083506206 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099648158 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081159143 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.099649278 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084135111 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.10091043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098404243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106297397 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082348345 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100580631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103789014 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083675759 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10133672 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096151444 seconds)
  done (took 7.455505323 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085232618 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110317326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084079159 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101991733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080353523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099680693 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103912996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082446259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102355976 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090448555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100227598 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101319305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083749933 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112000396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082517031 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101803312 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089404451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098134204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.100439158 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085939689 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100979886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085548028 seconds)
  done (took 2.840498603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22559394 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110358293 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147821094 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127780798 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101756604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116287604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107087177 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090862079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107054332 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105892948 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087350435 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107688815 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09230722 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104321406 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106203084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089110867 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107419708 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107098778 seconds)
  done (took 2.801900178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096423429 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10346295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125796677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084998845 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103950754 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087907422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108657115 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12462606 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087937056 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103174722 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113488738 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087368127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104757642 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085308965 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106342206 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103499554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087871574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102916008 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095120618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108271344 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108611582 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096526165 seconds)
  done (took 2.985497093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099911537 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10514492 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124062534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088100462 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09911174 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084300666 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109255054 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08508905 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111694201 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105611517 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085031795 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102007092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091483542 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103032562 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108630012 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085396406 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105727523 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085188202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104818868 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098914634 seconds)
  done (took 2.744955549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108324022 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105519208 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105553747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097542317 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104906468 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105835909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097104154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104562819 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10453656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114421343 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104816286 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105351666 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097909947 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111177281 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106341095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097262735 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.22583601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114873713 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105097896 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086882087 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131527297 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105888854 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096737405 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105190729 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105232893 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087512509 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104672451 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111741641 seconds)
  done (took 3.813748109 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083152604 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103249089 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082625158 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101865726 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082761209 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101750554 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082505275 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101427031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085686167 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100942693 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085951418 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103935457 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085946981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102720111 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084914051 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103610116 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088261544 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.101031739 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082970868 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100805318 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085217296 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103447294 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103453343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083105107 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101447967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08503279 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100841801 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08298642 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103500569 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082606495 seconds)
  done (took 3.561158539 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095047562 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110935791 seconds)
  done (took 0.973759393 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080592453 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120112515 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083032943 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10716811 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11029182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086700326 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112464534 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090830225 seconds)
  done (took 1.556778336 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102060031 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118982406 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087136216 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117575288 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.119757964 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101336552 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167259277 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106698485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091984934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102216226 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121152099 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084853281 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110126761 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086194888 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110522305 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092491899 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102095724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111494822 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088902892 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102986992 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088156572 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115086962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107006265 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082403865 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106524115 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098571749 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114307218 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106597931 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088844563 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11412004 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091824777 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097660863 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086343835 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106007052 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102242436 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0995301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116711925 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088852834 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113095955 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106171062 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115960224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099132906 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.111008205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095226313 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114974525 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087039648 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10570756 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080806111 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101360323 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107347959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081938688 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104250675 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08032451 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112050622 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090837283 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118168438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103049508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086997065 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107123849 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088946819 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110827885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087557037 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106628451 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104378891 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093675634 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108761328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094119661 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100302062 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080048519 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104048862 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114804525 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109866752 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112962832 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106053398 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087634787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102283168 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089914598 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106973326 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111770714 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095959533 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.106323461 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112693779 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112001648 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105131045 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088899349 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114070567 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084642384 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10737883 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102050874 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102152593 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103934416 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085287597 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102420292 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095411711 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108753516 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105133454 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083542393 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112252307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080532029 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105301357 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087579958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105165899 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114039924 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092926574 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111601886 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112456466 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09647516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105409782 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08935361 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101724347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088554015 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106534148 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111600063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080121796 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107515192 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088920764 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1055511 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094285787 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102947887 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104912294 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094130594 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111550054 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085142382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101339798 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089767961 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105218826 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109698799 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094491544 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104307988 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082511835 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100757876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090816217 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10601588 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110001845 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092729015 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108312984 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.081631845 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103533899 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110659449 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094855643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104996926 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086540928 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109627997 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105655361 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086342975 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110750184 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088931156 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104856345 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091624764 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107353217 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082044342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110883572 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108042033 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085656491 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108559462 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092347321 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108146107 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107490476 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085544374 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111826871 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088978178 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104282595 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087386147 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104537594 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116271128 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089109792 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100779209 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083718161 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113283699 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084230835 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104810346 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104692111 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088497674 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107513252 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085545173 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10436861 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087911495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.138031182 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110393337 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088879088 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111937185 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116040774 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08673937 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106799961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087256927 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107231509 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087980875 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11310478 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111876344 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093719935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108253205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083435892 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112199287 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114099308 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08616706 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103893426 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085462009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111079868 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093994201 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110153724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107635521 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085939293 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105893222 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0917349 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108506567 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105404832 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086081109 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111096013 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086908038 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113793303 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107874958 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097121112 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109595113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083591159 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111445675 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085647484 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112775789 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.10232379 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084480712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104884948 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089451532 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104961393 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090386411 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099851288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094924964 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115463624 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106507513 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08632071 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106939124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096269572 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108140166 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109530612 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090337272 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111626341 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100356418 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105060464 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09012737 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116736959 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106605625 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081450142 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112239521 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086188234 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105593151 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086003675 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104903304 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109711341 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097480136 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111669337 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081471508 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108778701 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10442606 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086787226 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102454551 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095248654 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10942436 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089309392 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11547218 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108338825 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088486481 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110753471 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087365645 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108168611 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107984664 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090204429 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108175133 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089676167 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105609751 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089496932 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10577527 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085927595 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10830143 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107458594 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087491322 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112102529 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089812739 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107721805 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089446014 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107711483 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108067426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08827932 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105834148 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090761867 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107617593 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087397795 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109293348 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08279901 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114191624 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106535563 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096399997 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106126952 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083832493 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113384177 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108712226 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094385028 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107574037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08899835 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108718651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087347048 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109755089 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115194305 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085877454 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11605328 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094230679 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106812403 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110126611 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088373081 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107570568 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087263027 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108750293 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089603805 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106725954 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086974168 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112780805 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109121808 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087642938 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108896298 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089187269 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107268893 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089665114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100324219 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105744675 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087705232 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107421001 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095310827 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108671685 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091527972 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106314532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109792915 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086992372 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103761088 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097765441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117968187 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107983009 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096387275 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106220124 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090077878 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11646598 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101290123 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086769558 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104836747 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08531716 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115342864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088885944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115295122 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087829352 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108224474 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.105069963 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089513471 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105875455 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.083012259 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105948415 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091474744 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.110134298 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086626147 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.1081394 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.118493129 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09006141 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114346029 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087961623 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109572947 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088124138 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105430986 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105371421 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086302445 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109964452 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089121477 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10514275 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08538914 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107396152 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090014222 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108210215 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106842485 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089652131 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113766963 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088285744 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110243839 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092616023 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102332553 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109694539 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087680302 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107279717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086847534 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110873263 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091517675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109309208 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114684748 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088373923 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107190135 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088857604 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105256084 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088175357 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.108064668 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107749882 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087969477 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109783676 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097902227 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106578773 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090532753 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107047385 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106940506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092636708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108384892 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090926511 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116754996 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091021289 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109279928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113990485 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092779806 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110780077 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090014996 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109458436 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11368646 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087184493 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11585151 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087838802 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109134466 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089918938 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.105794491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107988039 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087867056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106597829 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092900291 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.109108275 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087375619 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106618697 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085565461 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110253057 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112480651 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096835675 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110324872 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091178866 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10213466 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104583781 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09008225 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10539865 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089971035 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109683444 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094569232 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109390296 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088810902 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107291835 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115330986 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095803253 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114116181 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087179088 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113381099 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.110123271 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091030653 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110156303 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089871085 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11013252 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094364495 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110457251 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107816475 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097913238 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112930989 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090453232 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110984233 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088575764 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109341195 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103102495 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090270969 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110589375 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095553407 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110397608 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087789397 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117815368 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107870727 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089670883 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113435229 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088220767 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115723921 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103737355 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089187659 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110261533 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090118207 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.104003639 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087446531 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105244544 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09112037 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108193831 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103535098 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098509459 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115653343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090868204 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106816527 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087733189 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104307294 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103311074 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088534894 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110205821 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09107218 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118178143 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088215314 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107819156 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083751375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108717078 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112748112 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092112457 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105712079 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083831647 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.107551922 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091664484 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115913586 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10661397 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089019046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1117097 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091305329 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106063362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092980416 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104799286 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112652113 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099633552 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109720952 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08948751 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114040774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117174362 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089932429 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104108846 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09048339 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110206101 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088848499 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111257689 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110536099 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103799799 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111961929 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087442634 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107627704 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091904603 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108739608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115405854 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090399442 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109663317 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093819522 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110274792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118203902 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092099509 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115328292 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091235252 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111085052 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107463827 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089072407 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107055437 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087772727 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109949241 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08997319 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114335034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117803546 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088266909 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119902483 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097427159 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114642998 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104446437 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088112685 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107859407 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084253068 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109989533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087517473 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107280662 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087402201 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10910877 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088838841 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115522938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111588597 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091020836 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109041371 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083289574 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111271601 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092032604 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110542709 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085458163 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109645914 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110795322 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095659603 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116816686 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090952348 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111548914 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111384877 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0908442 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104522876 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096082758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107584587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091721892 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107911149 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090025543 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110750527 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112622996 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097011313 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110728204 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091480953 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.122667308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11218522 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086403936 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.106782277 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095466162 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107413781 seconds)
  done (took 61.029418755 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150664824 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095442074 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104974148 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084550054 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122383875 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106173864 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085297532 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105864944 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086506366 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112135447 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08440642 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105169646 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117742434 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132379681 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102748521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114270994 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104537352 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086171761 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104307148 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085772715 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118559075 seconds)
  done (took 3.024623257 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107142411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122567072 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121036561 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126421743 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095081224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121237389 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122458953 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122163849 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105321842 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117184781 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125357057 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122979834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097393054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116755488 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117412981 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099682727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125879155 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115243794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12233338 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101011162 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1204434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121206296 seconds)
  done (took 3.362674025 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.100069265 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107959994 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09324985 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104388994 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089272602 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103974236 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093689828 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106703321 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112627514 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.088661368 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.108332997 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.087900672 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113723557 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084833738 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108431308 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086304047 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.161169376 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.115022716 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.110040286 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090373762 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.104894886 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092359186 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10472817 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085013398 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107796876 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.126757221 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090232241 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.107376979 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089281534 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.108370772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089959998 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.106412794 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090368093 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109619902 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087232612 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10888916 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087949571 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.11042784 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.105108683 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086629863 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109865783 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08486064 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110337566 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090234287 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.107135491 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08661314 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.110620644 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088925102 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.104456656 seconds)
  done (took 5.776784802 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108954015 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170150091 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091324166 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150618449 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128718389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120161585 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093099238 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127599063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108966099 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08898925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131116899 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128476702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110820144 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095363653 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114952668 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109626622 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092390061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109415416 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115603522 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090354861 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11563259 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.117013146 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107589029 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125119832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115626779 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088588616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11157717 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115324916 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123887505 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.096328204 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116255484 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116824853 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.107721818 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115801686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108693483 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.093656892 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128472622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110627589 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093153052 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10841713 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112742523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096307786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117379706 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128792717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090526525 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115373069 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109608745 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087439162 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124860533 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11363386 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098853314 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126719743 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115273557 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111108685 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095748971 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127573109 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110381999 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089241111 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11435576 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124434009 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08748761 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115248093 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125564299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092243977 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120290756 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126503537 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114777974 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09435896 seconds)
  done (took 8.579073432 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096392593 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113494847 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128755314 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128559062 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098054834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117604171 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118074593 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117248422 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097879115 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123336264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117859816 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.146576531 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091667121 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121747221 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11868067 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097063382 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11786784 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11791965 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118218467 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097162053 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117833955 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127763569 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118229142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10692436 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149799018 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113021628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117207531 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096870601 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128703215 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118379405 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131397091 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118310373 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097888031 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12936065 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131386221 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118143766 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089363481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11824439 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118064547 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097879226 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112325991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128547198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118491426 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.092355252 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118355561 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118089429 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107223839 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.131745477 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122846631 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125337699 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.118109863 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107608444 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118008501 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118744297 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129453777 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.155321329 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130141382 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107808629 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118734717 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128210745 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129135506 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137875879 seconds)
  done (took 8.135539455 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117966591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.125926516 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.132446491 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106851252 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088847532 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118753643 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088273377 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109329137 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.124441347 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103443885 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126988485 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.119108239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122515974 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106425922 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11973781 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122366089 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119759755 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098380957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12474495 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119015215 seconds)
  done (took 3.127587053 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096717206 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.13073986 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.09158426 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120045896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115781755 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097181223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11473686 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114874905 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091577263 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114400623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1235257 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104199509 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1137841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.120107082 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102562706 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119142105 seconds)
  done (took 2.603494808 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100547052 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12411796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131697581 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090107976 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110895885 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107753289 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090717759 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107942004 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086925012 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128280812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112878298 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095217507 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112145302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08901409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108491361 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094507134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108627444 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10933906 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09098131 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132529841 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123253432 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090113766 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113254702 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092955009 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111621525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117439453 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091657544 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.1102991 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08839077 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112863721 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111818559 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099614688 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109486448 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089535451 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110944639 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109719371 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092163261 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112312844 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.094423844 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112534975 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088911701 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112012074 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.112325654 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.093734467 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108771717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091437249 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108639458 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118143585 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089467932 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110790907 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09028019 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11398438 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112622385 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102382474 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116441009 seconds)
  done (took 6.632990834 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102674273 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115401145 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085908087 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1104262 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093748314 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115117954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116321287 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094020568 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113956 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08905348 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114888327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116347727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092752564 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115888864 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094044243 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116085537 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085443292 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114342514 seconds)
  done (took 2.724755955 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09379703 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111157759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098953603 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112244852 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091408828 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115591823 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108063526 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09080484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11046806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091755805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111519347 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093881333 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11170175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093611753 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112956905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112627471 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.09382496 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111038668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091610233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107840187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093444243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111805873 seconds)
  done (took 3.110924326 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125423379 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132244764 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.098843526 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.248408318 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.110980392 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.14040241 seconds)
  done (took 1.697913183 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112306794 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128716074 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112972782 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114102903 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123025466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115144478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093939242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115338891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126459147 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129072418 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09448938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125536243 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126052027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125435405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101375978 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122286763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114967015 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094554777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114319447 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136673199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116040263 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105474938 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11503164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114218388 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094222914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125554671 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126682205 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130819652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093012814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126288542 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122180724 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114710843 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104963577 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130639397 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117075386 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127190066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094890753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137181631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12222611 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125972046 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09469965 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123057158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126078724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121487337 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10491968 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115959414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120590475 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093838457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11575988 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145808066 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122417095 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125908164 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101688196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126765159 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126556405 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143919785 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131802874 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125597103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100586147 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131242875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125440993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123231403 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125535662 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131235719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101934393 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12512716 seconds)
  done (took 8.647883733 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106247542 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133560182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11556651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131633521 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104315644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116308609 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115736526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094386733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115916202 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113902225 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162319351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095087159 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126858445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126191647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116281387 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094477816 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115408755 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125307014 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093385143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14347148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115516388 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12519964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126414593 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126932415 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1105785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122887728 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116168731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093606018 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117566443 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115023578 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122388575 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095334842 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125966794 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114752951 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104400855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115978243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115368372 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122741159 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095048396 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12396448 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126505817 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136742659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094223949 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115814309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131021652 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115586542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095270009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115135093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094910045 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114996515 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13195533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131674894 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130039727 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104985028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117447181 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116643917 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093957888 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116753406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116814087 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123860656 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104834295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116373318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144814908 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117064929 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094946299 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12728212 seconds)
  done (took 8.531978626 seconds)
done (took 163.19424945 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104353166 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.146888397 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104947252 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176443049 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109781724 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.124565498 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141228179 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.103032011 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.114511162 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092356312 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114660511 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.115423513 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.157737546 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107901247 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091379941 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115220342 seconds)
  done (took 2.766775178 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206102453 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283183646 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108892114 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114145589 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.119376953 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092746765 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111564182 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101099517 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.115671391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.091268614 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.113882705 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092303326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113322906 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091538502 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116784783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.113829537 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092221591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.115046047 seconds)
  done (took 3.045022351 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11618124 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155236141 seconds)
  done (took 1.124528651 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122142313 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192244833 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311832951 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163479273 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126866594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137255668 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164570941 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140692566 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.221959782 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133349274 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132825975 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126024252 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.129432084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124180066 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.12312129 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.105105807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152082011 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121481268 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101156135 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125594153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147066862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092085127 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.124333934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121371246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.205048317 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.107274363 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11395068 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090727401 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126126994 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.123237916 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099416444 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135384557 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128738328 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183823603 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.133318978 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170080287 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127918138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119823247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.102815114 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120957621 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127353449 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106202559 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134790362 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.125957976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.094362364 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126944905 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0917449 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113785355 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121655105 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106444282 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122688589 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120067052 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168645925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127764529 seconds)
  done (took 8.067590206 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.842616433 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164009456 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120199332 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.925695476 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148045241 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133214521 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.820015055 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143830284 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244722122 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.813517196 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133068847 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101231026 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242920939 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.270671566 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.936420697 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295772733 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72334971 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104335272 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149159153 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165774322 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125361452 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144663311 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116029024 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441077523 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119566864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119015524 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102052168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128382786 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171830618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.120225924 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098955096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212133513 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259729528 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211777753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098964918 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118531589 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117674809 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182291421 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284419524 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20731498 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.209555267 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093819219 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117552883 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106283146 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138849438 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114436582 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175886924 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185693719 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.205765534 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098692962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129094912 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126939191 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10608516 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.198131724 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10794645 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326344626 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330672029 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119829174 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126449303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112524069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279413111 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.133271924 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241345296 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121776593 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227733772 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118536906 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81851162 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182243293 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095820848 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126294953 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125100723 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101434977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127910875 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176832975 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403001462 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130920802 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098020751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118933935 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24958545 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097743841 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118157905 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174030891 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122780081 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104689702 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131854146 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129490998 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.181748869 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.240084193 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131651914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126916155 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098877439 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131348874 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121568236 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222215655 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235359653 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175094834 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220351538 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128701955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197366566 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1804689 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127558323 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184668392 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124730821 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111349781 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129530486 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233263733 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155395812 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.13165273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100530474 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125570091 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157236939 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099016513 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126282043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180723353 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494827087 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180349888 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115947911 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10061669 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127559711 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173070805 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126548643 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274287095 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104848769 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.202665218 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103181741 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.116479407 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125640687 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175945629 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130189917 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104640743 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129935813 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125283437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248497841 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232948858 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130212717 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231646292 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191795681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126991897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185192387 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127233738 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180019347 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127848943 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127326668 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10093473 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814214626 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124556652 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103078948 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124085808 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198390317 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115709973 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110389413 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120642551 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092642096 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787811376 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121760769 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108134461 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.133569858 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126354339 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103692484 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125126141 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123647972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175998369 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247193136 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128449624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102691778 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120251737 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.172289698 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123622518 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.097644729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120712163 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09654839 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128147949 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.1228619 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1110497 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205586962 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176146821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.237403263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574186606 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098543134 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119739718 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244977884 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096903332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306511866 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126476689 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240079957 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176560354 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.129370183 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331516282 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.177899077 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198547875 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099455196 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.207435278 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093729789 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126218587 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178609075 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120501976 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124250031 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174313764 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132586192 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108518473 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.983824401 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113466081 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236983656 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094088867 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.205963492 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100500656 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129402206 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307433391 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120225306 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114021922 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.200424625 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09911487 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120942451 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716217327 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116819176 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126753246 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103859723 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237074955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.198394619 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105789507 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126374608 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128986822 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176074412 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.220208238 seconds)
  done (took 45.982914913 seconds)
done (took 61.839637621 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310174779 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225246002 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269708876 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172809358 seconds)
  done (took 1.937307108 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183994057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160638067 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131333857 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115880997 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16223228 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091317642 seconds)
  done (took 1.728699697 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.398891087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284335271 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.249728539 seconds)
  done (took 1.822215344 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262610143 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279635992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34208445 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.428723153 seconds)
  done (took 2.29791239 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294399168 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.155379162 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.145407306 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.178331178 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.216911349 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.30792368 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.178093469 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.259289589 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.169503576 seconds)
  done (took 2.833077018 seconds)
done (took 11.508599005 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.316992327 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.184341498 seconds)
    (3/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.265077409 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14871092 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.267249114 seconds)
    (6/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1839556 seconds)
    (7/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100444758 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191944471 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.126109966 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113476919 seconds)
    (11/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.137921235 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.131480841 seconds)
    (13/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160283811 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125362527 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.189850113 seconds)
    (16/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.259104686 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151175981 seconds)
    (18/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.147153147 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093968754 seconds)
    (20/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.132642397 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.207552555 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.176832926 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103156041 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.125052103 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196306317 seconds)
    (26/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.093749362 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.157305657 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.137477649 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093111704 seconds)
    (30/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.2115242 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.211646084 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.240955797 seconds)
    (33/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105416658 seconds)
    (34/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119804228 seconds)
    (35/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.233073584 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21002322 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10290245 seconds)
    (38/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117578757 seconds)
    (39/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182876145 seconds)
    (40/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.238870594 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.228555526 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.143648988 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09679565 seconds)
    (44/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.085114122 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134107167 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.109319927 seconds)
    (47/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.20068517 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148329673 seconds)
    (49/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.257713118 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083384484 seconds)
    (51/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.165327086 seconds)
    (52/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.177572379 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.101303875 seconds)
    (54/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.135048611 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117592499 seconds)
    (56/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184675178 seconds)
    (57/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159180279 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.104106316 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.122394625 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134743669 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.13055146 seconds)
    (62/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.135681818 seconds)
    (63/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.10624574 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120054839 seconds)
    (65/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.142277442 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.180208791 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.14360574 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.188599786 seconds)
    (69/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.207144596 seconds)
    (70/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.170332212 seconds)
    (71/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.130327278 seconds)
    (72/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158364356 seconds)
    (73/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.133115311 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097521932 seconds)
    (75/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.204347934 seconds)
    (76/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.096677284 seconds)
    (77/286) benchmarking ("sort", Float32, false)...
    done (took 0.16474564 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140408145 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.165271971 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121089382 seconds)
    (81/286) benchmarking ("sort", Float64, false)...
    done (took 0.186776529 seconds)
    (82/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.153721346 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.0934387 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.143810901 seconds)
    (85/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.073373056 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181181688 seconds)
    (87/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.127652254 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.102203725 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096578964 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.124605356 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124402973 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094116821 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.21271797 seconds)
    (94/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140574217 seconds)
    (95/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.082579133 seconds)
    (96/286) benchmarking ("sort", Int8, false)...
    done (took 0.205389138 seconds)
    (97/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.097614468 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.076907288 seconds)
    (99/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124007629 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121098945 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130238662 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126697989 seconds)
    (103/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082149546 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.191742076 seconds)
    (105/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077357529 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.18169044 seconds)
    (107/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10934204 seconds)
    (108/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.097170133 seconds)
    (109/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.236677582 seconds)
    (110/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.16290518 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.176998002 seconds)
    (112/286) benchmarking ("sort", Int8, true)...
    done (took 0.239821417 seconds)
    (113/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.097458956 seconds)
    (114/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.170958361 seconds)
    (115/286) benchmarking ("sort", Bool, false)...
    done (took 0.19708076 seconds)
    (116/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.129489798 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121555419 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102889675 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125835672 seconds)
    (120/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072624974 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19468114 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.101542554 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125645 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.147801176 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.073955612 seconds)
    (126/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21256612 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102441528 seconds)
    (128/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120953106 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.16699079 seconds)
    (130/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249375428 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073556409 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093042987 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125680617 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119333083 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093071998 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.118337719 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10196439 seconds)
    (138/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.104954564 seconds)
    (139/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.074269938 seconds)
    (140/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137617349 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119525816 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073513754 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118255823 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093672247 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119135906 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073199884 seconds)
    (147/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096928627 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.10439489 seconds)
    (149/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.123425417 seconds)
    (150/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07534771 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196850148 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094657146 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.127191332 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072762524 seconds)
    (155/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.097562784 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.124525021 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.172130375 seconds)
    (158/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164670706 seconds)
    (159/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.130561772 seconds)
    (160/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.133408848 seconds)
    (161/286) benchmarking ("sort", BigInt, false)...
    done (took 0.234327672 seconds)
    (162/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.143989963 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.126345393 seconds)
    (164/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095875392 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09721919 seconds)
    (166/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.131695688 seconds)
    (167/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122554297 seconds)
    (168/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075467784 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.182285661 seconds)
    (170/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.132056941 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.127416904 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.106039836 seconds)
    (173/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.099404039 seconds)
    (174/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.074217408 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.126149017 seconds)
    (176/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.108240353 seconds)
    (177/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134562202 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.104461927 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119327389 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072772107 seconds)
    (181/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127219468 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073937615 seconds)
    (183/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108056598 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.125051896 seconds)
    (185/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134428993 seconds)
    (186/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099410223 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125239709 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095353592 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.264681617 seconds)
    (190/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096436292 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11734414 seconds)
    (192/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090332226 seconds)
    (193/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074362946 seconds)
    (194/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.109358523 seconds)
    (195/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.073811304 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128548186 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121666389 seconds)
    (198/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.129073376 seconds)
    (199/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074731942 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128281226 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.103677739 seconds)
    (202/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.099212366 seconds)
    (203/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101979077 seconds)
    (204/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073315066 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119028979 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118274806 seconds)
    (207/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073919992 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.100650779 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.194909319 seconds)
    (210/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117990332 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111110835 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120256818 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094939836 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119776676 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093262298 seconds)
    (216/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09910742 seconds)
    (217/286) benchmarking ("sort", Float32, true)...
    done (took 0.469941609 seconds)
    (218/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.100336514 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120450257 seconds)
    (220/286) benchmarking ("sort", Float64, true)...
    done (took 0.248237751 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.195443252 seconds)
    (222/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.104703502 seconds)
    (223/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.098108418 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.107085705 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.196913154 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174683062 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.121915635 seconds)
    (228/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098709821 seconds)
    (229/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099277977 seconds)
    (230/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098035042 seconds)
    (231/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09548121 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.119425296 seconds)
    (233/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096584822 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145123161 seconds)
    (235/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103192471 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124321196 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099824628 seconds)
    (238/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.098432471 seconds)
    (239/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094538499 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121942749 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14321724 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.140538937 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129748655 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073977877 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073366746 seconds)
    (246/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11999602 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093696508 seconds)
    (248/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100214611 seconds)
    (249/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094716325 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099198696 seconds)
    (251/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159927186 seconds)
    (252/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.109024084 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074871783 seconds)
    (254/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099802514 seconds)
    (255/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.073370255 seconds)
    (256/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.083254978 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.134281422 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101860118 seconds)
    (259/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09851635 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093576291 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121600631 seconds)
    (262/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07464984 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.120535516 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103512517 seconds)
    (265/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.108524468 seconds)
    (266/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10194259 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.117501948 seconds)
    (268/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073983252 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127188108 seconds)
    (270/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084309283 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.10008652 seconds)
    (272/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118876946 seconds)
    (273/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075682646 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119463122 seconds)
    (275/286) benchmarking ("sort", BigInt, true)...
    done (took 0.2512067 seconds)
    (276/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073952158 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.100139814 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.168428375 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.125985921 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093456793 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.126246435 seconds)
    (282/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100470496 seconds)
    (283/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.123134003 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073874045 seconds)
    (285/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.121646078 seconds)
    (286/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076028462 seconds)
  done (took 38.832108998 seconds)
done (took 39.72399187 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103301325 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160262691 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103621683 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.149667122 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132221596 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099786213 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.127674898 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.131899438 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.107873828 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.134437563 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.107566181 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101470393 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105245809 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130504338 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.129834978 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128107505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.133328485 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101938873 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.128458225 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11901513 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.103889407 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117985428 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.096251506 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.100733593 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106908955 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126392594 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.102860409 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.129219026 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093761316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.119403195 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100114295 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.126463032 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093592999 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.133753791 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.12591338 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.103448972 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.130107068 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.105479396 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.121437661 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09408516 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126793322 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093113792 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120097672 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.125292659 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09927125 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123303237 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100309712 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129162024 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145847831 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100340998 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.127294696 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.106064747 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.129755444 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100839067 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.124065548 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103490454 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.120723074 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153678241 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103432128 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124826193 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.103288506 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.127381955 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.099345109 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.127916499 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127157745 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106173131 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.129865615 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100136531 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129561374 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.099715799 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.120357394 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128123579 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09839843 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11816711 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.104190262 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.129487591 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.093566711 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.124477186 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102110217 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.124672506 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093692497 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121469238 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096050974 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125265802 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097201583 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101652593 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.098177697 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.125272466 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094138091 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128666884 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.125630272 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101209025 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121457633 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107139362 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119071516 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.100303558 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11865859 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095374133 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121056139 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098765828 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118855755 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098189973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12922811 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.097472747 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.12622467 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133797982 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094523684 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.125728974 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094620475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.119613003 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.111226291 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.129977396 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094201946 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125656002 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.093921639 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127749581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118693785 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094769051 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.120112416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095679406 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126437144 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095774956 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122629429 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.103408706 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133850776 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095200276 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.122452203 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098899706 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.119372633 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.100968014 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120366012 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094661021 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.121795938 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084942279 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122192575 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.095304386 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.127655631 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098117162 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.127056736 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121590177 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104806373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124476912 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.102077282 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124545365 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094087767 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.10614782 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102257145 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122854068 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097138135 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119445802 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097054604 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.1183566 seconds)
done (took 18.252206054 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088802303 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188834418 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157889331 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151799509 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116236642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.117955028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.13103042 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152982693 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09520916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.153193835 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145000606 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116203475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161045226 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094762485 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120660295 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100027351 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122795606 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136513038 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.135508242 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142361036 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.174492449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.116851873 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150986882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1151912 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125714697 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134077881 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090693008 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122851234 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096334934 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143291113 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112828773 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12008178 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089908158 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136542133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131389346 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097863575 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115371385 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097208019 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.115166449 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088782184 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143729496 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138476844 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121025032 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.098974933 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123431772 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.098740023 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121579151 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.10548289 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132243469 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.124909692 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112735491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.165843384 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121829925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125548852 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088803792 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126560581 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.100469097 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117857629 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090190771 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121175946 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.09061876 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121462099 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130218865 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144755455 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093274683 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128164029 seconds)
  done (took 9.03210992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108366203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147945549 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13886039 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115608914 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120867796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09610224 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.120947672 seconds)
  done (took 1.801887165 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0902478 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145637021 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124226269 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147579853 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.146485555 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.124080001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132566727 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096467793 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141642694 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123533252 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122445034 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164602213 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.124279471 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.105629188 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151118777 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.096693215 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.150373131 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121974706 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100804564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150130504 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100803976 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144992708 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.124801355 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096151933 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140995474 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097228866 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175791365 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129155404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098492347 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144556929 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095270562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163356338 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141773395 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.109237302 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123071194 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115795947 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141510437 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120339265 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.113710719 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.130574599 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.115950653 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.126080742 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098730346 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12320589 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101426052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.137391757 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126078299 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098474864 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125607806 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.122374386 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.123944998 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115711584 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.123652963 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.102021095 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12533888 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129954136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108146463 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.123921246 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122828924 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125111457 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117736346 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144259885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141080337 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117931995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126154172 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115449914 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.141970041 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.126042567 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099996504 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126446395 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118223537 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121045079 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.099063577 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.137269374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09838211 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.150909997 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.150672079 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098933906 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133858897 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096846759 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.124243457 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.123386047 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.125209604 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127187572 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098550957 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126615359 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101302894 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121561981 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095930163 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126584605 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095955637 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124595296 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.100661678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12439477 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126274405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117895848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123663414 seconds)
  done (took 12.847937776 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092643609 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117701923 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09710509 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.124489816 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098462616 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.124992226 seconds)
  done (took 1.62130875 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119517786 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12124238 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.136557747 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.102167097 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163260188 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136434921 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11785577 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133822999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14404061 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.112108774 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143700795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.118088924 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150875829 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130660817 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.117129696 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130863666 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143736467 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10886403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136467394 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131727634 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120345754 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131421004 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104846657 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.14558752 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127023374 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105391735 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136557867 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.138485205 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.111951864 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.133534377 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.13146573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103467924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131910841 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.106892279 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144567102 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.131122726 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104858529 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128551873 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136150279 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.102694354 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.145113462 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106028624 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137781011 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129301518 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107653769 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.132154084 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129644285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109880272 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144813897 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129451975 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.103827263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130513523 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102860185 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129246434 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131432285 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108266774 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129491483 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.118660991 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.132127845 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.131611416 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.10200106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129810644 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134952483 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.102817018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.141226131 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.102996356 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132710207 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132623245 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106735028 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.131729254 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.103484842 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.129211276 seconds)
  done (took 9.984098352 seconds)
done (took 36.233371254 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693194481 seconds)
  done (took 1.655900072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.840101657 seconds)
  done (took 1.805451491 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.749300346 seconds)
  done (took 17.744997455 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506294224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600929312 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.009754527 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175315184 seconds)
  done (took 3.256649429 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941941997 seconds)
  done (took 1.928806764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286228736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238572861 seconds)
  done (took 1.494143776 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773264607 seconds)
  done (took 1.75304143 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.449867803 seconds)
  done (took 2.423682169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336002527 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191641038 seconds)
  done (took 1.513997698 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.572153879 seconds)
  done (took 1.549554407 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.840097289 seconds)
  done (took 11.823833963 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273661682 seconds)
  done (took 1.269323604 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306080428 seconds)
  done (took 1.291680521 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.484962077 seconds)
  done (took 4.466640142 seconds)
done (took 54.953087468 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100816563 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128910263 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104832829 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126274134 seconds)
  done (took 1.436470898 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107800023 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130598925 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.112641444 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130491792 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.14056479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.104622526 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133036392 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.110557921 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130498498 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132169835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.105615565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12831536 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.106977597 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.13287621 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101297179 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133970856 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.135651364 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104427951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.135292358 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104605797 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12910621 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.134364215 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10920338 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129037464 seconds)
  done (took 3.908380033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102066013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122404749 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100767027 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.1279316 seconds)
  done (took 1.441901535 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102915771 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135609204 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109914857 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131320576 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141262701 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115316501 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127532849 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101079039 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129237219 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109145451 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126149035 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150796881 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116076196 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.135741436 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111685728 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.124816833 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.125871993 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.116091974 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134692147 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110385905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128587294 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108140399 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.126420862 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.143975886 seconds)
  done (took 3.951019361 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173584779 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128965149 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141114996 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099460288 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169195143 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149023452 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095198369 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1518483 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.096870259 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.139938079 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127517633 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.144313245 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.139989969 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.096996655 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124644326 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.124729155 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.11144347 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.138580204 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100497558 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137767849 seconds)
  done (took 3.580324993 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099965284 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123886338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09712262 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.127017197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108585908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.131831946 seconds)
  done (took 1.681554256 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098675563 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119693295 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098498047 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.123326879 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099489539 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118404962 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092086412 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117148121 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091710901 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118629399 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095414985 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121022719 seconds)
  done (took 2.288002354 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.516475842 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.130470853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122380942 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091200254 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12971592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094013044 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135477036 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097046811 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14692945 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.093712362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119038654 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.124785552 seconds)
  done (took 2.794230893 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250344001 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134896515 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295192963 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.407738838 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191676924 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17994636 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.315772482 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168963156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.240889935 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178133542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23697232 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184990573 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160781411 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226011335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152848931 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.130469019 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231228672 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324871081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164539677 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234472833 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182369602 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18115041 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19220623 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16484779 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150322613 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210868755 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.130912651 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113957584 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224930203 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189676601 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202002543 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174435563 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174257969 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247128058 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306040366 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207083339 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301300081 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146336642 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.154357029 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175791043 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283852037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154125932 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251863734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146952246 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142523498 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250175047 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172589004 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213401883 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158253634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126465212 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245884242 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20880693 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.258731861 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150547338 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323258528 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162827292 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.187000841 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204124636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266909865 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217861765 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235266488 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103933044 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230986711 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211503144 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203079829 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.180888557 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206904447 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156056335 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19162278 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239745585 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202974374 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185389142 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224850168 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121095709 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181559983 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186821974 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21164782 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248160852 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226167616 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10568581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181568794 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161363982 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143756662 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.208802794 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108785234 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264410776 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155680065 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.176895078 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226029847 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17185731 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173648498 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201791751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189100334 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16095447 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.121498888 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166014262 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.140076116 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184776565 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151431571 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171357993 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163631113 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.143361171 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183108387 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106560921 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22769158 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.101504669 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179962979 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226578978 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111472299 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179030209 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164621181 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163222016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208086431 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211618207 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15289987 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145347916 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223949751 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221818241 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125490421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189524623 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.249613262 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.156864977 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133294857 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239700282 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252126475 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121990206 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239695819 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158599172 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118527994 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143159238 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193825593 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169643677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17661966 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14508838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196240171 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242910393 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109237801 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150153794 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215016035 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145218205 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144088379 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158916129 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158994836 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121091694 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154668689 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15754239 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189950049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191616407 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167918908 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179841736 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159489051 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25495882 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151792677 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135091907 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160210697 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132092291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.231482933 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21127533 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143241618 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238615935 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174577056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203775463 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171836275 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140938399 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185806037 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135097247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099537189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230199233 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176857779 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175409274 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209790308 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239135459 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205988165 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.196780807 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177242058 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179762536 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17302226 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159608998 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148059696 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17135919 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17167489 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10555019 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.151731019 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.146738278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162801602 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153419349 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116991319 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234346046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179494722 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196676073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162267643 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154034567 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186276063 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132888779 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17964166 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180968322 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150627317 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229082044 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198339766 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192368336 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147705781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232882917 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095419951 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128876287 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146114297 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171644072 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110337283 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139706358 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167218247 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186675018 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180265376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202001396 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212171039 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192433411 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229102202 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097451183 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171545361 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181983314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181885427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184224314 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144918246 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158834494 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18368791 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151975772 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217531988 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17059496 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178810759 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232594238 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153840232 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108119071 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153935601 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175137436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159371776 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176653085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149691735 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140949038 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156821937 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105973956 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192149685 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184037576 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165820964 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183804876 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153620902 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191924015 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130588887 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166389938 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165753859 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167125333 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083084908 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198880565 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198994046 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147381173 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163223091 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187643498 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135242861 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314044772 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204747153 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221017876 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112425969 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160113562 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166607024 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166333157 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169135458 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181829528 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163321425 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219665776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133611448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1406166 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140737002 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151260884 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128345416 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13682884 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149361472 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179538554 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142396472 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186497216 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150981389 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162951394 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176595681 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154953038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147016257 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125865372 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251153653 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186469653 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222005045 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125749623 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206574034 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20802702 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129126826 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107722377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136583768 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183061815 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138764162 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198121094 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191958032 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231603598 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186006916 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175920461 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142933169 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122868934 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162352032 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172651449 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208288105 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149145802 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.155551023 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202729487 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141048641 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134678723 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168980785 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290964133 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14899023 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191769227 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081925141 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286243536 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125910433 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136092255 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165361944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188071925 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138538843 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156644597 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170400005 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155310026 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167560023 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153525562 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222600043 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216653343 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232957521 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187654181 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.108215183 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161511129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171373934 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217331543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160360809 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113792406 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189307831 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228519062 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198442275 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145554326 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172369915 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171463038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162514761 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220374668 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111286833 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237626177 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110694185 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225120594 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157356323 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141793171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177593069 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191848346 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144393663 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189116156 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187528685 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139076378 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135650654 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166016435 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184301756 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153023779 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1031376 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210073745 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099127008 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230270258 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269350481 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109783105 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158360842 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149365326 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137374071 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157126272 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161522151 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113168582 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168215106 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199269789 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140226399 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187016385 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235878997 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174330985 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169953674 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148857868 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.756117822 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.142338178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200797369 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150291196 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18683858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154061531 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176286919 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162373062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170270981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197891826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161283585 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235597273 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223449094 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183833779 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134120478 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162593831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12356282 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14670283 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157502171 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171154691 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162342224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149555981 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183300409 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159062609 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137084507 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142598537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204845361 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150393495 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186658223 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184345965 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14166174 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176208477 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19449847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13753889 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194120027 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217551224 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117182099 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152588759 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137785489 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155925819 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270196256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099989158 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187290466 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218614645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165091675 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171077179 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150882429 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199136475 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160480093 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218385307 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118648249 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159435602 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160359349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141774343 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134323478 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159876981 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169814811 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15243835 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162914314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141867754 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196643653 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126772207 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148335741 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292050881 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177297569 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247745952 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1102822 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140439895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163419913 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150118441 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181037958 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184173096 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139233662 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138301843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110465228 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159039638 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114478414 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160565968 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195070932 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161420774 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237023909 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11100347 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283776365 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143156804 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157603825 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09104142 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135120149 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154164351 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148239526 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153825321 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197225376 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269439678 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148246603 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108553379 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153040581 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130113845 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138414196 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138298091 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164407594 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210817771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143940992 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085768035 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165899767 seconds)
  done (took 85.69892961 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172958047 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136962635 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152217917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204197596 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18000761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2944838 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21278525 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256569235 seconds)
  done (took 2.698284149 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095551277 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.155723717 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.166814312 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.142252149 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093340571 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.125833856 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.377084034 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.145374041 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.123394392 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.125857832 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.177694452 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096220642 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.602096588 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.099534283 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.13108023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.116050926 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.119578176 seconds)
  done (took 3.976586353 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.190852103 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.481388662 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.001485981 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.214760912 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161235506 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122225028 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.694871335 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118615046 seconds)
  done (took 12.066575391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.127813998 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.155975623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146585675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.176393848 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162841624 seconds)
  done (took 1.861967328 seconds)
done (took 128.360912659 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100174147 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13102455 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099383432 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132523687 seconds)
  done (took 1.540408547 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099808205 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079585308 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108752585 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076801307 seconds)
  done (took 1.451476811 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196919022 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.180042979 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396335451 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079128648 seconds)
  done (took 1.59652581 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117587783 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135301114 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107120403 seconds)
  done (took 1.459339727 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107928763 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132056827 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106046998 seconds)
  done (took 1.440230348 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108709426 seconds)
  done (took 1.202894876 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112824152 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.147792404 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.120802892 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.148873082 seconds)
  done (took 1.625255437 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10012062 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130152584 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114839772 seconds)
  done (took 1.440666766 seconds)
done (took 13.223109561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109459532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435422266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.426158255 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11531881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735431226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38965595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045872668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156278785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178727495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.103248847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149378201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681862753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.06633118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.388245741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02674716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.383458251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705195563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095167223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122433441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09634298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023518134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100083963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130806485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098588202 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707220055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428735248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097093828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378803981 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09406676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132139401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383410858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124353324 seconds)
  done (took 17.191460972 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100735588 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189917409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.140965775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097311478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131123156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103264623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132055521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097213933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18606369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132720252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119182771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124721439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126957273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097101201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144297242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099780181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130163911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094561137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123177608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12361266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114103133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125452791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09719058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123498798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095574286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137300206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124710931 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09527501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123316096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103214534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130987547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098740549 seconds)
  done (took 4.965433991 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145318749 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191897957 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141235314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130826335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177585166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128452091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201508019 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152412957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190031182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099117707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142701432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099933912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161796844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13230477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116375698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127332908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096899622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123881853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122352958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097190315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142789099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100429559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125937744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094667593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125726789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138783869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096744746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12346725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095068705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132845662 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100356942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126450419 seconds)
  done (took 5.284290073 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099213292 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128000235 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112264378 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14115462 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100763117 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128972998 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09878998 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127036572 seconds)
  done (took 2.040623926 seconds)
done (took 30.578820193 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113209721 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135986572 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.118306359 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.144748179 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.11143575 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.145637129 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101173123 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136186365 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.141719651 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.111997456 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147740808 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.101526814 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.133363606 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102047107 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143677712 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105871195 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.145546694 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.13996142 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.117642329 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.146833359 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.104324824 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.143089987 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.112842534 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.146947519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.145731948 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116660985 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.149165454 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10888246 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.132284677 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10258665 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130268074 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115193661 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.135436142 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148583436 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.108301404 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.136888789 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.10490758 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.136168745 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.117475647 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.143717656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10936903 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.144859479 seconds)
  done (took 6.431133442 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11318685 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155303146 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11747029 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.091019895 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.125946998 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.089318175 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14930773 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088654042 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.118842243 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116249181 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.113794704 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087105645 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.086533431 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.109327925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.082210406 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.081353479 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.116677145 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083452023 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.084385476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.113380709 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083549939 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103704809 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081380074 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081029706 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10705563 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.085829692 seconds)
  done (took 3.777382149 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10243465 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142973704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1182068 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182774941 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166931354 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.109699079 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143384215 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143728139 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111293977 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123207054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098298846 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152965138 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112010591 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131591565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.125851195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110241264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137757746 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097559215 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134213752 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114584705 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141289937 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133732185 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114242649 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134855855 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094290932 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125626078 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101491135 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143991563 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136551741 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.103969855 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129943051 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.100375784 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126247226 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10618018 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135470003 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12662082 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115415491 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138310034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10378408 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125866924 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102531673 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127962499 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144424622 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.140804373 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132923783 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.108215972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127522282 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136077825 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096933572 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140686288 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105048883 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123530904 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097935351 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125201867 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095937404 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140256308 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104413414 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141685222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139385883 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1002131 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135701018 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099491136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141253133 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101568704 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133040733 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094871109 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124867099 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122818494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117950804 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129868862 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165294036 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098631065 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125880332 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103736186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132617126 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100939835 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124141146 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111919665 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141213456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135061039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107575218 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126719111 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10125509 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143458405 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097710147 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127528376 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096168396 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131771108 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097115493 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12522373 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141064854 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100945168 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130789023 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107693099 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12807773 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096279816 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131066638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128761759 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09538859 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139866902 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10468975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132129451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.110965531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131475148 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099978517 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134773718 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129208512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095285818 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129691321 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101790543 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125506344 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099927783 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127786215 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097909232 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134611233 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131730916 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100286538 seconds)
  done (took 15.328430375 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236061892 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227922747 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.199603187 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303178633 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13955358 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119945175 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.218469548 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161871855 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125657194 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163331566 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174515429 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189312065 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144518266 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.191405318 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173659434 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125684778 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144392643 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140108578 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.250343144 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.26651786 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.148991959 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102943432 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164690849 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163938178 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139885245 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135158614 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11154119 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138486765 seconds)
  done (took 5.928079919 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111992641 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157139374 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101065139 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147978399 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152388083 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.096173741 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130674691 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125583837 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109274598 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140403227 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095152061 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132231418 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132576593 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105234798 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125381535 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105637937 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134854081 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097114106 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12951804 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099539547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135033406 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133795346 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105164486 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124308855 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104983891 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12561262 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088849801 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146149554 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125104577 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118293421 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12387153 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103576437 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139319381 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.1257009 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095447071 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126578746 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097437301 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126353815 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096979849 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124197787 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094564676 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109300071 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095420016 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140076131 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102519639 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112060563 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102039554 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132107739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096872089 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124438302 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097652337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128910459 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127916309 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104576943 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127967855 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097180787 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.129140706 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087208932 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.132222312 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098568575 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116570117 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094621847 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129790026 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09111085 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134758407 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101465631 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124511428 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098937416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13043553 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102483057 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127696941 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101352047 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123285841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127362765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09939098 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131000636 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099421076 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123225773 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095454511 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125811045 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077324473 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124737284 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075644734 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098939927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123834049 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12404191 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097929259 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130921137 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112317792 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126224556 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133565117 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096980603 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124429392 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098460637 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114069685 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098656282 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1411384 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113750337 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126096812 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.1230029 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11031101 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128021166 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094926617 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107635258 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104483467 seconds)
  done (took 13.254183281 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132769692 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.16237814 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133410443 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114340709 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160915562 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.165941341 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103357859 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133571297 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097604868 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145503046 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.101629839 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13564083 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095735416 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14076287 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165995368 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.110928582 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13580262 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110989133 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131146888 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172564415 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116523399 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145552587 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.150103777 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100606677 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132898409 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11593658 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165512908 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.146175116 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.114412212 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14934795 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11581674 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.169938285 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.152969526 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.109104628 seconds)
  done (took 5.674752265 seconds)
done (took 51.498818514 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.235614881 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421944677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199075306 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.072151456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.24458573 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216156115 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.229021379 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196937823 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.352714492 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205274604 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.471521711 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.75219678 seconds)
done (took 59.724979624 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.250743102 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.3528202 seconds)
    (2/2) benchmarking "String"...
    done (took 1.830202033 seconds)
  done (took 4.30641428 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.799994047 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.134664687 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458183745 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198832745 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200026776 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494947028 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.902933897 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.594816414 seconds)
  done (took 28.107511007 seconds)
done (took 42.589798846 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19784336 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.235375439 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.238057097 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178457315 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.340136641 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231460474 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.510071042 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.217690017 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.226845972 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183238792 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.22737091 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.21015502 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200269607 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.535365333 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208145389 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206812428 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223166966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.691896461 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605324173 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203064673 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.215728697 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.243191139 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.228819994 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205444814 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.241093643 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.211325652 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200620115 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.208169523 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.799095468 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212575244 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.221155271 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.682228875 seconds)
  done (took 190.664740742 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201499541 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.204945998 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.3147662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.242143741 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.6620816 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404530292 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350113414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.738454167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225465076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.231977773 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.516371783 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202488376 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.581558448 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177182795 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233198989 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.267652753 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.496024887 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.571304051 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241995124 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.361920637 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218479312 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.446361597 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.350273163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.460174784 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219661518 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.247487706 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209679257 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.234840587 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399628405 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.418694395 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.255245744 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.238560743 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834476971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061425952 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228245233 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241586972 seconds)
  done (took 150.416419057 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204107919 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20428125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205361524 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236627025 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202941491 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78562138 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793964068 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.722855053 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.432067006 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.59551022 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465113212 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205087687 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299255771 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219662358 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211623416 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221100883 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248240953 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211098983 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205762472 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788509677 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222689818 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.391158686 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387142731 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220588861 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237686861 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593386935 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204946741 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238571015 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.53838702 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255234072 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205280263 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5932717 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.418800487 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323367764 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206980847 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238694374 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205098902 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205626648 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486861004 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206047687 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207255021 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209904447 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872488607 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206700508 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788404736 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212382411 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.147220133 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208081148 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20661161 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.280595547 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213493802 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.899992186 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230691917 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207820322 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210122548 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207853162 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208290995 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241395605 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.328162563 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306420183 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225723147 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211245101 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240417387 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208503439 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.414013895 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213417064 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.754160737 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269989617 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.322174291 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792927742 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213834567 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307669391 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329005237 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207659726 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208915548 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208511144 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.210058489 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319843024 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207742904 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621656674 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209313849 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385348829 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.22660412 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.592856611 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312515645 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208688325 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636596681 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214838222 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.208467735 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956519186 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305484527 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209345959 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208687496 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210040943 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.622070714 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797863741 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.470990302 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215232366 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.475754517 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215373196 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.641222448 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768590788 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210171854 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911770786 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216237874 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326100776 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.387140062 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228983853 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212575072 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.605187237 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218464697 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267324189 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216221414 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608898157 seconds)
  done (took 366.35600581 seconds)
done (took 708.563283811 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.81942018 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.812878889 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.924041792 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.808947357 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.775793763 seconds)
  done (took 10.273708121 seconds)
done (took 11.408604501 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403020316 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404993793 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277713531 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406482931 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248351203 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424224613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38561927 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237731312 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.314753841 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300935313 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319416627 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271272875 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251242798 seconds)
  done (took 18.380555008 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532022725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528852882 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279504907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531541362 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255323116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528052201 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418193025 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43053344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434268758 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242923656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224316625 seconds)
  done (took 16.541168881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55509013 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541393476 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284086989 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544521436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258633063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54520855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421337882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431018002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456846813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247402304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22485574 seconds)
  done (took 16.644665647 seconds)
done (took 52.70105203 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22011318 seconds)
  done (took 2.355112179 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256998038 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423657771 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243064527 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226317503 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220849551 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222430314 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227550773 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222366032 seconds)
  done (took 11.179114005 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218951361 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.222466001 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220481828 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220321949 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220196465 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219382676 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218687064 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221922415 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218829743 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218546623 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219528614 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21880508 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221978185 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221655355 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219219601 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222550971 seconds)
  done (took 20.660556498 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220754777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219226882 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219338374 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219530389 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219638114 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21937252 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219475731 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219446707 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219395854 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21870152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220023322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219780959 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220042925 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218969717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218236193 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220531334 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220209565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220460211 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225237946 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.222329631 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22180969 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220804095 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.221635747 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221563471 seconds)
  done (took 30.425329466 seconds)
done (took 65.756410487 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.838749305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.848607988 seconds)
  done (took 6.82575017 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280112479 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.287565942 seconds)
  done (took 3.706029925 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221983555 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220795412 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223443787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221190767 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222583773 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220289274 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221274261 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221273304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221894329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223551352 seconds)
  done (took 13.35440964 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.220764212 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220968679 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219304548 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222893868 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223079221 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220069999 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221222497 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223413465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220500601 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222646034 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223704183 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219884496 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223440625 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220148869 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.22159284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218546454 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219073572 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219067917 seconds)
  done (took 23.118735081 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22354431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241726851 seconds)
  done (took 3.60325061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.347841425 seconds)
    (2/7) benchmarking "second"...
    done (took 1.25993192 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328892189 seconds)
    (4/7) benchmarking "year"...
    done (took 1.316402474 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.259991728 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240696435 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262650209 seconds)
  done (took 10.152896064 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220960353 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396939979 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.498032985 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821412172 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221500331 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22846448 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.066475299 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225342575 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.229900038 seconds)
  done (took 14.046132234 seconds)
done (took 75.946521164 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.246895096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236195697 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.502083796 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.233304787 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.233230009 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512659863 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.239861359 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.347437268 seconds)
done (took 37.688945447 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.222711172 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203572548 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.984891571 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.219619624 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.27741245 seconds)
  done (took 18.822185684 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.263465407 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571428227 seconds)
  done (took 4.971424476 seconds)
done (took 31.153935471 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224572113 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221517648 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222373788 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222515775 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.222316883 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222721254 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.222172886 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219721242 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222533321 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224597631 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.22240255 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.223130455 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221768589 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218960873 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220174865 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221379495 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219729563 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219267064 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219607708 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218909168 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223202562 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220610314 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220800781 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219722381 seconds)
  done (took 30.453684988 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223320381 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220464747 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222691529 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224778258 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221084327 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222898219 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223869156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219632859 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222674913 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223101289 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220922909 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220381668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223362016 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220774575 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222751045 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220735183 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223173987 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220228285 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22350045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.2216052 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223839696 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220866826 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221224947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224087981 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220763705 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221483076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.223633216 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222012027 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22458169 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22151774 seconds)
  done (took 37.805346682 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228869584 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231792234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224277212 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2251855 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224223779 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224983451 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224106605 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225134481 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224970603 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22595027 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225736624 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228565811 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225423365 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.2249805 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225338616 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224879132 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225655268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225616351 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22454488 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225846385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225459475 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22579978 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227154639 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227124635 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225803986 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22748485 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.228402989 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227663938 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227913739 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226814492 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.227406792 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.228704848 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.227063415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229858341 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229851451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229207176 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.232755173 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236899047 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229999974 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228891592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229949166 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227499126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229131991 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228254441 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.229378202 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229811578 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226345384 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227695776 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227117333 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.229407768 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230203544 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227799785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227000621 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229884162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227785901 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229349331 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227614727 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226829521 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227255746 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22873146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228640566 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228536014 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229557224 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229697222 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228779072 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228239619 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228632907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22932551 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229997283 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230902088 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22958115 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228633964 seconds)
  done (took 89.545090451 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227704264 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229584436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227156426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22659248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231760469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229768645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226561717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229919921 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226978948 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228481914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227980093 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226744278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22759894 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230440979 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228614916 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225342759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228097475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225113085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228201605 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227972876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228328333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225622789 seconds)
  done (took 28.158300516 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228316964 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232557061 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228058238 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231571951 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228678243 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231912184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232380446 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229878088 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230107194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227075784 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225975818 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229554773 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227588405 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22661399 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227323782 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229647322 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230916267 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228036276 seconds)
  done (took 23.269363965 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227642263 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228548627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231288646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227953183 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228560051 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231219521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227531877 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230384161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.229860059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228026934 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229388913 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23087463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.230249392 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227332909 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229068943 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225456774 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229620473 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227231319 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229051392 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227435326 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228562177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228890668 seconds)
  done (took 28.17793878 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228851272 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229427896 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228197312 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226216449 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227303432 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229890082 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229451915 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227741451 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.231629928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229234838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227406766 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228766544 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229690569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229880715 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225829708 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228491982 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233485854 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231617603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23227585 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231459103 seconds)
  done (took 25.730192303 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231310851 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2310616 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230327877 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230319886 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231428806 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232395311 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23091925 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230817736 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231180436 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233461778 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230850971 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230203563 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230780009 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231960926 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230721435 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231889233 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231506111 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231509932 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232080372 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232525811 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231634061 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232102517 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231859286 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23208614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231626414 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231719794 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230316434 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231423074 seconds)
  done (took 35.627393619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232276318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231730872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230067908 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228930912 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232507186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230196681 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229938889 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22998574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233453159 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230444008 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234010657 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232686635 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232090875 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233887694 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232628405 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233493724 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233351247 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230370253 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234471917 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231364027 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235460654 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23295736 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233664594 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233068265 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233876589 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237375467 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231385851 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233784226 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235537926 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231211002 seconds)
  done (took 38.122839668 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254406072 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253074423 seconds)
  done (took 3.65387338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230561379 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23517223 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233484035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231884499 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231905421 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234612529 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236986426 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232475009 seconds)
  done (took 11.015242445 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236141727 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236513807 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.235839683 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235289363 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235028935 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23525713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242596706 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25446425 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23797411 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237951739 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243472899 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245345012 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238298622 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237428717 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236707956 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239435327 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23573231 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237442974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236485552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236751403 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236277707 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23939608 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23894972 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233754406 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239046808 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24941842 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259623082 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237683906 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239482806 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241122901 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239077665 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236630193 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236875222 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236484714 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238259776 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239520525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246242682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260666601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245376969 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258947324 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2387311 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237723861 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241486736 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242009947 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23932247 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23895759 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240683503 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237528919 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240349084 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243113917 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24583423 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238805284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237526357 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241505195 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239578873 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246475357 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257401468 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242418333 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250492576 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251349197 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271913536 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264302106 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242290915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241135542 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250604417 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264795116 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24597299 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257985582 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236332696 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240130006 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246558198 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27305951 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266920159 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23971049 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240348573 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241472875 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240929963 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240936286 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247266405 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261844578 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239990352 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240460009 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250739995 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264553805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240850143 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241194644 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240632803 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240500075 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24231218 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251092473 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25910851 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241076512 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241372162 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241463351 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243771137 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241433549 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241442978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24158997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239321718 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242537764 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241042212 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24584657 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251634386 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241800339 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242514476 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247490734 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261043632 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241536527 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248051161 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241724446 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242008781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244173178 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249155628 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.24007055 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245559982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251696115 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241464532 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244654946 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242996033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242739881 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25375355 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269028233 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243831137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243996644 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248434597 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254819231 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243193783 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.2454973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24362054 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241067811 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241421736 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245888263 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243903562 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245362483 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243110337 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245512317 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243090724 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243728951 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242971825 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245470332 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24644383 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247198491 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246027376 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246774988 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243798807 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247224826 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250977421 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263875883 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246964725 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.246596353 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242816999 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245084749 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247036673 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244805391 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245963859 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245582471 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245392365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245546032 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246338501 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245743958 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246296008 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245380278 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250718474 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245303622 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250230114 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24808415 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244202997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246050445 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246239405 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247489526 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246934307 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246215912 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.250996257 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254248324 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245920125 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245417939 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250163618 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246517918 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246828992 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245786117 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250228193 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255531593 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24797185 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254020658 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266928287 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246873403 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248567183 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249042977 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248168004 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248617048 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251957517 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256050527 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259833962 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272571247 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249336828 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251873363 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249658217 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252022635 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.2513749 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247862917 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24902287 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247029838 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24979686 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248130754 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250664131 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247916101 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248107015 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248702521 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248882717 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248482835 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250652414 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25147123 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250925213 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247426258 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24932551 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249779671 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250291162 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246584432 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249532847 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24977287 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249805922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249763908 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256354886 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249142439 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250801042 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251007204 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250526148 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249531328 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250034915 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253069846 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250681963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257229615 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270896401 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.2521218 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257506302 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269264451 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.250524271 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256291481 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250973402 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248213774 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254403201 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259181392 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250731174 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251378107 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250630869 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254122207 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251910075 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257477949 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26851515 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.251459432 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252505262 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252636377 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24855101 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253242526 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253006353 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252547455 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254389044 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25190682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251819603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253404179 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251731235 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252758677 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25340057 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256189131 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261269842 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257606864 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251943676 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254648303 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253772488 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256918553 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253712559 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251950925 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253044842 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263629206 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277175374 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258806482 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273229587 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253814409 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258440518 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2736473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258397865 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254815165 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254814559 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253641409 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254335658 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251436445 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254401471 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254375799 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257855109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256546653 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259180789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255590883 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.255016301 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253779039 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.254295016 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255274061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253701391 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.2554099 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25683316 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25611011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255157976 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255469274 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26028094 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276646606 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25731236 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.257295395 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257035345 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25592886 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257272591 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256045696 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258592111 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262489487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259311485 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.264571681 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259028798 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265583835 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254835143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259243625 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263809333 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25249236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25462286 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256481624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256665774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26281832 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277794815 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257926724 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260261112 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255804221 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256168406 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256714738 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256734074 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257719903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256249674 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265301109 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279767796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262376698 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259634633 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25443214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257971213 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257617373 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.255770992 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260928777 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25734146 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257994491 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257235254 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257956864 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257738861 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256799866 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25752057 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.254808837 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257815611 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265428738 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279203355 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261910527 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258029553 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265488739 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276708031 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265216792 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277918736 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258899851 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258033386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259630524 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260495432 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258759629 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260951249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258662243 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260209802 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263247117 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260251273 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262020751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26006223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.259627433 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259999302 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271954905 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282343271 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261752792 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264245958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256805397 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26255006 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263546507 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.259907921 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259647834 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263350516 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270679537 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268816301 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261929758 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263113375 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260867994 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260537847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261043699 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260317048 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261067274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259810929 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261295359 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260154783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263797194 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262083875 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261635813 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262570536 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263532798 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271343331 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27919179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263242793 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260360329 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262101848 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263151109 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263000663 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261152157 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263166562 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261690785 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263747973 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269373175 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268131319 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264963198 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263031631 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263491917 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262988288 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265056348 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264157806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.262599699 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262013664 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264048769 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264328056 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264805416 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261408203 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265719886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263823441 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263689377 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26597786 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271513272 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264479306 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260581163 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.262970027 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263290987 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264361676 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.263967056 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270410875 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285766421 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273044674 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272040398 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.268429806 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264196699 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268301317 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271269738 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262912399 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.264665698 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.2634753 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265213287 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265282778 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269341814 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264708351 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271031621 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284470123 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265535364 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27345184 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28706241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265510854 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266986615 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.26968674 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268497548 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263180806 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265910659 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266286916 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272197095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286107421 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265940985 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267567253 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266265691 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267798853 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269754764 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266340201 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266442514 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263110885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267432831 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264900885 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2665173 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262655186 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265207397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266017303 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270122931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273333569 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264066749 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268536135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266361732 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266535989 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266161979 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266425828 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264575929 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.265156262 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266462359 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266463441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26743292 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270845089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266777755 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269419607 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268907423 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267677894 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270428583 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277568595 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277943333 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265626037 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.26681674 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270273971 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271365627 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267909926 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268245433 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268105333 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269335137 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268944712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268720162 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268122036 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272095767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284258001 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289720184 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268941871 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27003861 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270846279 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271991181 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269825169 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271251947 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271911783 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.272903656 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.276866067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269769207 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275663643 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288880078 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273620905 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273105937 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273651697 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277567932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272687588 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271037416 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.269174732 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275479121 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.286933167 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27248883 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281332091 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301429273 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.29228409 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.271593479 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270186962 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270466556 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271111558 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272537609 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.270001605 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271099426 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271703514 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270509818 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272081949 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278366699 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272720408 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27271813 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271582641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270510976 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272011143 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269726161 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271206991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271440894 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271210169 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270950425 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272368777 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272222468 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285957905 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297907524 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.273284287 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272619541 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269945153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.2766697 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278330994 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284488565 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281249813 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.272907872 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271471116 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273467309 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272039443 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271343332 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273497651 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275834947 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276731706 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273022989 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286630141 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299007925 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.277537969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272923949 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274143867 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273392903 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274366359 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272051679 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273987508 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27498592 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275624066 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277286459 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273758936 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273398632 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.277787589 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281685003 seconds)
  done (took 750.951557021 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271575383 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272608252 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271164435 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272137139 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272229473 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272213813 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271406997 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272175505 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272140849 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272636094 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271970768 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272321998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272295224 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273577621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271962758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273054956 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273632964 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273048457 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273050874 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27272577 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272827644 seconds)
  done (took 27.906763872 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.2753514 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273179282 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274008402 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27656887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273449876 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276696013 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275363671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275848819 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275682444 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27468605 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276065097 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276270934 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.273228417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27499637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274892948 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27659003 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278032316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273446526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275831903 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274740285 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277230006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274730959 seconds)
  done (took 29.243306179 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275783597 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276592827 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277500602 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275906954 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.27765627 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274807084 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276520499 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.276165495 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276822483 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277049479 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277037544 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.278476785 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.2853449 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.28277919 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278207982 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.277863203 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421718538 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276887734 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277549551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278058359 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276148271 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282904399 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.29573513 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276661135 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27761972 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277285301 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278794333 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.277716081 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.278165228 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280167434 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281687831 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.278996911 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280116806 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28186601 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.278724404 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.281191519 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282962221 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279569615 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.276405187 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279744601 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289430657 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.30041669 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279805632 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286830103 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.302392895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.279540151 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.283279202 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.28761173 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277645856 seconds)
  done (took 64.077266789 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280511769 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280053492 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276724017 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280654965 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282411885 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282253326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280411394 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282406244 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280829851 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278544232 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.2815528 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.278606709 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279423103 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281906568 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281654108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278810321 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278240859 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279255619 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279855905 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278420755 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279378622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.281337198 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282349487 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280013612 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282460902 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278222898 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27955469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281881998 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279300206 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279964237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28248455 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282269282 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28336727 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279932547 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279810396 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281535272 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28300197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279733535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282819797 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280118202 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28306056 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.2815359 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283472573 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283608942 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280408996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.28121656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281206487 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28083802 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281366908 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283378812 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283557327 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280386867 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283629197 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281745003 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284654297 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284001826 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281337781 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281710827 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284415227 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282403932 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281239398 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283657504 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282616039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284938972 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284536859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281899062 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281718222 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284479713 seconds)
  done (took 88.329515281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283853637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28439842 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284703052 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284240813 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284841706 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28352168 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28515514 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283514119 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283535006 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282810545 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284369539 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284172644 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283855941 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285318557 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284442281 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284874574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285764432 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28519512 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284912184 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285391161 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285185672 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284878651 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285183618 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285030495 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286219538 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285698249 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289953955 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286712432 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285153168 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285305851 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286108397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286039471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28490824 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285587689 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288684999 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285424557 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286361205 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28561716 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286390754 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286021116 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284576878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285430945 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286242944 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.285856215 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286268641 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286568154 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287871461 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287664722 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286701066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285793969 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286039449 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286940201 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286817737 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286278343 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286126599 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287351733 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286285828 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285683205 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286948209 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285834378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28646649 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287202383 seconds)
  done (took 80.907497183 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287476377 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291860982 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286790235 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286237487 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288786348 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287227255 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288983432 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.288874305 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288983231 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289342169 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290305913 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288129608 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289002677 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290016573 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287554373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288972726 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288146084 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288100626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289531517 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287391685 seconds)
  done (took 26.969487625 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286964599 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289577518 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287822973 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286791541 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290308139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288107671 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.29000743 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289685929 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286527701 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290770923 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291186201 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290120769 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28690988 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287878604 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29109058 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288850548 seconds)
  done (took 21.821971355 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288166576 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290988884 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.288936097 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290407457 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288226175 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289385288 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291185423 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288403853 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288250345 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293919812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291769031 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290611327 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291461253 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290550692 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289087169 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290998987 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289185655 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289081651 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29275949 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290867285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289797625 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288781386 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.291895735 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292715517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289808321 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290345377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.28863683 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289403198 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288984205 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292617854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289541849 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290368275 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289545175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289764311 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291192382 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2894639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292628544 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292872529 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292864345 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293517687 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292535768 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290492477 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292977733 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293334187 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290802334 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292919558 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290173946 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290632519 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291157566 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293909212 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293274071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291672148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.293001789 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296190527 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295230608 seconds)
  done (took 72.208899854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293223101 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294108851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291892078 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296508381 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294276086 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291709111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.293268788 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295345425 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293787864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294224992 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295521675 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295704318 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29309972 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295021188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294290538 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294816796 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292852384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293301285 seconds)
  done (took 24.496702412 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293296022 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293231592 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.297615099 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292702644 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293131275 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295006656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292655922 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29604085 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295544936 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292393399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293107802 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.2960125 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295269677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296156598 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293548342 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294033514 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297540976 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297316174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294055656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292931906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296654782 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297839922 seconds)
  done (took 29.690732026 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296089212 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295683109 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296105594 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.312841555 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.315221137 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319029118 seconds)
  done (took 9.040279931 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303391493 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296506895 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294184825 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298611115 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297205332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293292865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294841798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295092346 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296187383 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295375269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293957633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297886804 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297935942 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29439094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298609752 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297853083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294478649 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295054014 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297523435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30003564 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294464515 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297517465 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295285819 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295590411 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296128895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297273858 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301017994 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296402523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296690173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301612215 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29859225 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295426116 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300353452 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298537965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299145178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299094365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296195685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299122579 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299741007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298655805 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30022094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299197827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298612117 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296302772 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301698935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298661415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299155772 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299459619 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299266677 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302846108 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301873986 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298624599 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299645939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301286468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299761159 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300221849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296506631 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296797726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300076976 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299123209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298296602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302053582 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297750242 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299116602 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30065238 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300832051 seconds)
  done (took 86.908584297 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29860604 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301130576 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300159874 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30041812 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298462144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298253228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298543946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298417706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298770245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299456465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301697899 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297498476 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29869261 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301156116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300256202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299048796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299179072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298900791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299151362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30412297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300626885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300418177 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302313788 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30102787 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299381453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302536507 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299914879 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299306666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300079705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299762773 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301289173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302461937 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300751143 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300135866 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300065371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300737802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302123576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30125305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301551911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305594295 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300081845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303495012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301765257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301023743 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301893181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302829697 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301964511 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301900181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301579182 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30232574 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302957603 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302166749 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30303769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303657274 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301251214 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301608319 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30261049 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302832757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30249031 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305002723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302628199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301776467 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30694764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301777652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30247574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302161378 seconds)
  done (took 87.090213896 seconds)
done (took 1752.34199608 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.467395792 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421160754 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303130104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.30663452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303171079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303117657 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306821804 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304661065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303158236 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303331192 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304062166 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490684246 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.305588203 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304150749 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304342307 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399519503 seconds)
  done (took 42.645326944 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333137635 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310635486 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424656745 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327884717 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332879167 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49842065 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.366915938 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316614555 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.482991998 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35322299 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.895308975 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333630486 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312689212 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.43387012 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32816627 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500921027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.564759457 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.896550235 seconds)
  done (took 30.227344387 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.76716098 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.322250025 seconds)
  done (took 9.305089756 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329895248 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314616024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310775029 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309243546 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30227584 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302451813 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30799444 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318251825 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.033573825 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442455642 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310236764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32271824 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332197202 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309341436 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309289525 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347765068 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.467206373 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.314985461 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305547002 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314540845 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310047648 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431671654 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349342701 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309450353 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435476412 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.037185895 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318536534 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317964494 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.46312703 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313588165 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309778518 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310275021 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310192372 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.236857442 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.770467068 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304996559 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334219669 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317957056 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307220078 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.502366287 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311892287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.316601661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.310814314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.7416356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448089288 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.422654387 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.556250835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329068107 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311947616 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369884594 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311972752 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311734072 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.353643988 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.109003485 seconds)
  done (took 110.724293174 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.312214842 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.703634929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471590668 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32219443 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95609462 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.925092242 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.325474002 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.598396033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338737244 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303608051 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598525435 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814055973 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.331252619 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.310430432 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.954172992 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391601017 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302569138 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.048334748 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32382203 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.304123832 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799267115 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302642858 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319713387 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.442676891 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340093068 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752817443 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.781667205 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.748290676 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324251887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302320574 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762425675 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320645185 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.3595303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.305233882 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561527468 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655526907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649881843 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.321824682 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350707974 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306969165 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.313654189 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747187217 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656526876 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319419391 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319731824 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770309224 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320463943 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.30644149 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.306886146 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503589608 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.175468932 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307528008 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.69391024 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303618077 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.671841271 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362734233 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350152761 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785213193 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320839819 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.386444441 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360940848 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302927542 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306457044 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303369024 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322758397 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647569269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700614643 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307016421 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.646963705 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775917518 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320922194 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825462229 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.13040075 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336340597 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.364182298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31673616 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.849566191 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792123437 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.363055185 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303712516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635910788 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323930504 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584494951 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320648769 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305033685 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832270673 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.313630674 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.331024572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.3048796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.305487108 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.953406014 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313283455 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573437026 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.38336668 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306326143 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306094978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.311555143 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305377824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306573959 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.314565093 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825847792 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.325341039 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.473023726 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32915313 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305550783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323853612 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.30963634 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307819635 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524307134 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.773767723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.332404842 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306913773 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308042416 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.313023984 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.479326767 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309593898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611293488 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324248346 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307363939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315540859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015372051 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349525176 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308561872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.326401337 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17767829 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519557158 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332331852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.307400306 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307081393 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325286664 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.55354821 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3291301 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.362307562 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309344994 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007229294 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349195535 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.318086388 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.830680273 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315832072 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.162054874 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331318961 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309890874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60886133 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572430596 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.59296906 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313246216 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332694171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987051267 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.344529007 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446801741 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330247078 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.3577052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507225337 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460341403 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311542886 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.921123565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31187738 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524702293 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317090317 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611401263 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793741328 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.32790341 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318001404 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004333854 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035231803 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.991621841 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.313782252 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.585212434 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.258008759 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788402544 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.311191924 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309968822 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.751752904 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321698068 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312844469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.311831031 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.311074623 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370436023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48544376 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.929240655 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311306146 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761922326 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.355633388 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311822765 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.336111047 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313026647 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.660543479 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376169809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317172316 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.346701514 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314427892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315781154 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782445878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.143638626 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.31955021 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463332701 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946644632 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.3348642 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313565961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.913913185 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.638062087 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.819425054 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351324077 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.61916066 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330009399 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350400282 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891256344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359589017 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781272314 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330129372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.321312395 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899072406 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.330061914 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393731402 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.312889252 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315536372 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843649664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332988667 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.31490581 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.537390679 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333618481 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.570253639 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.322925696 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.313478421 seconds)
  done (took 1105.589029432 seconds)
done (took 1299.705674578 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.314408161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314113102 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299042949 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319631166 seconds)
  done (took 26.475200904 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329448289 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31766162 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319083395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318831581 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320965356 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.318698897 seconds)
  done (took 9.152069642 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.366890849 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313689591 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319032025 seconds)
  done (took 19.22605819 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.528875344 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.598818055 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.648744554 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.508902579 seconds)
  done (took 10.513596643 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320344425 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.319805078 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.320066769 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323503873 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332466194 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333420701 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323203239 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323591195 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.333575866 seconds)
  done (took 13.157658384 seconds)
done (took 79.752991154 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.293772884 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.327796602 seconds)
    (3/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.616849443 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320334428 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.303354667 seconds)
    (6/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341868644 seconds)
    (7/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341857356 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.300267329 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.342691518 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.570558743 seconds)
    (11/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.586333662 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.378597674 seconds)
    (13/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.411242264 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340210863 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.18022224 seconds)
    (16/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.294988493 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.325494202 seconds)
    (18/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333557337 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.315801873 seconds)
    (20/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.320805542 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.280428146 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.295235078 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.323822618 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.418883292 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.615732073 seconds)
    (26/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.339558326 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.925279094 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.724653726 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.968151961 seconds)
    (30/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.303532833 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.810609798 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.324348188 seconds)
    (33/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.370293396 seconds)
    (34/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.717071974 seconds)
    (35/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.823739462 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.302922734 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.444789359 seconds)
    (38/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414291169 seconds)
    (39/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.318951191 seconds)
    (40/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.877220543 seconds)
    (41/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.831120997 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.567494508 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.843709514 seconds)
    (44/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.3030134 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.481541581 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.568371055 seconds)
    (47/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.414141994 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.984608119 seconds)
    (49/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.79467724 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.783647329 seconds)
    (51/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.715398521 seconds)
    (52/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.504365936 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.447961365 seconds)
    (54/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.446294535 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.573287003 seconds)
    (56/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.295972093 seconds)
    (57/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.485689638 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.121711885 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.397662506 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.166464799 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.342497387 seconds)
    (62/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461813019 seconds)
    (63/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.369158761 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.375808301 seconds)
    (65/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.597123304 seconds)
    (66/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.294107864 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.840295974 seconds)
    (68/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.134735296 seconds)
    (69/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.16570697 seconds)
    (70/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.549199177 seconds)
    (71/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.336427406 seconds)
    (72/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.081992558 seconds)
    (73/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.448325378 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336868631 seconds)
    (75/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.357141962 seconds)
    (76/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.720356133 seconds)
    (77/286) benchmarking ("sort", Float32, false)...
    done (took 5.348091423 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.752656924 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.499916561 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220059796 seconds)
    (81/286) benchmarking ("sort", Float64, false)...
    done (took 5.637511608 seconds)
    (82/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.500473243 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.500063779 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.672887608 seconds)
    (85/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.949340413 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.305069451 seconds)
    (87/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.420299141 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346504808 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.106881417 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.7039401 seconds)
    (91/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.427871604 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.925245837 seconds)
    (93/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313671514 seconds)
    (94/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.340978437 seconds)
    (95/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.682821242 seconds)
    (96/286) benchmarking ("sort", Int8, false)...
    done (took 4.348049854 seconds)
    (97/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.699667529 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.300398756 seconds)
    (99/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410497162 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.40312402 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.320469788 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565627482 seconds)
    (103/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.813481999 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.339279372 seconds)
    (105/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.301934401 seconds)
    (106/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.561253694 seconds)
    (107/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.452561735 seconds)
    (108/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.555066139 seconds)
    (109/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.141734158 seconds)
    (110/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.19352341 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.371534742 seconds)
    (112/286) benchmarking ("sort", Int8, true)...
    done (took 6.325047289 seconds)
    (113/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.576333882 seconds)
    (114/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.307119813 seconds)
    (115/286) benchmarking ("sort", Bool, false)...
    done (took 1.84801954 seconds)
    (116/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.369426914 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387164027 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.601416654 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.159264108 seconds)
    (120/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.086948774 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.164843068 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.120160345 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593140712 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.349417993 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190829811 seconds)
    (126/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.423989823 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.453697166 seconds)
    (128/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.490396797 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.302517362 seconds)
    (130/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.331092397 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.303576533 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262974019 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.087988604 seconds)
    (134/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.32755413 seconds)
    (135/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.324478588 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.14496477 seconds)
    (137/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349563264 seconds)
    (138/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.68762758 seconds)
    (139/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.88617631 seconds)
    (140/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.759813549 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.985086687 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.301742214 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.332195375 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.562711277 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752758785 seconds)
    (146/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.319674284 seconds)
    (147/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.701936131 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3466052 seconds)
    (149/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.34093921 seconds)
    (150/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.317569306 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.306169081 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.44453825 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351177091 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.304574173 seconds)
    (155/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.306483448 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.182831094 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.356043372 seconds)
    (158/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.304559501 seconds)
    (159/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.941323549 seconds)
    (160/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337642503 seconds)
    (161/286) benchmarking ("sort", BigInt, false)...
    done (took 6.333634976 seconds)
    (162/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.843296941 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.109677438 seconds)
    (164/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.328018695 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.347995083 seconds)
    (166/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.701822157 seconds)
    (167/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.413164146 seconds)
    (168/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.30632657 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.556610003 seconds)
    (170/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.945739696 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.341141283 seconds)
    (172/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.326788659 seconds)
    (173/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.314997253 seconds)
    (174/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.304848866 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375776751 seconds)
    (176/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.431203268 seconds)
    (177/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.039067435 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384211529 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.088562623 seconds)
    (180/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.156099451 seconds)
    (181/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411577874 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.30633637 seconds)
    (183/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.906127234 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.503623647 seconds)
    (185/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.041030985 seconds)
    (186/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371608706 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353773644 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.328460588 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.461273151 seconds)
    (190/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.428881395 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.386089486 seconds)
    (192/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.882363784 seconds)
    (193/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.306905179 seconds)
    (194/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.698791389 seconds)
    (195/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.540500865 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699310392 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.3711456 seconds)
    (198/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353700595 seconds)
    (199/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.877656155 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.968072418 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.529085128 seconds)
    (202/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.306719869 seconds)
    (203/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.356040722 seconds)
    (204/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.898469923 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.738532657 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.028751119 seconds)
    (207/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.307586351 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351844183 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.442816703 seconds)
    (210/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.180755067 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.731478498 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.354731212 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.259685153 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.7449586 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.387048574 seconds)
    (216/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.562911996 seconds)
    (217/286) benchmarking ("sort", Float32, true)...
    done (took 6.347256108 seconds)
    (218/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.328217355 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253390717 seconds)
    (220/286) benchmarking ("sort", Float64, true)...
    done (took 6.32772905 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44908069 seconds)
    (222/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.46144192 seconds)
    (223/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.099403833 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.372639057 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.322608533 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.349534516 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.830786964 seconds)
    (228/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.147689867 seconds)
    (229/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.43674446 seconds)
    (230/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.308120689 seconds)
    (231/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.334715251 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.544251707 seconds)
    (233/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.40629151 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.720224302 seconds)
    (235/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.340194937 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.783595754 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356932227 seconds)
    (238/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351136204 seconds)
    (239/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.334275577 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.421172935 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346543608 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.309979212 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.790578848 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.309747711 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.334207832 seconds)
    (246/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.460096745 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.075747658 seconds)
    (248/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.326109575 seconds)
    (249/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.35493944 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.444738241 seconds)
    (251/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.332899684 seconds)
    (252/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.088180429 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.322889585 seconds)
    (254/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314139964 seconds)
    (255/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.970188925 seconds)
    (256/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.626636322 seconds)
    (257/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.753616515 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.41541594 seconds)
    (259/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.850447577 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.834152199 seconds)
    (261/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.451610914 seconds)
    (262/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.316053947 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.41489073 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.356603014 seconds)
    (265/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.700267172 seconds)
    (266/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422526506 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.448481476 seconds)
    (268/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.311024829 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.157070294 seconds)
    (270/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.144230884 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.379418333 seconds)
    (272/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.413105791 seconds)
    (273/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.340317026 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.28276886 seconds)
    (275/286) benchmarking ("sort", BigInt, true)...
    done (took 6.339847929 seconds)
    (276/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.318731671 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.348881149 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.350664701 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354847962 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.737840203 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.376280233 seconds)
    (282/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358771335 seconds)
    (283/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.397482216 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.61839522 seconds)
    (285/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.463356544 seconds)
    (286/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.31526086 seconds)
  done (took 937.719552936 seconds)
done (took 938.949797358 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.364449653 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368403775 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345048253 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.365210863 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463197451 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.366262808 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.354411037 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347612518 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.391818417 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392863879 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348667958 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.365314439 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.351988617 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351124376 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344778593 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366655268 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.409125017 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.352453934 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368721771 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354461118 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368434888 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350782431 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39489354 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.365817287 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347907497 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347829805 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354982018 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371299666 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463806583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.354903386 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34860128 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.362926985 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.408722436 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.345241795 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.340890931 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371499301 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.36489359 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355440763 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349896692 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385330297 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.821707219 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.369807485 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354392938 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347139149 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348240822 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35155771 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355292878 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354889822 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367878682 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369338564 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.809645796 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.385502154 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.357477173 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349325612 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358837873 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.35483377 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.351180294 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372363863 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.373811468 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372059755 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.405814021 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.360410491 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.34974208 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371398597 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.362361513 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.845666078 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360517124 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353204533 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.819317101 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.370145353 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.843778293 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380074143 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349262022 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370442771 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.386406751 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.410094736 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.345032941 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.348364684 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.36334717 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.354277822 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358786503 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369357894 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354436559 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35019676 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371063337 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.370728089 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359688318 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357091818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.359327546 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37563701 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364308467 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.367295222 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353765637 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345565965 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360170941 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353036118 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.359857581 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360076391 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356241428 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361062701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.813686323 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394233415 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.347605813 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347746638 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349891598 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371229335 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.815703787 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.375306835 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.371841699 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398495515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352975124 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.398251678 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362006175 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376987196 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.360978981 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354988083 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347020166 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.399446419 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.809516611 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390038161 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354243902 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357619383 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377132827 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354868395 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347967467 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.414929415 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.354172648 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373915039 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479761205 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.363227789 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39037204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357528592 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.355426833 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.374912413 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377116682 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.391239702 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356137594 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377354201 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.375897225 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348583207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.37025303 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.363180534 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353905445 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35919174 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347806365 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376717551 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377318063 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377551703 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37834029 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484618646 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353604807 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.404642907 seconds)
done (took 228.832352789 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.41536118 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.346781645 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435108384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350787242 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.4512474 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452753321 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348311209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349065852 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348932455 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.731474818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350005489 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348935881 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.351727399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349424511 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435331954 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353064524 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349583008 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694659795 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352288374 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.421755061 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352974584 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349779914 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352448679 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.735441838 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.346571266 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346003371 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423023172 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.3528296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699001891 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.349278103 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.355585006 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.700162374 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441193731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370555432 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361954594 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.358696476 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.454242029 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.370655747 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434234372 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.435181633 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438665065 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390692242 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.348051008 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.353295654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.36001136 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353701448 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.352013128 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379823475 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.35050746 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352490631 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.695587848 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363162162 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.352452687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351359363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352393762 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382378497 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.351593291 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.353682834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.445851184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355411981 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416779317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.737589169 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735919378 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354940787 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.3524289 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.35358249 seconds)
  done (took 149.721920628 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423287949 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427793214 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467374039 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372915458 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404517926 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.472136175 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373113424 seconds)
  done (took 11.201003636 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360596237 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356058394 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405970903 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406158523 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355311113 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.533679353 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356131276 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.366799494 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353481767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.406991942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357564527 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355409724 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36326471 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.353419719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.403526634 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.366709808 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47080743 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357327431 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356371242 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517097414 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355096545 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364198826 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408064222 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368311936 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359257503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361951861 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.161881337 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356864475 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354118733 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357363495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354920491 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43190153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3578622 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.355696642 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355235374 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472657987 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.356971411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354161803 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358044137 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.355246546 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357543377 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358796812 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358270063 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355010154 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.358878888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.381503798 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359286024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358803504 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35804339 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359950603 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.40825648 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35999779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356461529 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.356713272 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.413152555 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365756765 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359985631 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357260286 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359388117 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357302292 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520731694 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410732334 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.363956498 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407949442 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362608946 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359463931 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360099086 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360328975 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412929759 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360163814 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409059645 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358364042 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.545852628 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.383487773 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36266858 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363201258 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.363677791 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361084982 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.36078388 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.36507237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35896088 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361251887 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366462615 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358009901 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357237441 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526480952 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469062603 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358715075 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.373608163 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.367360655 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.357910432 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.41460646 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.361521917 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358595466 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41417376 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47682614 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.415968444 seconds)
  done (took 156.054818138 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366752982 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369868899 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.364578015 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.385972376 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381451531 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.362461383 seconds)
  done (took 9.49650454 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364908771 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.365247288 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36289573 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362427245 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363994156 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363451129 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361969873 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364067736 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.36630183 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361657273 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364529589 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.367304376 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364335904 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362505587 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.362393378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362405924 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.362779356 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361205975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363206041 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363515681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.469575324 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36167528 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363095515 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.363694032 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.368629816 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362957429 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370369146 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364007282 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363356234 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371203862 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382763589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365179851 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364468445 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371196268 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36736454 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.366097785 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369513057 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367727509 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361932712 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.36551081 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.368384741 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363610925 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364678691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.369014106 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367148093 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37070623 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.373267706 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370825433 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.365100857 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.369099089 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369629177 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365277416 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365566942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369420353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366385345 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388433299 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.373756748 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365385135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365036443 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367608641 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367092232 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.366216373 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36796444 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370002117 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36449045 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.369620668 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367301658 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371219916 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367856099 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366798859 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372117919 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364902224 seconds)
  done (took 100.774424562 seconds)
done (took 428.507330053 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.808517895 seconds)
  done (took 8.079756543 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.448032187 seconds)
  done (took 7.718934586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.332127099 seconds)
  done (took 22.608474817 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.458357 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.376990582 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.398204585 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366016415 seconds)
  done (took 26.869828636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.667193946 seconds)
  done (took 7.937490808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.373651343 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.366238346 seconds)
  done (took 14.010463955 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.409473858 seconds)
  done (took 7.678831346 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.373650784 seconds)
  done (took 7.649068082 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364306806 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.373953344 seconds)
  done (took 14.022140771 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338508239 seconds)
  done (took 7.609286146 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.649965386 seconds)
  done (took 11.922426048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.374767911 seconds)
  done (took 7.647282927 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428445981 seconds)
  done (took 7.698931082 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.538034702 seconds)
  done (took 9.808976293 seconds)
done (took 162.53401689 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.359661493 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36201017 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361148637 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.360380592 seconds)
  done (took 26.714975934 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.400668981 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.401138826 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402285202 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.411735516 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404291938 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401442467 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394050146 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.393262933 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412786677 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403736759 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403146414 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403898551 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400524847 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393935367 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403585871 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40971764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41323234 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.403309142 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.394216963 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.405952348 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.369772601 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.413515413 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405297922 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.370117877 seconds)
  done (took 34.889079887 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890753053 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439898921 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522892888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421301344 seconds)
  done (took 7.546651376 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.4200016 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421904176 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.435742536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.473765983 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.498227089 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430646528 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393133806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.390653882 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.377375762 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.423384199 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497602873 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.439362799 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.508428861 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371083843 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.584947581 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.37053401 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.371231241 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422169638 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475583925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.491379839 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373589848 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424056797 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.428116012 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.441023103 seconds)
  done (took 35.735873144 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371985906 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390502869 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.371548255 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369929396 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.380739712 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37201332 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372723421 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.372856498 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.371270566 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.376326386 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369578727 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.383082071 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.369913855 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.370405105 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376469312 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371381453 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378156012 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.369885076 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.370033766 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.377513645 seconds)
  done (took 28.762634812 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.365169527 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218802366 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717004251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621867548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.365172414 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.37267048 seconds)
  done (took 27.935715897 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.444216593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.597753495 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.371995858 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.738351926 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.830973601 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391289292 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.373365554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622787776 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.950830106 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.944027187 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431552068 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.442326352 seconds)
  done (took 20.415580955 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.369386962 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.37219437 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388389557 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388367816 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.428616951 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392921232 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.379792756 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.366526308 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.436580636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.449678656 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.394039725 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.430112566 seconds)
  done (took 38.074847607 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454157238 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411840233 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.376395218 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456794667 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092731222 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580432869 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400422512 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084437703 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.395568784 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646160285 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372345062 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460249931 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626871575 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379173364 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.371110082 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618294609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859126002 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373118077 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489948938 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398889878 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387110045 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.57330755 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611572331 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603178376 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350998922 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.63428264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148166547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670686898 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386335065 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38356661 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37452728 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648687806 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035550843 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488569563 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592052874 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392061001 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920571057 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.369891664 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.508452436 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387394585 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376815785 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385050709 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37386392 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310150209 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374500411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117070024 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400066656 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085736949 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37396424 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643584057 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470456622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.378639652 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944970105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434857238 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381316027 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.379270428 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471412652 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967776376 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.738638132 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389962605 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317029318 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374950998 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487724875 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005535589 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398831797 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379402792 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380029107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311162213 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.49790192 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393640947 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524015838 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.40251787 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025999905 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069375749 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401821769 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307629599 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925456251 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387204566 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.318604262 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605499041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155092468 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312568538 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.320650804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311136084 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09708879 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391726227 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.936414216 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397931115 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112411682 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617857164 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41344112 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400489105 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602411777 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.255467686 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377934008 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.378857938 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5055753 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401182723 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096926518 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331702381 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382899562 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633028721 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590489374 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38327549 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391354679 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883972012 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398058671 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.418410366 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377252637 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607593081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.990022821 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411580345 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.758075328 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396177983 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156198648 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129281424 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379776413 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.408101536 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378353741 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657969356 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.138609612 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261927347 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446275726 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382385486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379157343 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.530171906 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229498075 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.279705794 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.583824147 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401719705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397630317 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.381838403 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329228698 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.378216465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398955843 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.174965911 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603796695 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394719995 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662518618 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315419844 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527317463 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390297736 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.603490064 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.60281111 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.404203347 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640878966 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387441086 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399655474 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399546579 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400865187 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480816327 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402756368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.382249556 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644682832 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.385825367 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.385119038 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.658981316 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160613714 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385528116 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.387664892 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399816891 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977579126 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377631161 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393291769 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272631272 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.396481526 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449984474 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3882741 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60567219 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.681415923 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412926285 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387691677 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.381387292 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607088518 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395667795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.508121657 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465057522 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.867447265 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997476537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4142621 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318403422 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.094762616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078839173 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384513011 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.57318875 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383420077 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606105599 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423264112 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399708919 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984036148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404669122 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.516717647 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.389293287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396736773 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39045504 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384991262 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.682169134 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.789172961 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38630347 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403368782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529475697 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.399126982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319817704 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902914769 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390873552 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385730428 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.160850686 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420865551 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.520148198 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197630202 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665205808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389062197 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656254042 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.610515523 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.41967183 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.385030938 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387357276 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393686755 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.414371347 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419110745 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.398129021 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.516934033 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.824908425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95680801 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107228132 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941768345 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715354196 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.413795513 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274485549 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109993559 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33975092 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04365026 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630942351 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126702757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351800476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876255271 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.635136102 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19702166 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659039714 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617030605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695462016 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.409471094 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660968326 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602659227 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421828469 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389344459 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.325378063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.905688187 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956851938 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408781029 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464732254 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112101507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420773494 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.176146833 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432474373 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.171860905 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824205685 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961213923 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.77656709 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402816084 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397609945 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20104234 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41693661 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915643897 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02072472 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423957834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.884415742 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345132818 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615911915 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.427162336 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.385900803 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.003324152 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.417347272 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643870065 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662667953 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32599828 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39081479 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93791826 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263924816 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.395997639 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391644476 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142055731 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391648337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695118344 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.399915862 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.698344818 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410589096 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325846593 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32665495 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.084417125 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394605772 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367588204 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88237044 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397487067 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411448587 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416667219 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244012056 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648731322 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.405967591 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988747497 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63560907 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407756144 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415256756 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397561788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392751094 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.372287452 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.286339599 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630065416 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449545251 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616905849 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.419824162 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30084615 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401642013 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613603645 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275284245 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396346698 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64853615 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.130581592 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.41502823 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10021962 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436715268 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410931508 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.403711589 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39389099 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432655254 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48321315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618662009 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431664991 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.405402932 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821843169 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421576293 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395731439 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407960819 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48853751 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.801737241 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.701217873 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.18326759 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995511964 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148600296 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016280354 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684338674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396909763 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405002006 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328085494 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544148085 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923420919 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670043749 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525196219 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.395582985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435930745 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39810594 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398335321 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61430571 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671211867 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26560152 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852040163 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06285588 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.277165157 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406037358 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.606945377 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889773993 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954887309 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512442103 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398747333 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128121614 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689427939 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488181817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396009535 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989392709 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.413743546 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.167559708 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410456555 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408183978 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544401378 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667555301 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071273989 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.426940886 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552270063 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.171494621 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561825991 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652425122 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883901708 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624890507 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021259545 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139484096 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666926972 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46730774 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624242796 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.527542903 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546273679 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.405538443 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279981968 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398223253 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240867163 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.107174432 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407956701 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003132485 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680469502 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.401319272 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.405736362 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420433333 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.4085534 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620811229 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12586311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62374087 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410240692 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402628761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.391096046 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001806495 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691020153 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333673456 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.403470256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654244341 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661683125 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424095248 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852485722 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.110918703 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957966494 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372360964 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42059772 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410882269 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134867414 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014962952 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.72532713 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911652352 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058878419 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401647758 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699945332 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406031635 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410693436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68350997 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404177491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400450405 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634961827 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.022981656 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217795192 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.421042188 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.584073235 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.337724524 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626596049 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45551613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340129161 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400613548 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.835325069 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429649564 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531033741 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413011013 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.399147939 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410736925 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.168217384 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686233787 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408492274 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.402212237 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.382249427 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40532912 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506258411 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977728059 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428792958 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.077433424 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.751890684 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656980401 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402520425 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.389029105 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.406808294 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403250198 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120101638 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370939879 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423226199 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963860222 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.407666375 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.42223757 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408951438 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619181866 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614569846 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417934671 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631130784 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428041823 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425794647 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.30216588 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171814341 seconds)
  done (took 1688.137416184 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431734391 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.448183171 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.433728917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.478633189 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.47436561 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46750614 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.514621343 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434949025 seconds)
  done (took 52.995270263 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.404685686 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.564570947 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.437142555 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.41813984 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.413324342 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.420263469 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.884616772 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.422002997 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.415509687 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.414476765 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.417670897 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.404383064 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.087000945 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.432433931 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419232299 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.383895843 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.413980154 seconds)
  done (took 66.672967827 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.57616966 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.541030394 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.49477525 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.443496966 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.405905553 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.408255157 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.565406262 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.432288209 seconds)
  done (took 54.180540964 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418391482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418650602 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419247963 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419208019 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418963117 seconds)
  done (took 8.408830209 seconds)
done (took 2091.743720783 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410211256 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413226714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.409707436 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.412931281 seconds)
  done (took 6.961064278 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.384475833 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.128652611 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.387013209 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408271219 seconds)
  done (took 18.622907812 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.419560225 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.425607592 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.138449011 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065764934 seconds)
  done (took 5.519904173 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.155372231 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.168285499 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.153045709 seconds)
  done (took 7.791063527 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.407071167 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413379791 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.412396973 seconds)
  done (took 20.545375317 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701911423 seconds)
  done (took 3.015379763 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.554278333 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.603940622 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.723971219 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.731201839 seconds)
  done (took 7.926327822 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.794314536 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.781263429 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.592537377 seconds)
  done (took 6.481949904 seconds)
done (took 91.024865937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.350482266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408609431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.614851833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.320743884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.642555382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.616171491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.702079456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.283607207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.828090121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.818313602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.320556675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643371895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.868378799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.656306953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870208496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431091017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.642866589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.396523936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.012053809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.246342355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.712405746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.955375943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.151726475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.976389781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.637987707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.562229332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.538704858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431370367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.178661734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.560909174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564393104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41650061 seconds)
  done (took 195.675566709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417549176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410073548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410322897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408256281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.426974237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.425045665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409419509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412735214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.407855219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.425996433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408522052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431485678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408651646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426527241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430068314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.427624921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411508306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.408598134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409335814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409098157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427167854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408668833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426679863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409581563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411556463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.41148349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410289784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410941752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431100119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.409726759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435045486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411102061 seconds)
  done (took 206.645548725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.410911015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.411199526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411445804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.425883881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411045208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412412264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.413611444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.429427836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410504797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.425563625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422535587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411068683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412682745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430088939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411821904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411709058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411838393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428378853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428777512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411579116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.413598356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.440438518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411062367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.431233209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.443731651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411628431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.446811665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412036792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411647123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412080755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.432259459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429652589 seconds)
  done (took 206.757499732 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.668149897 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.418782771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.42001244 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.377203631 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.419461961 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.419483234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419136252 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611488917 seconds)
  done (took 15.073931679 seconds)
done (took 625.468280995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.758006489 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.461258806 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.622078952 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.440381185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.234412438 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460829461 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.4396601 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.616033932 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.353670281 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.621704647 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.667926988 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.457344643 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.810571444 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440318644 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.702145222 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542625919 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.35862409 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.484133987 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.763407562 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.99706182 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.705594038 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92111213 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.63538622 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.349692755 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.832266826 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90684119 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.179243675 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.344177362 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.456453598 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.768141086 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.095246226 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.444382958 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.485763794 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503937739 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.560215806 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.543582266 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.41173783 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.503022316 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.646612647 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680788274 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991851275 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.171091997 seconds)
  done (took 95.691263491 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.404403998 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.404125036 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.403821901 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.406105713 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.405979186 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.406054141 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.403836603 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.405402668 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.404886502 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.404211327 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.404759225 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.408359278 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.404481527 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.406876544 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.404925033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.405552111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.405398736 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.407567087 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.405414369 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.405069611 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.405611739 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.405149249 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.406329623 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.404820976 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.406291733 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.407129604 seconds)
  done (took 37.867461381 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.424964612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681995215 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.859553132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438682526 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.425280359 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430225754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.507318338 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428598754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.428525279 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.430087086 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586167834 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427547115 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46293435 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.874403927 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428962088 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425723707 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426418639 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.425512861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.688075461 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436039478 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531709387 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.427260564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.508519055 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439239355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.452450903 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427846981 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432447307 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.01605866 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.448011193 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.588171737 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.343051517 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.505860432 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.975441344 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.887029913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.279957137 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435790051 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.427713237 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.591853566 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42947561 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.427812234 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.509410263 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428545717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.85728854 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.102803648 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446145066 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.428582147 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.035720652 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611979756 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.684426696 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436883374 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885215379 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433000373 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.429830936 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430885852 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682799977 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435775606 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429106259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.041455606 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.452509398 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.51043947 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.429740793 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.428577653 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.694793011 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.429461205 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.683242262 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431610078 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438078073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.449082969 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.861386564 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434016365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13171526 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448977379 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.430299329 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589775088 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.683190297 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.070244489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.454243398 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.698559183 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.990528347 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.528387951 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434719069 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.007802282 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.532589488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.435547218 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.432335657 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433533576 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431399912 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476340283 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.510021995 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.068015983 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140517379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068273717 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.531837428 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438256993 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.432222268 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.044923911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450650364 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.430888193 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.855999339 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.12930585 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.450949623 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439893604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.130528339 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452159295 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.5151906 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437981592 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.872872442 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43419073 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.479216408 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.432639274 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.439823094 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456712483 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.515204756 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437655884 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434314777 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.101120614 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616755007 seconds)
  done (took 188.652026739 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.428376683 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.425757663 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.428632168 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.426075241 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.426865124 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436320494 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.427181817 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.426853687 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433030494 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.426054457 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.427418808 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.427295899 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.428406546 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.428555794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460866665 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435030259 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.038103942 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.428959382 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.427217834 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.427670872 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.238805146 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.427915626 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.429764921 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.428137593 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.428980847 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.429014479 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.434887676 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.430642003 seconds)
  done (took 154.795433007 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.435122949 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.01623477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.454762579 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.571166382 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456610064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.432317004 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.568843936 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.495183287 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.454609816 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.432439292 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432382328 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.747544695 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.436017945 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.968951677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.635264519 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.588018168 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.967054009 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453151437 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.431982926 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.433153604 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.573861473 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441437119 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.748592357 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021269702 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.455368086 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018466658 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420053717 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.436755552 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.435329052 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024520956 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451901605 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750682488 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.516818836 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498269217 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.04210939 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.986958045 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.987024475 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591292053 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.444699462 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.434871753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.434938001 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419437686 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.02270155 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456989404 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436999685 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.012834658 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456487414 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.438481066 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443692844 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435049609 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.499265983 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.51803832 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.773037787 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.032359869 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.53486707 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.448817029 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576163274 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.848990224 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.440415237 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.972267475 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418937929 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.031078853 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.457389354 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420054801 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.438541633 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.443949915 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.593015188 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.577402167 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.980444357 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456321274 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.971438939 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.611200227 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.435761309 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.437606251 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.439654737 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029499911 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.991681169 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.611160264 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.57718671 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.643431285 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421367127 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439460375 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421913464 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.519671016 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.438503298 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.033109416 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.993139994 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.457884848 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.44126874 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.441956082 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.440625346 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.625443181 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048531627 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.538473322 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.960408761 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.774763938 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.756896487 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440739976 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.501335392 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.457384728 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.760223552 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.441303931 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.499571715 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912370756 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.761678714 seconds)
  done (took 171.325314132 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.685347447 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.655205825 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.558666676 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.590230364 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.054847763 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015341302 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.750566706 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596538916 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553539264 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712266517 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.616038563 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529517955 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.660938384 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.520688002 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.201526727 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.531354101 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.553110724 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.592446407 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.602020289 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.470361062 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.151994194 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.733487267 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.641421765 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.35458003 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535317728 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224860102 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.018466531 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.031684527 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.623462221 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.7632095 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.989613989 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.595281026 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.416771697 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.154962594 seconds)
  done (took 69.028078744 seconds)
done (took 718.680837855 seconds)
SAVING RESULT...
DONE!
